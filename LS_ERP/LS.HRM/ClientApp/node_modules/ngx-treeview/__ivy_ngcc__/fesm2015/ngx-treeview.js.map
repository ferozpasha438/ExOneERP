{"version":3,"file":"ngx-treeview.js","sources":["../../../projects/ngx-treeview/src/lib/directives/dropdown.directive.ts","../../../projects/ngx-treeview/src/lib/directives/dropdown-menu.directive.ts","../../../projects/ngx-treeview/src/lib/directives/dropdown-toggle.directive.ts","../../../projects/ngx-treeview/src/lib/models/treeview-i18n.ts","../../../projects/ngx-treeview/src/lib/models/treeview-config.ts","../../../projects/ngx-treeview/src/lib/helpers/treeview-helper.ts","../../../projects/ngx-treeview/src/lib/models/treeview-item.ts","../../../projects/ngx-treeview/src/lib/helpers/treeview-event-parser.ts","../../../projects/ngx-treeview/src/lib/components/treeview/treeview.component.ts","../../../projects/ngx-treeview/src/lib/components/dropdown-treeview/dropdown-treeview.component.ts","../../../projects/ngx-treeview/src/lib/components/treeview-item/treeview-item.component.ts","../../../projects/ngx-treeview/src/lib/pipes/treeview.pipe.ts","../../../projects/ngx-treeview/src/lib/treeview.module.ts","../../../projects/ngx-treeview/src/public-api.ts","../../../projects/ngx-treeview/src/ngx-treeview.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport { isNil } from 'lodash';\r\n\r\n@Directive({\r\n  selector: '[ngxDropdown]',\r\n  exportAs: 'ngxDropdown'\r\n})\r\nexport class DropdownDirective {\r\n  toggleElement: any;\r\n  @Input('open') internalOpen = false;\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  @HostBinding('class.show') get isOpen(): boolean {\r\n    return this.internalOpen;\r\n  }\r\n\r\n  @HostListener('keyup.esc')\r\n  onKeyupEsc(): void {\r\n    this.close();\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: MouseEvent): void {\r\n    if (event.button !== 2 && !this.isEventFromToggle(event)) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  open(): void {\r\n    if (!this.internalOpen) {\r\n      this.internalOpen = true;\r\n      this.openChange.emit(true);\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    if (this.internalOpen) {\r\n      this.internalOpen = false;\r\n      this.openChange.emit(false);\r\n    }\r\n  }\r\n\r\n  toggle(): void {\r\n    if (this.isOpen) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  private isEventFromToggle(event: MouseEvent): boolean {\r\n    return !isNil(this.toggleElement) && this.toggleElement.contains(event.target);\r\n  }\r\n}\r\n","import { Directive, HostBinding } from '@angular/core';\r\nimport { DropdownDirective } from './dropdown.directive';\r\n\r\n@Directive({\r\n  selector: '[ngxDropdownMenu]',\r\n  host: {\r\n    '[class.dropdown-menu]': 'true',\r\n    '[class.show]': 'dropdown.isOpen'\r\n  }\r\n})\r\nexport class DropdownMenuDirective {\r\n  constructor(\r\n    public dropdown: DropdownDirective\r\n  ) { }\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { DropdownDirective } from './dropdown.directive';\r\n\r\n@Directive({\r\n  selector: '[ngxDropdownToggle]',\r\n  host: {\r\n    class: 'dropdown-toggle',\r\n    'aria-haspopup': 'true',\r\n    '[attr.aria-expanded]': 'dropdown.isOpen',\r\n    '(click)': 'dropdown.toggle()'\r\n  }\r\n})\r\nexport class DropdownToggleDirective {\r\n  constructor(\r\n    public dropdown: DropdownDirective,\r\n    elementRef: ElementRef\r\n  ) {\r\n    dropdown.toggleElement = elementRef.nativeElement;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TreeviewSelection } from './treeview-item';\r\n\r\n@Injectable()\r\nexport abstract class TreeviewI18n {\r\n  abstract getText(selection: TreeviewSelection): string;\r\n  abstract getAllCheckboxText(): string;\r\n  abstract getFilterPlaceholder(): string;\r\n  abstract getFilterNoItemsFoundText(): string;\r\n  abstract getTooltipCollapseExpandText(isCollapse: boolean): string;\r\n}\r\n\r\n@Injectable()\r\nexport class DefaultTreeviewI18n extends TreeviewI18n {\r\n  getText(selection: TreeviewSelection): string {\r\n    if (selection.uncheckedItems.length === 0) {\r\n      if (selection.checkedItems.length > 0) {\r\n        return this.getAllCheckboxText();\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n\r\n    switch (selection.checkedItems.length) {\r\n      case 0:\r\n        return 'Select options';\r\n      case 1:\r\n        return selection.checkedItems[0].text;\r\n      default:\r\n        return `${selection.checkedItems.length} options selected`;\r\n    }\r\n  }\r\n\r\n  getAllCheckboxText(): string {\r\n    return 'All';\r\n  }\r\n\r\n  getFilterPlaceholder(): string {\r\n    return 'Filter';\r\n  }\r\n\r\n  getFilterNoItemsFoundText(): string {\r\n    return 'No items found';\r\n  }\r\n\r\n  getTooltipCollapseExpandText(isCollapse: boolean): string {\r\n    return isCollapse ? 'Expand' : 'Collapse';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TreeviewConfig {\r\n  hasAllCheckBox = true;\r\n  hasFilter = false;\r\n  hasCollapseExpand = false;\r\n  decoupleChildFromParent = false;\r\n  maxHeight = 500;\r\n\r\n  get hasDivider(): boolean {\r\n    return this.hasFilter || this.hasAllCheckBox || this.hasCollapseExpand;\r\n  }\r\n\r\n  public static create(fields?: {\r\n    hasAllCheckBox?: boolean,\r\n    hasFilter?: boolean,\r\n    hasCollapseExpand?: boolean,\r\n    decoupleChildFromParent?: boolean\r\n    maxHeight?: number,\r\n  }): TreeviewConfig {\r\n    const config = new TreeviewConfig();\r\n    Object.assign(config, fields);\r\n    return config;\r\n  }\r\n}\r\n","import { concat, isNil, pull } from 'lodash';\r\nimport { TreeviewItem } from '../models/treeview-item';\r\n\r\nexport const TreeviewHelper = {\r\n  findItem,\r\n  findItemInList,\r\n  findParent,\r\n  removeItem,\r\n  concatSelection\r\n};\r\n\r\nfunction findItem(root: TreeviewItem, value: any): TreeviewItem {\r\n  if (isNil(root)) {\r\n    return undefined;\r\n  }\r\n\r\n  if (root.value === value) {\r\n    return root;\r\n  }\r\n\r\n  if (root.children) {\r\n    for (const child of root.children) {\r\n      const foundItem = findItem(child, value);\r\n      if (foundItem) {\r\n        return foundItem;\r\n      }\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction findItemInList(list: TreeviewItem[], value: any): TreeviewItem {\r\n  if (isNil(list)) {\r\n    return undefined;\r\n  }\r\n\r\n  for (const item of list) {\r\n    const foundItem = findItem(item, value);\r\n    if (foundItem) {\r\n      return foundItem;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction findParent(root: TreeviewItem, item: TreeviewItem): TreeviewItem {\r\n  if (isNil(root) || isNil(root.children)) {\r\n    return undefined;\r\n  }\r\n\r\n  for (const child of root.children) {\r\n    if (child === item) {\r\n      return root;\r\n    } else {\r\n      const parent = findParent(child, item);\r\n      if (parent) {\r\n        return parent;\r\n      }\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction removeItem(root: TreeviewItem, item: TreeviewItem): boolean {\r\n  const parent = findParent(root, item);\r\n  if (parent) {\r\n    pull(parent.children, item);\r\n    if (parent.children.length === 0) {\r\n      parent.children = undefined;\r\n    } else {\r\n      parent.correctChecked();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction concatSelection(items: TreeviewItem[], checked: TreeviewItem[], unchecked: TreeviewItem[]): { [k: string]: TreeviewItem[] } {\r\n  let checkedItems = [...checked];\r\n  let uncheckedItems = [...unchecked];\r\n  for (const item of items) {\r\n    const selection = item.getSelection();\r\n    checkedItems = concat(checkedItems, selection.checkedItems);\r\n    uncheckedItems = concat(uncheckedItems, selection.uncheckedItems);\r\n  }\r\n  return {\r\n    checked: checkedItems,\r\n    unchecked: uncheckedItems\r\n  };\r\n}\r\n","import { isBoolean, isNil, isString } from 'lodash';\r\nimport { TreeviewHelper } from '../helpers/treeview-helper';\r\n\r\nexport interface TreeviewSelection {\r\n  checkedItems: TreeviewItem[];\r\n  uncheckedItems: TreeviewItem[];\r\n}\r\n\r\nexport interface TreeItem {\r\n  text: string;\r\n  value: any;\r\n  disabled?: boolean;\r\n  checked?: boolean;\r\n  collapsed?: boolean;\r\n  children?: TreeItem[];\r\n}\r\n\r\nexport class TreeviewItem {\r\n  private internalDisabled = false;\r\n  private internalChecked = true;\r\n  private internalCollapsed = false;\r\n  private internalChildren: TreeviewItem[];\r\n  text: string;\r\n  value: any;\r\n\r\n  constructor(item: TreeItem, autoCorrectChecked = false) {\r\n    if (isNil(item)) {\r\n      throw new Error('Item must be defined');\r\n    }\r\n    if (isString(item.text)) {\r\n      this.text = item.text;\r\n    } else {\r\n      throw new Error('A text of item must be string object');\r\n    }\r\n    this.value = item.value;\r\n    if (isBoolean(item.checked)) {\r\n      this.checked = item.checked;\r\n    }\r\n    if (isBoolean(item.collapsed)) {\r\n      this.collapsed = item.collapsed;\r\n    }\r\n    if (isBoolean(item.disabled)) {\r\n      this.disabled = item.disabled;\r\n    }\r\n    if (!isNil(item.children) && item.children.length > 0) {\r\n      this.children = item.children.map(child => {\r\n        if (this.disabled === true) {\r\n          child.disabled = true;\r\n        }\r\n\r\n        return new TreeviewItem(child);\r\n      });\r\n    }\r\n\r\n    if (autoCorrectChecked) {\r\n      this.correctChecked();\r\n    }\r\n  }\r\n\r\n  get checked(): boolean {\r\n    return this.internalChecked;\r\n  }\r\n\r\n  set checked(value: boolean) {\r\n    if (!this.internalDisabled) {\r\n      if (this.internalChecked !== value) {\r\n        this.internalChecked = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  get indeterminate(): boolean {\r\n    return this.checked === undefined;\r\n  }\r\n\r\n  setCheckedRecursive(value: boolean): void {\r\n    if (!this.internalDisabled) {\r\n      this.internalChecked = value;\r\n      if (!isNil(this.internalChildren)) {\r\n        this.internalChildren.forEach(child => child.setCheckedRecursive(value));\r\n      }\r\n    }\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.internalDisabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    if (this.internalDisabled !== value) {\r\n      this.internalDisabled = value;\r\n      if (!isNil(this.internalChildren)) {\r\n        this.internalChildren.forEach(child => child.disabled = value);\r\n      }\r\n    }\r\n  }\r\n\r\n  get collapsed(): boolean {\r\n    return this.internalCollapsed;\r\n  }\r\n\r\n  set collapsed(value: boolean) {\r\n    if (this.internalCollapsed !== value) {\r\n      this.internalCollapsed = value;\r\n    }\r\n  }\r\n\r\n  setCollapsedRecursive(value: boolean): void {\r\n    this.internalCollapsed = value;\r\n    if (!isNil(this.internalChildren)) {\r\n      this.internalChildren.forEach(child => child.setCollapsedRecursive(value));\r\n    }\r\n  }\r\n\r\n  get children(): TreeviewItem[] {\r\n    return this.internalChildren;\r\n  }\r\n\r\n  set children(value: TreeviewItem[]) {\r\n    if (this.internalChildren !== value) {\r\n      if (!isNil(value) && value.length === 0) {\r\n        throw new Error('Children must be not an empty array');\r\n      }\r\n      this.internalChildren = value;\r\n      if (!isNil(this.internalChildren)) {\r\n        let checked = null;\r\n        this.internalChildren.forEach(child => {\r\n          if (checked === null) {\r\n            checked = child.checked;\r\n          } else {\r\n            if (child.checked !== checked) {\r\n              checked = undefined;\r\n              return;\r\n            }\r\n          }\r\n        });\r\n        this.internalChecked = checked;\r\n      }\r\n    }\r\n  }\r\n\r\n  getSelection(): TreeviewSelection {\r\n    let checkedItems: TreeviewItem[] = [];\r\n    let uncheckedItems: TreeviewItem[] = [];\r\n    if (isNil(this.internalChildren)) {\r\n      if (this.internalChecked) {\r\n        checkedItems.push(this);\r\n      } else {\r\n        uncheckedItems.push(this);\r\n      }\r\n    } else {\r\n      const selection = TreeviewHelper.concatSelection(this.internalChildren, checkedItems, uncheckedItems);\r\n      checkedItems = selection.checked;\r\n      uncheckedItems = selection.unchecked;\r\n    }\r\n\r\n    return {\r\n      checkedItems,\r\n      uncheckedItems\r\n    };\r\n  }\r\n\r\n  correctChecked(): void {\r\n    this.internalChecked = this.getCorrectChecked();\r\n  }\r\n\r\n  private getCorrectChecked(): boolean {\r\n    let checked: boolean = null;\r\n    if (!isNil(this.internalChildren)) {\r\n      for (const child of this.internalChildren) {\r\n        child.internalChecked = child.getCorrectChecked();\r\n        if (checked === null) {\r\n          checked = child.internalChecked;\r\n        } else if (checked !== child.internalChecked) {\r\n          checked = undefined;\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      checked = this.checked;\r\n    }\r\n\r\n    return checked;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { isNil } from 'lodash';\r\nimport { TreeviewItem } from '../models/treeview-item';\r\nimport { TreeviewComponent } from '../components/treeview/treeview.component';\r\n\r\n@Injectable()\r\nexport abstract class TreeviewEventParser {\r\n  abstract getSelectedChange(component: TreeviewComponent): any[];\r\n}\r\n\r\n@Injectable()\r\nexport class DefaultTreeviewEventParser extends TreeviewEventParser {\r\n  getSelectedChange(component: TreeviewComponent): any[] {\r\n    const checkedItems = component.selection.checkedItems;\r\n    if (!isNil(checkedItems)) {\r\n      return checkedItems.map(item => item.value);\r\n    }\r\n\r\n    return [];\r\n  }\r\n}\r\n\r\nexport interface DownlineTreeviewItem {\r\n  item: TreeviewItem;\r\n  parent: DownlineTreeviewItem;\r\n}\r\n\r\n@Injectable()\r\nexport class DownlineTreeviewEventParser extends TreeviewEventParser {\r\n  getSelectedChange(component: TreeviewComponent): any[] {\r\n    const items = component.items;\r\n    if (!isNil(items)) {\r\n      let result: DownlineTreeviewItem[] = [];\r\n      items.forEach(item => {\r\n        const links = this.getLinks(item, null);\r\n        if (!isNil(links)) {\r\n          result = result.concat(links);\r\n        }\r\n      });\r\n\r\n      return result;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private getLinks(item: TreeviewItem, parent: DownlineTreeviewItem): DownlineTreeviewItem[] {\r\n    if (!isNil(item.children)) {\r\n      const link = {\r\n        item,\r\n        parent\r\n      };\r\n      let result: DownlineTreeviewItem[] = [];\r\n      item.children.forEach(child => {\r\n        const links = this.getLinks(child, link);\r\n        if (!isNil(links)) {\r\n          result = result.concat(links);\r\n        }\r\n      });\r\n\r\n      return result;\r\n    }\r\n\r\n    if (item.checked) {\r\n      return [{\r\n        item,\r\n        parent\r\n      }];\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class OrderDownlineTreeviewEventParser extends TreeviewEventParser {\r\n  private currentDownlines: DownlineTreeviewItem[] = [];\r\n  private parser = new DownlineTreeviewEventParser();\r\n\r\n  getSelectedChange(component: TreeviewComponent): any[] {\r\n    const newDownlines: DownlineTreeviewItem[] = this.parser.getSelectedChange(component);\r\n    if (this.currentDownlines.length === 0) {\r\n      this.currentDownlines = newDownlines;\r\n    } else {\r\n      const intersectDownlines: DownlineTreeviewItem[] = [];\r\n      this.currentDownlines.forEach(downline => {\r\n        let foundIndex = -1;\r\n        const length = newDownlines.length;\r\n        for (let i = 0; i < length; i++) {\r\n          if (downline.item.value === newDownlines[i].item.value) {\r\n            foundIndex = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (foundIndex !== -1) {\r\n          intersectDownlines.push(newDownlines[foundIndex]);\r\n          newDownlines.splice(foundIndex, 1);\r\n        }\r\n      });\r\n\r\n      this.currentDownlines = intersectDownlines.concat(newDownlines);\r\n    }\r\n\r\n    return this.currentDownlines;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, SimpleChanges, OnChanges, TemplateRef, OnInit } from '@angular/core';\r\nimport { isNil, includes } from 'lodash';\r\nimport { TreeviewI18n } from '../../models/treeview-i18n';\r\nimport { TreeviewItem, TreeviewSelection } from '../../models/treeview-item';\r\nimport { TreeviewConfig } from '../../models/treeview-config';\r\nimport { TreeviewHeaderTemplateContext } from '../../models/treeview-header-template-context';\r\nimport { TreeviewItemTemplateContext } from '../../models/treeview-item-template-context';\r\nimport { TreeviewHelper } from '../../helpers/treeview-helper';\r\nimport { TreeviewEventParser } from '../../helpers/treeview-event-parser';\r\n\r\nclass FilterTreeviewItem extends TreeviewItem {\r\n  private readonly refItem: TreeviewItem;\r\n  constructor(item: TreeviewItem) {\r\n    super({\r\n      text: item.text,\r\n      value: item.value,\r\n      disabled: item.disabled,\r\n      checked: item.checked,\r\n      collapsed: item.collapsed,\r\n      children: item.children\r\n    });\r\n    this.refItem = item;\r\n  }\r\n\r\n  updateRefChecked(): void {\r\n    this.children.forEach(child => {\r\n      if (child instanceof FilterTreeviewItem) {\r\n        child.updateRefChecked();\r\n      }\r\n    });\r\n\r\n    let refChecked = this.checked;\r\n    if (refChecked) {\r\n      for (const refChild of this.refItem.children) {\r\n        if (!refChild.checked) {\r\n          refChecked = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.refItem.checked = refChecked;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-treeview',\r\n  templateUrl: './treeview.component.html',\r\n  styleUrls: ['./treeview.component.scss']\r\n})\r\nexport class TreeviewComponent implements OnChanges, OnInit {\r\n  @Input() headerTemplate: TemplateRef<TreeviewHeaderTemplateContext>;\r\n  @Input() itemTemplate: TemplateRef<TreeviewItemTemplateContext>;\r\n  @Input() items: TreeviewItem[];\r\n  @Input() config: TreeviewConfig;\r\n  @Output() selectedChange = new EventEmitter<any[]>();\r\n  @Output() filterChange = new EventEmitter<string>();\r\n  headerTemplateContext: TreeviewHeaderTemplateContext;\r\n  allItem: TreeviewItem;\r\n  filterText = '';\r\n  filterItems: TreeviewItem[];\r\n  selection: TreeviewSelection;\r\n\r\n  constructor(\r\n    public i18n: TreeviewI18n,\r\n    private defaultConfig: TreeviewConfig,\r\n    private eventParser: TreeviewEventParser\r\n  ) {\r\n    this.config = this.defaultConfig;\r\n    this.allItem = new TreeviewItem({ text: 'All', value: undefined });\r\n  }\r\n\r\n  get hasFilterItems(): boolean {\r\n    return !isNil(this.filterItems) && this.filterItems.length > 0;\r\n  }\r\n\r\n  get maxHeight(): string {\r\n    return `${this.config.maxHeight}`;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createHeaderTemplateContext();\r\n    this.generateSelection();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const itemsSimpleChange = changes.items;\r\n    if (!isNil(itemsSimpleChange) && !isNil(this.items)) {\r\n      this.updateFilterItems();\r\n      this.updateCollapsedOfAll();\r\n      this.raiseSelectedChange();\r\n    }\r\n  }\r\n\r\n  onAllCollapseExpand(): void {\r\n    this.allItem.collapsed = !this.allItem.collapsed;\r\n    this.filterItems.forEach(item => item.setCollapsedRecursive(this.allItem.collapsed));\r\n  }\r\n\r\n  onFilterTextChange(text: string): void {\r\n    this.filterText = text;\r\n    this.filterChange.emit(text);\r\n    this.updateFilterItems();\r\n  }\r\n\r\n  onAllCheckedChange(): void {\r\n    const checked = this.allItem.checked;\r\n    this.filterItems.forEach(item => {\r\n      item.setCheckedRecursive(checked);\r\n      if (item instanceof FilterTreeviewItem) {\r\n        item.updateRefChecked();\r\n      }\r\n    });\r\n\r\n    this.raiseSelectedChange();\r\n  }\r\n\r\n  onItemCheckedChange(item: TreeviewItem, checked: boolean): void {\r\n    if (item instanceof FilterTreeviewItem) {\r\n      item.updateRefChecked();\r\n    }\r\n\r\n    this.updateCheckedOfAll();\r\n    this.raiseSelectedChange();\r\n  }\r\n\r\n  raiseSelectedChange(): void {\r\n    this.generateSelection();\r\n    const values = this.eventParser.getSelectedChange(this);\r\n    setTimeout(() => {\r\n      this.selectedChange.emit(values);\r\n    });\r\n  }\r\n\r\n  private createHeaderTemplateContext(): void {\r\n    this.headerTemplateContext = {\r\n      config: this.config,\r\n      item: this.allItem,\r\n      onCheckedChange: () => this.onAllCheckedChange(),\r\n      onCollapseExpand: () => this.onAllCollapseExpand(),\r\n      onFilterTextChange: (text) => this.onFilterTextChange(text)\r\n    };\r\n  }\r\n\r\n  private generateSelection(): void {\r\n    let checkedItems: TreeviewItem[] = [];\r\n    let uncheckedItems: TreeviewItem[] = [];\r\n    if (!isNil(this.items)) {\r\n      const selection = TreeviewHelper.concatSelection(this.items, checkedItems, uncheckedItems);\r\n      checkedItems = selection.checked;\r\n      uncheckedItems = selection.unchecked;\r\n    }\r\n\r\n    this.selection = {\r\n      checkedItems,\r\n      uncheckedItems\r\n    };\r\n  }\r\n\r\n  private updateFilterItems(): void {\r\n    if (this.filterText !== '') {\r\n      const filterItems: TreeviewItem[] = [];\r\n      const filterText = this.filterText.toLowerCase();\r\n      this.items.forEach(item => {\r\n        const newItem = this.filterItem(item, filterText);\r\n        if (!isNil(newItem)) {\r\n          filterItems.push(newItem);\r\n        }\r\n      });\r\n      this.filterItems = filterItems;\r\n    } else {\r\n      this.filterItems = this.items;\r\n    }\r\n\r\n    this.updateCheckedOfAll();\r\n  }\r\n\r\n  private filterItem(item: TreeviewItem, filterText: string): TreeviewItem {\r\n    const isMatch = includes(item.text.toLowerCase(), filterText);\r\n    if (isMatch) {\r\n      return item;\r\n    } else {\r\n      if (!isNil(item.children)) {\r\n        const children: TreeviewItem[] = [];\r\n        item.children.forEach(child => {\r\n          const newChild = this.filterItem(child, filterText);\r\n          if (!isNil(newChild)) {\r\n            children.push(newChild);\r\n          }\r\n        });\r\n        if (children.length > 0) {\r\n          const newItem = new FilterTreeviewItem(item);\r\n          newItem.collapsed = false;\r\n          newItem.children = children;\r\n          return newItem;\r\n        }\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  private updateCheckedOfAll(): void {\r\n    let itemChecked: boolean = null;\r\n    for (const filterItem of this.filterItems) {\r\n      if (itemChecked === null) {\r\n        itemChecked = filterItem.checked;\r\n      } else if (itemChecked !== filterItem.checked) {\r\n        itemChecked = undefined;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (itemChecked === null) {\r\n      itemChecked = false;\r\n    }\r\n\r\n    this.allItem.checked = itemChecked;\r\n  }\r\n\r\n  private updateCollapsedOfAll(): void {\r\n    let hasItemExpanded = false;\r\n    for (const filterItem of this.filterItems) {\r\n      if (!filterItem.collapsed) {\r\n        hasItemExpanded = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.allItem.collapsed = !hasItemExpanded;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TreeviewI18n } from '../../models/treeview-i18n';\r\nimport { TreeviewItem } from '../../models/treeview-item';\r\nimport { TreeviewConfig } from '../../models/treeview-config';\r\nimport { TreeviewComponent } from '../treeview/treeview.component';\r\nimport { TreeviewHeaderTemplateContext } from '../../models/treeview-header-template-context';\r\nimport { TreeviewItemTemplateContext } from '../../models/treeview-item-template-context';\r\n\r\n@Component({\r\n  selector: 'ngx-dropdown-treeview',\r\n  templateUrl: './dropdown-treeview.component.html',\r\n  styleUrls: ['./dropdown-treeview.component.scss']\r\n})\r\nexport class DropdownTreeviewComponent {\r\n  @Input() buttonClass = 'btn-outline-secondary';\r\n  @Input() headerTemplate: TemplateRef<TreeviewHeaderTemplateContext>;\r\n  @Input() itemTemplate: TemplateRef<TreeviewItemTemplateContext>;\r\n  @Input() items: TreeviewItem[];\r\n  @Input() config: TreeviewConfig;\r\n  @Output() selectedChange = new EventEmitter<any[]>(true);\r\n  @Output() filterChange = new EventEmitter<string>();\r\n  @ViewChild(TreeviewComponent, { static: false }) treeviewComponent: TreeviewComponent;\r\n  buttonLabel: string;\r\n\r\n  constructor(\r\n    public i18n: TreeviewI18n,\r\n    private defaultConfig: TreeviewConfig\r\n  ) {\r\n    this.config = this.defaultConfig;\r\n  }\r\n\r\n  onSelectedChange(values: any[]): void {\r\n    this.buttonLabel = this.i18n.getText(this.treeviewComponent.selection);\r\n    this.selectedChange.emit(values);\r\n  }\r\n\r\n  onFilterChange(text: string): void {\r\n    this.filterChange.emit(text);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\nimport { isNil } from 'lodash';\r\nimport { TreeviewItem } from '../../models/treeview-item';\r\nimport { TreeviewConfig } from '../../models/treeview-config';\r\nimport { TreeviewItemTemplateContext } from '../../models/treeview-item-template-context';\r\n\r\n@Component({\r\n  selector: 'ngx-treeview-item',\r\n  templateUrl: './treeview-item.component.html',\r\n  styleUrls: ['./treeview-item.component.scss']\r\n})\r\nexport class TreeviewItemComponent {\r\n  @Input() config: TreeviewConfig;\r\n  @Input() template: TemplateRef<TreeviewItemTemplateContext>;\r\n  @Input() item: TreeviewItem;\r\n  @Output() checkedChange = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n    private defaultConfig: TreeviewConfig\r\n  ) {\r\n    this.config = this.defaultConfig;\r\n  }\r\n\r\n  onCollapseExpand = () => {\r\n    this.item.collapsed = !this.item.collapsed;\r\n  }\r\n\r\n  onCheckedChange = () => {\r\n    const checked = this.item.checked;\r\n    if (!isNil(this.item.children) && !this.config.decoupleChildFromParent) {\r\n      this.item.children.forEach(child => child.setCheckedRecursive(checked));\r\n    }\r\n    this.checkedChange.emit(checked);\r\n  }\r\n\r\n  onChildCheckedChange(child: TreeviewItem, checked: boolean): void {\r\n    if (!this.config.decoupleChildFromParent) {\r\n      let itemChecked: boolean = null;\r\n      for (const childItem of this.item.children) {\r\n        if (itemChecked === null) {\r\n          itemChecked = childItem.checked;\r\n        } else if (itemChecked !== childItem.checked) {\r\n          itemChecked = undefined;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (itemChecked === null) {\r\n        itemChecked = false;\r\n      }\r\n\r\n      if (this.item.checked !== itemChecked) {\r\n        this.item.checked = itemChecked;\r\n      }\r\n\r\n    }\r\n\r\n    this.checkedChange.emit(checked);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isNil } from 'lodash';\r\nimport { TreeviewItem } from '../models/treeview-item';\r\n\r\n@Pipe({\r\n  name: 'ngxTreeview'\r\n})\r\nexport class TreeviewPipe implements PipeTransform {\r\n  transform(objects: any[], textField: string): TreeviewItem[] {\r\n    if (isNil(objects)) {\r\n      return undefined;\r\n    }\r\n\r\n    return objects.map(object => new TreeviewItem({ text: object[textField], value: object }));\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DropdownDirective } from './directives/dropdown.directive';\r\nimport { DropdownMenuDirective } from './directives/dropdown-menu.directive';\r\nimport { DropdownToggleDirective } from './directives/dropdown-toggle.directive';\r\nimport { DropdownTreeviewComponent } from './components/dropdown-treeview/dropdown-treeview.component';\r\nimport { TreeviewComponent } from './components/treeview/treeview.component';\r\nimport { TreeviewItemComponent } from './components/treeview-item/treeview-item.component';\r\nimport { TreeviewPipe } from './pipes/treeview.pipe';\r\nimport { TreeviewI18n, DefaultTreeviewI18n } from './models/treeview-i18n';\r\nimport { TreeviewConfig } from './models/treeview-config';\r\nimport { TreeviewEventParser, DefaultTreeviewEventParser } from './helpers/treeview-event-parser';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    TreeviewComponent,\r\n    TreeviewItemComponent,\r\n    TreeviewPipe,\r\n    DropdownDirective,\r\n    DropdownMenuDirective,\r\n    DropdownToggleDirective,\r\n    DropdownTreeviewComponent\r\n  ], exports: [\r\n    TreeviewComponent,\r\n    TreeviewPipe,\r\n    DropdownTreeviewComponent\r\n  ]\r\n})\r\nexport class TreeviewModule {\r\n  static forRoot(): ModuleWithProviders<TreeviewModule> {\r\n    return {\r\n      ngModule: TreeviewModule,\r\n      providers: [\r\n        TreeviewConfig,\r\n        { provide: TreeviewI18n, useClass: DefaultTreeviewI18n },\r\n        { provide: TreeviewEventParser, useClass: DefaultTreeviewEventParser }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/*\n * Public API Surface of ngx-treeview\n */\n\nexport * from './lib/treeview.module';\nexport * from './lib/components/treeview/treeview.component';\nexport * from './lib/components/dropdown-treeview/dropdown-treeview.component';\nexport * from './lib/pipes/treeview.pipe';\nexport * from './lib/directives/dropdown-toggle.directive';\nexport * from './lib/directives/dropdown.directive';\nexport * from './lib/models/treeview-item';\nexport * from './lib/models/treeview-config';\nexport * from './lib/models/treeview-i18n';\nexport * from './lib/models/treeview-item-template-context';\nexport * from './lib/helpers/treeview-event-parser';\nexport * from './lib/helpers/treeview-helper';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {TreeviewItemComponent as ɵa} from './lib/components/treeview-item/treeview-item.component';\nexport {DropdownMenuDirective as ɵb} from './lib/directives/dropdown-menu.directive';"]}