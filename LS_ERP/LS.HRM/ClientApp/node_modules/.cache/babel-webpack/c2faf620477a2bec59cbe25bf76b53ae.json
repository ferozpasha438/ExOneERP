{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DBOperation } from '../../../services/utility.constants';\nimport { DeleteConfirmDialogComponent } from '../../../sharedcomponent/delete-confirm-dialog';\nimport { AdjustmentsComponent } from '../../adjustments/adjustments.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../services/api.service\";\nimport * as i5 from \"../../../api-authorization/AuthorizeService\";\nimport * as i6 from \"../../../services/utility.service\";\nimport * as i7 from \"../../../services/notification.service\";\nimport * as i8 from \"../../../sharedcomponent/ValidationService\";\nimport * as i9 from \"../../../sharedcomponent/pagination.service\";\nimport * as i10 from \"@angular/material/dialog\";\nimport * as i11 from \"@ng-select/ng-select\";\nimport * as i12 from \"../../../sharedcomponent/ValidationMessagesComponent\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"@ngx-translate/core\";\n\nfunction AddupdateadjacementComponent_tr_134_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 39);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 39);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\", 29);\n    i0.ɵɵelementStart(16, \"i\", 40);\n    i0.ɵɵlistener(\"click\", function AddupdateadjacementComponent_tr_134_Template_i_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.editInvoiceItem(item_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \" \\u00A0 \");\n    i0.ɵɵelementStart(18, \"i\", 41);\n    i0.ɵɵlistener(\"click\", function AddupdateadjacementComponent_tr_134_Template_i_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.deleteInvoiceItem(item_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \" \\u00A0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.tranItemCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.tranItemName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.tranItemQty);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.tranItemUnit);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.tranUOMFactor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.tranItemCost);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.tranTotCost);\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nexport let AddupdateadjacementComponent = /*#__PURE__*/(() => {\n  class AddupdateadjacementComponent {\n    /*  itemTaxPer: string = '';*/\n    constructor(fb, http, router, apiService, authService, utilService, notifyService, validationService, pageService, dialog, dialogRef) {\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.notifyService = notifyService;\n      this.validationService = validationService;\n      this.pageService = pageService;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef; //@ViewChild(MatPaginator) paginator: MatPaginator;\n      //@ViewChild(MatSort) sort: MatSort;\n\n      /* displayedColumns: string[] = [];*/\n\n      /*  displayedColumns: string[] = ['request', 'vendor', 'docnum', 'branch', 'amount', 'vat', 'reference', 'Actions'];*/\n\n      this.displayedColumns = ['tranNumber', 'tranDate', 'tranDocNumber', 'tranReference', 'tranLocation', 'tranToLocation', 'tranTotalCost', 'Actions'];\n      this.searchValue = '';\n      this.sortingOrder = 'id desc';\n      this.productId = 0;\n      this.quantity = 0;\n      this.price = 0;\n      this.vat = 0;\n      this.vatAmount = 0;\n      this.total = 0;\n      this.unitType = '';\n      this.description = '';\n      this.product = '';\n      this.grandTotal = 0;\n      this.grandVatTotal = 0;\n      this.grandInvoiceTotal = 0;\n      this.grandTotalStr = '';\n      this.grandVatTotalStr = '';\n      this.grandInvoiceTotalStr = '';\n      this.sequence = 1;\n      this.editsequence = 0;\n      this.listOfInvoices = [];\n      this.canShowNotes = false;\n      this.canShowRemarks = false; //searchValue: string = '';\n\n      this.isLoading = false;\n      this.isReadOnly = false;\n      this.id = 0;\n      this.itemTaxPer = '';\n      this.TranUserList = [];\n      this.tranLocationList = [];\n      this.tranToLocationList = [];\n      this.tranInvAccountList = [];\n      this.tranInvAdjAccountList = [];\n      this.jVNumList = [];\n      this.ItemCodeList = [];\n      this.BarcodeList = [];\n      this.UOMList = [];\n      this.tranBranchList = [];\n      this.ItemTrackingList = [{\n        value: 1,\n        text: \"Yes\"\n      }, {\n        value: 0,\n        text: \"NO\"\n      }]; //ItemTranstypeList = [\n      //  { value: 1, text: \"Purchase Request\" },\n      //  { value: 2, text: \"Purchase Order\" }\n      //]\n\n      this.tranItemCode = 0;\n      this.tranBarcode = '';\n      this.tranItemName = '';\n      this.tranItemName2 = '';\n      this.tranItemQty = 0;\n      this.tranItemUnit = '';\n      this.tranUOMFactor = '';\n      this.tranItemCost = 0;\n      this.tranTotCost = 0;\n      this.itemAttribute1 = '';\n      this.itemAttribute2 = '';\n      this.remarks = '';\n      this.iNVAcc = '';\n      this.iNVADJAcc = '';\n      this.discPer = '';\n      this.DiscPerc = 0;\n      this.discAmt = 0;\n      this.tranItemUnitCode = '';\n      this.taxAmount = 0;\n      this.itemTracking = 0;\n      this.itemTax = '';\n    }\n\n    ngOnInit() {\n      this.initialLoading();\n      this.setForm();\n      this.Users();\n      this.FromLocation();\n      this.Branch();\n      this.Accounts();\n      this.AdjAccounts();\n      this.JVNumber();\n      this.loadItemCode();\n      this.loadbarCode();\n      this.loadUnitCode();\n      this.form.patchValue({\n        trantype: \"3\"\n      });\n      if (this.id > 0) this.edit();\n    }\n\n    onSortOrder(sort) {\n      this.totalItemsCount = 0;\n      this.sortingOrder = sort.active + ' ' + sort.direction;\n      this.loadUser(0, this.pageService.pageCount, \"\", this.sortingOrder);\n    }\n\n    onPageSwitch(event) {\n      this.pageService.change(event);\n      this.loadUser(event.pageIndex, event.pageSize, \"\", this.sortingOrder);\n    }\n\n    loadUser(page, pageCount, query, orderBy) {\n      //this.apiService.getPagination('', this.utilService.getQueryString(page, pageCount, query, orderBy)).subscribe(result => {\n      //  this.totalItemsCount = 0;\n      //  //this.forecasts = result.items;\n      this.data = new MatTableDataSource(this.getData()); //  this.data = new MatTableDataSource(result.items);\n\n      this.totalItemsCount = 2; //  //this.data.data = this.forecasts;\n      //  this.data.paginator = this.paginator;\n      //  this.data.sort = this.sort;\n      //}, error => console.error(error));\n    }\n\n    Users() {\n      this.apiService.getall('InventoryAdjustments/GetAdjustmentsUserSelectList').subscribe(res => {\n        if (res) {\n          this.TranUserList = res;\n        }\n      });\n    }\n\n    FromLocation() {\n      this.apiService.getall('InventoryAdjustments/GetAdjustmentToLocationList').subscribe(res => {\n        if (res) {\n          this.tranLocationList = res;\n        }\n      });\n    }\n\n    ToLocation() {\n      this.apiService.getall('InventoryAdjustments/GetAdjustmentToLocationList').subscribe(res => {\n        if (res) {\n          this.tranToLocationList = res;\n        }\n      });\n    }\n\n    Branch() {\n      this.apiService.getall('InventoryReceipts/GetReceiptsBranchList').subscribe(res => {\n        if (res) {\n          this.tranBranchList = res;\n        }\n      });\n    }\n\n    Accounts() {\n      this.apiService.getall('InventoryAdjustments/GetAdjustmentAccountSelectList').subscribe(res => {\n        if (res) {\n          this.tranInvAccountList = res;\n        }\n      });\n    }\n\n    AdjAccounts() {\n      this.apiService.getall('InventoryAdjustments/GetAdjustmentAccountSelectList').subscribe(res => {\n        if (res) {\n          this.tranInvAdjAccountList = res;\n        }\n      });\n    }\n\n    JVNumber() {\n      this.apiService.getall('InventoryAdjustments/GetAdjustmentJVNumberSelectList').subscribe(res => {\n        if (res) {\n          this.jVNumList = res;\n        }\n      });\n    }\n\n    loadItemCode() {\n      this.apiService.getall('InventoryAdjustments/GetAdjustmentItemCodeList').subscribe(res => {\n        if (res) {\n          this.ItemCodeList = res;\n        }\n      });\n    }\n\n    loadbarCode() {\n      this.apiService.getall('InventoryAdjustments/GetAdjustmentBarCodeSelectList').subscribe(res => {\n        if (res) {\n          this.BarcodeList = res;\n        }\n      });\n    }\n\n    loadUnitCode() {\n      this.apiService.getall('InventoryAdjustments/GetAdjustmentUOMSelectList').subscribe(res => {\n        if (res) {\n          this.UOMList = res;\n        }\n      });\n    }\n\n    loadUomdata(event) {\n      let ItemUomCode = event.value;\n      let ItemList = this.tranItemCode + '_' + ItemUomCode;\n\n      if (ItemList) {\n        this.apiService.getall(`InventoryAdjustments/AdjustmentProductUomtPriceItem/${ItemList}`).subscribe(res => {\n          //this.apiService.getall(`PurchaseOrder/ProductUomtPriceItem/${body}`).subscribe(res => {\n          if (res) {\n            this.tranUOMFactor = res.tranItemUomFactor;\n            this.tranItemCost = res.itemAvgcost;\n          } //this.branchList = res;\n\n        });\n      } else {\n        this.unitType = '';\n        this.description = '';\n      }\n    } //loadUomdata(event: any) {\n    //  let ItemUomCode = event.value;\n    //  let ItemList = this.tranItemCode + '_' + ItemUomCode;\n    //  if (ItemList) {\n    //    this.apiService.getall(`InventoryReceipts/ReceiptsProductUomtPriceItem/${ItemList}`).subscribe(res => {\n    //      //this.apiService.getall(`PurchaseOrder/ProductUomtPriceItem/${body}`).subscribe(res => {\n    //      if (res) {\n    //        this.tranUOMFactor = res.tranItemUomFactor;\n    //        this.tranItemCost = res.itemAvgcost;\n    //      }\n    //      //this.branchList = res;\n    //    });\n    //  }\n    //  else {\n    //    this.unitType = '';\n    //    this.description = '';\n    //  }\n    //}\n\n\n    getData() {\n      let data = [//{ \"request\": \"0110101\",  \"vendor\": \"satyam \", \"docnum\": \"doc1234 \", \"branch\": \"kukatpally \", \"amount\": \"$1200 \", \"vat\": \"$14 \",  \"reference\": \"reference1\", \"id\": 1 },\n        //{ \"request\": \"0110101\",  \"vendor\": \"satyam \", \"docnum\": \"doc2345 \", \"branch\": \"kukatpally \", \"amount\": \"$1200 \", \"vat\": \"$14 \",   \"reference\": \"reference1\", \"id\": 2 }\n      ];\n      return data;\n    }\n\n    setForm() {\n      let MOBILE_PATTERN = /[0-9\\+\\-\\ ]/;\n      this.form = this.fb.group({\n        /*itemList: this.fb.array([this.createAuthority()])//, Validators.required)*/\n        'tranDate': ['', Validators.required],\n\n        /*'tranUser': ['', Validators.required],*/\n        'tranLocation': ['', Validators.required],\n        'tranBranch': ['', Validators.required],\n        'tranDocNumber': ['', Validators.required],\n        'tranReference': ['', Validators.required],\n\n        /* 'trantype': ['', Validators.required],*/\n        'tranRemarks': ['', Validators.required] //'tranInvAccount': ['', Validators.required],\n        //'tranInvAdjAccount': ['', Validators.required],\n        //'jVNum': ['', Validators.required],\n        //authList: this.fb.array([this.createAuthority()]),\n\n      });\n    }\n\n    create() {\n      this.setForm();\n      this.refresh();\n    }\n\n    loadList(page, pageCount, query, orderBy, approval = \"\") {//this.isLoading = true;\n      //this.apiService.getPagination('InventoryAdjustments', this.utilService.getQueryString(page, pageCount, query, orderBy)).subscribe(result => {\n      //  this.totalItemsCount = 0;\n      //  this.data = new MatTableDataSource(result.items);\n      //  this.totalItemsCount = result.totalCount;\n      //  this.data.paginator = this.paginator;\n      //  this.data.sort = this.sort;\n      //  //console.log(this.data.sort)\n      //  //console.log(this.data.paginator)\n      //  this.isLoading = false;\n      //}, error => this.utilService.ShowApiErrorMessage(error));\n    }\n\n    applyFilter(searchVal) {\n      const search = searchVal; //.target.value as string;\n      //if (search && search.length >= 3) {\n\n      if (search) {\n        this.searchValue = search;\n        this.loadList(0, this.pageService.pageCount, this.searchValue, this.sortingOrder);\n      }\n    }\n\n    purchaseOrdersubmit() {\n      if (this.id > 0) this.form.value['id'] = this.id;\n      this.apiService.post('InventoryAdjustments', this.form.value).subscribe(res => {\n        debugger;\n        /*this.itemcode = res['itemcode'];*/\n\n        if (res) {\n          //let output1 = res;\n          //Object.values(res);\n          //this.itemcode = Object.values(res)[0];\n          this.utilService.OkMessage();\n        } //this.form.patchValue({\n        //  ItemInventoryCodes: this.itemcode,\n        //  ItemUOMCodes: this.itemcode,\n        //  ItemBarcodeCodes: this.itemcode,\n        //  ItemNotesCodes: this.itemcode,\n        //  ItemHistoryCodes: this.itemcode,\n        //  itemCode: this.itemcode\n        //});\n\n      }, error => {\n        console.error(error);\n        this.utilService.ShowApiErrorMessage(error);\n      });\n    }\n\n    delete(id) {\n      const dialogRef = this.utilService.openDeleteConfirmDialog(this.dialog, DeleteConfirmDialogComponent);\n      dialogRef.afterClosed().subscribe(canDelete => {\n        if (canDelete && id > 0) {\n          this.apiService.delete('InventoryAdjustments', id).subscribe(res => {\n            this.refresh();\n            this.utilService.OkMessage();\n          });\n        }\n      }, error => this.utilService.ShowApiErrorMessage(error));\n    }\n\n    initialLoading() {\n      this.loadList(0, this.pageService.pageCount, \"\", this.sortingOrder);\n    }\n\n    refresh() {\n      this.searchValue = '';\n      this.initialLoading();\n    }\n\n    Close() {\n      this.refresh();\n    }\n\n    customerChange(event) {\n      let custId = event.value,\n          custName = event.text;\n      this.apiService.getall(`customer/getCustomerById/${custId}`).subscribe(res => {\n        if (res) {\n          this.form.controls['taxIdNumber'].setValue(res['vatNumber']);\n        }\n      });\n    } //resetProduct() {\n    //  this.product = '';\n    //  this.unitType = '';\n    //  this.description = '';\n    //  this.price = 0;\n    //  this.total = 0;\n    //  this.quantity = 0;\n    //}\n    //loadProductdata(event: any) {\n    //  let prodictId = event.value, productName = event.text;\n    //  if (prodictId) {\n    //    this.apiService.getall(`product/productUnitPriceItem/${prodictId}`).subscribe(res => {\n    //      if (res) {\n    //        this.product = res.nameEN;\n    //        this.unitType = res.unitTypeEN;\n    //        this.description = res.description;\n    //        this.price = res.unitPrice;\n    //      }\n    //      //this.branchList = res;\n    //    });\n    //  }\n    //  else {\n    //    this.unitType = '';\n    //    this.description = '';\n    //  }\n    //}\n    //addInvoice() {\n    //  if (this.tranTotCost > 0) {\n    //    if (this.editsequence > 0) {\n    //      this.removeInvoiceList(this.editsequence);\n    //      this.editsequence = 0;\n    //    }\n    //    this.listOfInvoices.push({\n    //      sequence: this.getSequence(),\n    //      tranNumber: \"0\",\n    //      tranItemCode: this.tranItemCode,\n    //      tranBarcode: this.tranBarcode,\n    //      tranItemName: this.tranItemName,\n    //      tranItemName2: this.tranItemName2,\n    //      tranItemQty: this.tranItemQty,\n    //      tranItemUnit: this.tranItemUnit,\n    //      tranUOMFactor: this.tranUOMFactor,\n    //      tranItemCost: this.tranItemCost,\n    //      tranTotCost: this.tranTotCost,\n    //      itemAttribute1: this.itemAttribute1,\n    //      itemAttribute2: this.itemAttribute2,\n    //      remarks: this.remarks,\n    //      iNVAcc: this.iNVAcc,\n    //      iNVADJAcc: this.iNVADJAcc\n    //    });\n    //    this.setGrandTotal();\n    //    this.setToDefault();\n    //  }\n    //}\n    //getSequence(): number { return this.sequence += this.sequence + 1 };\n    //showCanShowNotes() { this.canShowNotes = !this.canShowNotes }\n    //showCanShowRemarks() { this.canShowRemarks = !this.canShowRemarks }\n    //deleteInvoiceItem(item: any) {\n    //  this.removeInvoiceList(item.sequence);\n    //  this.setGrandTotal();\n    //}\n    //removeInvoiceList(sequence: number) {\n    //  let index: number = this.listOfInvoices.findIndex(a => a.sequence === sequence);\n    //  this.listOfInvoices.splice(index, 1);\n    //}\n    //editInvoiceItem(item: any) {\n    //  //this.tranItemCode = item.tranItemCode,\n    //  //  this.tranItemName = item.tranItemName,\n    //  //  this.tranItemName2 = item.tranItemName2,\n    //  //  this.tranItemQty = item.tranItemQty,\n    //  //  this.tranItemUnitCode = item.tranItemUnitCode,\n    //  //  this.tranUOMFactor = item.tranUOMFactor,\n    //  //  this.tranItemCost = item.tranItemCost,\n    //  //  this.tranTotCost = item.tranTotCost,\n    //  //  this.discPer = item.discPer,\n    //  //  this.discAmt = item.discAmt,\n    //  //  this.itemTax = item.itemTax,\n    //  //  this.itemTaxPer = item.itemTaxPer,\n    //  //  this.taxAmount = item.taxAmount,\n    //  //  this.itemTracking = item.itemTracking;\n    //  this.tranItemCode = item.tranItemCode,\n    //    this.tranBarcode = item.tranBarcode,\n    //    this.tranItemName = item.tranItemName,\n    //    this.tranItemName2 = item.tranItemName2,\n    //    this.tranItemQty = item.tranItemQty,\n    //    this.tranItemUnit = item.tranItemUnit,\n    //    this.tranUOMFactor = item.tranUOMFactor,\n    //    this.tranItemCost = item.tranItemCost,\n    //    this.tranTotCost = item.tranTotCost,\n    //    this.itemAttribute1 = item.itemAttribute1,\n    //    this.itemAttribute2 = item.itemAttribute2,\n    //    this.remarks = item.remarks,\n    //    this.iNVAcc = item.iNVAcc,\n    //    this.iNVADJAcc = item.iNVADJAcc;\n    //}\n    //setGrandTotal() {\n    //  this.grandTotal = 0;\n    //  //this.grandVatTotal = 0;\n    //  //this.grandInvoiceTotal = 0;\n    //  this.listOfInvoices.forEach(inv => {\n    //    this.grandTotal += inv.tranTotCost;\n    //    //this.grandVatTotal += inv.taxAmount;\n    //    //this.grandInvoiceTotal += (inv.tranTotCost - inv.taxAmount);\n    //  });\n    //  this.grandTotalStr = this.grandTotal.toString();\n    //  //this.grandVatTotalStr = this.grandVatTotal.toString();\n    //  //this.grandInvoiceTotalStr = this.grandInvoiceTotal.toString();\n    //}\n\n\n    closeModel() {\n      this.dialogRef.close();\n    } //setToDefault() {\n    //  this.tranItemCode = 0;\n    //  this.tranBarcode = '';\n    //  this.tranItemName = '';\n    //  this.tranItemName2 = '';\n    //  this.tranItemQty = 0;\n    //  this.tranItemUnit = '';\n    //  this.tranUOMFactor = '';\n    //  this.tranItemCost = 0;\n    //  this.tranTotCost = 0;\n    //  this.itemAttribute1 = '';\n    //  this.itemAttribute2 = '';\n    //  this.remarks = '';\n    //  this.iNVAcc = '';\n    //  this.iNVADJAcc = '';\n    //}\n    //calculate() {\n    //  var qty = this.tranItemQty;\n    //  var price = this.tranItemCost;\n    //  var amount = parseFloat((qty * price).toString())\n    //  this.tranTotCost = parseFloat(amount.toString());\n    //}\n\n\n    submit() {\n      if (this.id > 0) this.form.value['id'] = this.id;\n\n      if (this.listOfInvoices.length <= 0) {\n        this.utilService.FillUpFields();\n        return;\n      }\n\n      if (this.listOfInvoices.length < 2) {\n        this.notifyService.showError('line items should be 2 or more than 2 ');\n        return;\n      }\n\n      const nvTranTotCost = this.listOfInvoices.find(item => item.tranTotCost < 0);\n      const pvTranTotCost = this.listOfInvoices.find(item => item.tranTotCost > 0);\n\n      if (!nvTranTotCost || !pvTranTotCost) {\n        this.notifyService.showError('any of the line items total cost should be + and -');\n        return;\n      }\n\n      this.form.value['itemList'] = this.listOfInvoices;\n      this.form.value['tranNumber'] = \"0\";\n      this.form.value['trantype'] = \"3\"; //this.grandTotal = 0;\n      //this.listOfInvoices.forEach(inv => {\n      //  this.grandTotal += inv.tranTotCost;\n      //});\n      //this.form.value['tranTotalCost'] = this.grandTotal;\n\n      this.apiService.post('InventoryAdjustments/AdjustmentCreateIssuesRequest', this.form.value).subscribe(res => {\n        debugger;\n        this.reset();\n        this.utilService.OkMessage();\n        /*this.closeModel();*/\n\n        this.dialogRef.close(true);\n      }, error => {\n        console.error(error);\n        this.utilService.ShowApiErrorMessage(error);\n      });\n    }\n\n    reset() {\n      this.listOfInvoices = [];\n      this.grandTotalStr = \"0\";\n      this.form.reset();\n    }\n\n    edit() {\n      this.apiService.get('InventoryAdjustments', this.id).subscribe(res => {\n        if (res) {\n          this.isReadOnly = true;\n          this.form.patchValue(res);\n          this.form.patchValue({\n            'jVNum': `${res['jvNum']}`\n          });\n          this.form.patchValue({\n            'tranDate': `${res['tranDate'].split('T')[0]}`\n          });\n          this.form.patchValue({\n            trantype: \"3\"\n          });\n          this.form.value['itemList'] = this.listOfInvoices;\n          this.listOfInvoices = []; //this.form.patchValue({ 'poNotes': `${res['poNotes']}` });\n\n          let listOfInvoices = res['itemList'];\n          listOfInvoices.forEach(item => {\n            this.listOfInvoices.push({\n              sequence: this.getSequence(),\n              tranNumber: \"0\",\n              tranItemCode: item.tranItemCode,\n              tranBarcode: item.tranBarcode,\n              tranItemName: item.tranItemName,\n              tranItemName2: item.tranItemName2,\n              tranItemQty: item.tranItemQty,\n              tranItemUnit: item.tranItemUnit,\n              tranUOMFactor: item.tranUOMFactor,\n              tranItemCost: item.tranItemCost,\n              tranTotCost: item.tranTotCost,\n              itemAttribute1: item.itemAttribute1,\n              itemAttribute2: item.itemAttribute2,\n              remarks: item.remarks,\n              iNVAcc: item.invAcc,\n              iNVADJAcc: item.invAdjAcc\n            });\n          });\n          this.setGrandTotal();\n          this.id = res.id;\n        }\n      });\n    }\n\n    loadApprovals(evt) {\n      this.loadList(0, this.pageService.pageCount, this.searchValue, this.sortingOrder, evt.target.value);\n    }\n\n    view(id) {\n      this.openDialogManage(id, DBOperation.create, '', '', AdjustmentsComponent, {\n        action: '',\n        module: ''\n      }, 100);\n    } //public approve(id: number) {\n    //  this.openDialogManage(id, DBOperation.create, '', '', InventoryuserapprovalComponent, { action: '', module: '' }, 50);\n    //}\n\n\n    openDialogManage(id = 0, dbops, modalTitle = '', modalBtnTitle = '', component, moduleFile = {\n      module: '00',\n      action: '00act'\n    }, width = 100) {\n      let dialogRef = this.utilService.openDialogCongif(this.dialog, component, width);\n      dialogRef.componentInstance.dbops = dbops;\n      dialogRef.componentInstance.modalTitle = modalTitle;\n      dialogRef.componentInstance.id = id;\n      dialogRef.componentInstance.moduleFile = moduleFile;\n      dialogRef.afterClosed().subscribe(res => {\n        if (res && res === true) this.initialLoading();\n      });\n    } //loadUomdata(event: any) {\n    //  let ItemUomCode = event.value;\n    //  let ItemList = this.tranItemCode + '_' + ItemUomCode;\n    //  if (ItemList) {\n    //    this.apiService.getall(`PurchaseOrder/ProductUomtPriceItem/${ItemList}`).subscribe(res => {\n    //      //this.apiService.getall(`PurchaseOrder/ProductUomtPriceItem/${body}`).subscribe(res => {\n    //      if (res) {\n    //        this.tranUOMFactor = res.tranItemUomFactor;\n    //        this.tranItemCost = res.itemAvgcost;\n    //      }\n    //      //this.branchList = res;\n    //    });\n    //  }\n    //  else {\n    //    this.unitType = '';\n    //    this.description = '';\n    //  }\n    //}\n\n\n    loadUomList(event) {\n      let ItemUomCode = event;\n\n      if (ItemUomCode) {\n        this.apiService.getall(`PurchaseOrder/GetUOMItemList/${ItemUomCode}`).subscribe(res => {\n          //this.apiService.getall(`PurchaseOrder/ProductUomtPriceItem/${body}`).subscribe(res => {\n          if (res) {\n            this.UOMList = res;\n          } //this.branchList = res;\n\n        });\n      }\n    }\n\n    loadVendata(event) {\n      let Vencode = event.value;\n\n      if (Vencode) {\n        this.apiService.getall(`PurchaseOrder/ProductVenPriceItem/${Vencode}`).subscribe(res => {\n          if (res) {\n            /*this.form.patchValue(res);*/\n            this.form.patchValue({\n              'vendCode': `${res['vendName']}`\n            });\n            this.form.patchValue({\n              'paymentID': `${res['poTermsCode']}`\n            });\n          }\n        });\n      }\n    }\n\n    loadTaxdata(event) {\n      let ItemCode = event.value;\n\n      if (ItemCode) {\n        this.apiService.getall(`PurchaseOrder/ProductTaxPrice/${ItemCode}`).subscribe(res => {\n          if (res) {\n            this.itemTaxPer = res[0].itemTaxperc;\n            this.tranItemName = res[0].shortName;\n            /* this.form.patchValue({ 'tranItemName': `${res[0].shortName}` });*/\n\n            /*this.form.patchValue({ 'tranItemName': `${res[0]['shortName']}` });*/\n          }\n        });\n        this.loadUomList(ItemCode);\n      }\n    }\n\n    resetProduct() {\n      this.product = '';\n      this.unitType = '';\n      this.description = '';\n      this.price = 0;\n      this.total = 0;\n      this.quantity = 0;\n    }\n\n    loadProductdata(event) {\n      let prodictId = event.value,\n          productName = event.text;\n\n      if (prodictId) {\n        this.apiService.getall(`product/productUnitPriceItem/${prodictId}`).subscribe(res => {\n          if (res) {\n            this.product = res.nameEN;\n            this.unitType = res.unitTypeEN;\n            this.description = res.description;\n            this.price = res.unitPrice;\n          } //this.branchList = res;\n\n        });\n      } else {\n        this.unitType = '';\n        this.description = '';\n      }\n    }\n\n    addInvoice() {\n      if (this.tranTotCost != 0) {\n        if (this.editsequence > 0) {\n          this.removeInvoiceList(this.editsequence);\n          this.editsequence = 0;\n        }\n\n        this.listOfInvoices.push({\n          sequence: this.getSequence(),\n          tranNumber: \"0\",\n          tranItemCode: this.tranItemCode,\n          tranItemName: this.tranItemName,\n          tranItemName2: '',\n          tranItemQty: this.tranItemQty,\n          tranItemUnit: this.tranItemUnit,\n          tranUOMFactor: this.tranUOMFactor,\n          tranItemCost: this.tranItemCost,\n          tranTotCost: this.tranTotCost,\n          discPer: this.discPer,\n          discAmt: this.discAmt,\n          itemTax: 0,\n          itemTaxPer: this.itemTaxPer,\n          taxAmount: this.taxAmount,\n          itemTracking: 0\n        });\n        this.setGrandTotal();\n        this.setToDefault();\n      }\n    }\n\n    getSequence() {\n      return this.sequence += this.sequence + 1;\n    }\n\n    showCanShowNotes() {\n      this.canShowNotes = !this.canShowNotes;\n    }\n\n    showCanShowRemarks() {\n      this.canShowRemarks = !this.canShowRemarks;\n    }\n\n    deleteInvoiceItem(item) {\n      this.removeInvoiceList(item.sequence);\n      this.setGrandTotal();\n    }\n\n    removeInvoiceList(sequence) {\n      let index = this.listOfInvoices.findIndex(a => a.sequence === sequence);\n      this.listOfInvoices.splice(index, 1);\n    }\n\n    editInvoiceItem(item) {\n      this.editsequence = item.sequence, this.tranItemCode = item.tranItemCode, this.tranItemName = item.tranItemName, this.tranItemName2 = item.tranItemName2, this.tranItemQty = item.tranItemQty, this.tranItemUnit = item.tranItemUnit, this.tranUOMFactor = item.tranUOMFactor, this.tranItemCost = item.tranItemCost, this.tranTotCost = item.tranTotCost, this.discPer = item.discPer, this.discAmt = item.discAmt, this.itemTax = item.itemTax, this.itemTaxPer = item.itemTaxPer, this.taxAmount = item.taxAmount, this.itemTracking = item.itemTracking;\n    }\n\n    setGrandTotal() {\n      this.grandTotal = 0;\n      this.grandVatTotal = 0;\n      this.grandInvoiceTotal = 0; //if (this.form.value['taxInclusive'] == 0) {\n      //  this.listOfInvoices.forEach(inv => {\n      //    this.grandTotal += inv.tranTotCost;\n      //    this.grandVatTotal += inv.taxAmount;\n      //    this.grandInvoiceTotal += (inv.tranTotCost + inv.taxAmount);\n      //  });\n      //}\n      //if (this.form.value['taxInclusive'] == 1) {\n      //  this.listOfInvoices.forEach(inv => {\n      //    this.grandInvoiceTotal += inv.tranTotCost;\n      //    this.grandVatTotal += inv.taxAmount;\n      //    this.grandTotal += (inv.tranTotCost - inv.taxAmount);\n      //  });\n      //}\n\n      this.listOfInvoices.forEach(inv => {\n        this.grandTotal += inv.tranTotCost;\n        this.grandVatTotal += inv.taxAmount;\n        this.grandInvoiceTotal += inv.tranTotCost;\n      }); //if (this.form.value['taxInclusive'] == 1) {\n      //  this.grandTotalStr1 = parseFloat((this.grandTotal.toString())) - parseFloat(this.grandVatTotal.toString());\n      //this.grandVatTotalStr = parseFloat(this.grandVatTotal.toString()).toFixed(3);\n      //  this.grandInvoiceTotalStr1 = parseFloat((this.grandTotal.toString())) + parseFloat(this.grandVatTotal.toString());\n      //}\n      //else {\n      //  this.grandTotalStr1 = parseFloat(this.grandTotal.toString());\n      //  this.grandVatTotalStr = parseFloat(this.grandVatTotal.toString()).toFixed(3);\n      //  this.grandInvoiceTotalStr1 = parseFloat(this.grandInvoiceTotal.toString());\n      //}\n\n      this.grandTotalStr = parseFloat(this.grandTotal.toString()).toFixed(3);\n      this.grandVatTotalStr = parseFloat(this.grandVatTotal.toString()).toFixed(3);\n      this.grandInvoiceTotalStr = parseFloat(this.grandInvoiceTotal.toString()).toFixed(3);\n    } //setLabelPrices(total: number, vatAmount: number, operation: string) {\n    //  this.grandTotal += total;\n    //  this.grandVatTotal += vatAmount;\n    //  this.grandInvoiceTotal += (total - vatAmount);\n    //  this.grandTotalStr = this.grandTotal.toString();\n    //  this.grandVatTotalStr = this.grandVatTotal.toString();\n    //  this.grandInvoiceTotalStr = this.grandInvoiceTotal.toString();\n    //}\n\n\n    setToDefault() {\n      //this.productId = 0;\n      //this.product = this.description = this.unitType = '';\n      //this.quantity = this.price = this.vat = this.vatAmount = this.total = 0;\n      this.tranItemCode = 0, this.tranItemName = '', this.tranItemName2 = '', this.tranItemQty = 0, this.tranItemUnit = '', this.tranUOMFactor = '', this.tranItemCost = 0, this.tranTotCost = 0, this.discPer = '', this.discAmt = 0, this.itemTax = '', this.itemTaxPer = '', this.taxAmount = 0, this.itemTracking = 0;\n    }\n\n    calculate() {\n      //var itemvat = parseFloat(this.vat.toString());\n      //var qty = this.quantity;\n      //var price = this.price;\n      //var amount = parseFloat((qty * price).toString())\n      //this.vatAmount = parseFloat(((amount * itemvat) / 100).toFixed(2));\n      //this.total = parseFloat(this.vatAmount.toString()) + parseFloat(amount.toString());\n      var qty = this.tranItemQty;\n      var price = this.tranItemCost;\n      var amount = parseFloat((qty * price).toString());\n      this.tranTotCost = parseFloat(amount.toString());\n    }\n\n    calculateDis() {\n      if (this.discPer != \"\" && this.tranItemCost != 0) {\n        var cost = this.tranTotCost;\n        /*var perc = parseFloat(this.discPer);*/\n\n        var perc = parseFloat((parseFloat(this.discPer) / 100).toFixed(2));\n        var DisAmount = parseFloat((cost * perc / 100).toFixed(2));\n        this.discAmt = parseFloat(DisAmount.toString());\n        var itemCost = this.tranItemCost;\n        /* this.tranItemCost = ((itemCost) - (this.discAmt));*/\n\n        /*this.tranTotCost = ((cost) - (this.discAmt * this.tranItemQty));*/\n        //this.tranTotCost = ((itemCost) - (itemCost * this.discAmt));\n\n        this.tranTotCost = itemCost - itemCost * perc;\n        this.tranTotCost = this.tranTotCost * this.tranItemQty;\n        var perc = parseFloat(this.itemTaxPer);\n\n        if (this.form.value['taxInclusive'] == 0) {\n          this.taxAmount = parseFloat((this.tranTotCost * perc / 100).toFixed(2));\n        } else {\n          //var C1 = (this.tranItemCost - (this.tranItemCost * parseFloat(this.discPer)));\n          //var totoalCost = (C1 * this.tranItemQty);\n          this.taxAmount = parseFloat((this.tranTotCost * perc / (perc + 100)).toFixed(4));\n        }\n      }\n    } //calculateDis() {\n    //  if (this.discPer != \"\" && this.tranItemCost != 0) {\n    //    var cost = this.tranTotCost;\n    //    /*var perc = parseFloat(this.discPer);*/\n    //    var perc = parseFloat((parseFloat(this.discPer) / 100).toFixed(2));\n    //    var DisAmount = parseFloat(((cost * perc) / 100).toFixed(2));\n    //    this.discAmt = parseFloat(DisAmount.toString());\n    //    var itemCost = this.tranItemCost;\n    //    /* this.tranItemCost = ((itemCost) - (this.discAmt));*/\n    //    this.tranTotCost = ((cost) - (this.discAmt * this.tranItemQty));\n    //    var perc = parseFloat(this.itemTaxPer);\n    //    if (this.form.value['taxInclusive'] == 0) {\n    //      this.taxAmount = parseFloat(((this.tranTotCost * perc) / 100).toFixed(2));\n    //    }\n    //    else {\n    //      //var C1 = (this.tranItemCost - (this.tranItemCost * parseFloat(this.discPer)));\n    //      //var totoalCost = (C1 * this.tranItemQty);\n    //      this.taxAmount = parseFloat(((this.tranTotCost * perc) / ((perc) + 100)).toFixed(4));\n    //    }\n    //  }\n    //}\n\n\n    calculatetaxAmount() {\n      var cost = this.tranTotCost;\n      var perc = parseFloat(this.itemTaxPer);\n      this.taxAmount = parseFloat((cost * perc / 100).toFixed(2));\n    }\n\n  }\n\n  AddupdateadjacementComponent.ɵfac = function AddupdateadjacementComponent_Factory(t) {\n    return new (t || AddupdateadjacementComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(i5.AuthorizeService), i0.ɵɵdirectiveInject(i6.UtilityService), i0.ɵɵdirectiveInject(i7.NotificationService), i0.ɵɵdirectiveInject(i8.ValidationService), i0.ɵɵdirectiveInject(i9.PaginationService), i0.ɵɵdirectiveInject(i10.MatDialog), i0.ɵɵdirectiveInject(i10.MatDialogRef));\n  };\n\n  AddupdateadjacementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddupdateadjacementComponent,\n    selectors: [[\"app-addupdateadjacement\"]],\n    viewQuery: function AddupdateadjacementComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 7);\n        i0.ɵɵviewQuery(MatSort, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 152,\n    vars: 141,\n    consts: [[\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"rowm0\"], [1, \"col-md-12\", \"col-lg-12\"], [1, \"row\", \"mt-3\"], [1, \"p-3\", 2, \"border\", \"1px solid #f4f4f4\"], [1, \"row\", \"mt-2\"], [1, \"col-md-3\", \"col-lg-3\"], [1, \"form-group\"], [1, \"mr-sm-2\"], [\"type\", \"date\", \"formControlName\", \"tranDate\", 1, \"form-control\", 3, \"placeholder\"], [\"bindLabel\", \"text\", \"bindValue\", \"value\", \"formControlName\", \"tranBranch\", 3, \"items\"], [3, \"control\"], [\"bindLabel\", \"text\", \"bindValue\", \"value\", \"formControlName\", \"tranLocation\", 3, \"items\"], [\"type\", \"text\", \"formControlName\", \"tranDocNumber\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"text\", \"formControlName\", \"tranReference\", 1, \"form-control\", 3, \"placeholder\"], [1, \"col-md-6\", \"col-lg-6\"], [\"formControlName\", \"tranRemarks\", 1, \"form-control\", 3, \"placeholder\"], [1, \"table-responsive\"], [\"id\", \"zero_config\", 1, \"table\", \"table-bordered\", \"no-wrap\"], [\"width\", \"18%\"], [\"width\", \"8%\"], [\"width\", \"11%\"], [\"bindLabel\", \"text\", \"bindValue\", \"value\", 3, \"items\", \"ngModel\", \"ngModelOptions\", \"ngModelChange\", \"change\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"text\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"text\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelOptions\", \"ngModelChange\", \"keyup\"], [\"type\", \"button\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-primary\", 3, \"click\"], [1, \"icon-plus\"], [1, \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tfoot\"], [\"colspan\", \"5\", \"rowspan\", \"5\"], [1, \"text-right\", \"bgcolor_bottom\"], [1, \"bgcolor_bottom\"], [1, \"row\"], [1, \"col-lg-12\", \"col-md-12\", \"text-center\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-primary\", 3, \"value\"], [1, \"text-right\"], [1, \"icon-note\", \"cpointer\", 3, \"click\"], [1, \"icon-trash\", \"cpointer\", 3, \"click\"]],\n    template: function AddupdateadjacementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementStart(3, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AddupdateadjacementComponent_Template_button_click_3_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(4, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddupdateadjacementComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵelementStart(13, \"div\", 8);\n        i0.ɵɵelementStart(14, \"label\", 9);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 10);\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵpipe(19, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7);\n        i0.ɵɵelementStart(21, \"div\", 8);\n        i0.ɵɵelementStart(22, \"label\", 9);\n        i0.ɵɵtext(23);\n        i0.ɵɵpipe(24, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"ng-select\", 11);\n        i0.ɵɵelement(26, \"validation-message\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 7);\n        i0.ɵɵelementStart(28, \"div\", 8);\n        i0.ɵɵelementStart(29, \"label\", 9);\n        i0.ɵɵtext(30);\n        i0.ɵɵpipe(31, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"ng-select\", 13);\n        i0.ɵɵelement(33, \"validation-message\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 7);\n        i0.ɵɵelementStart(35, \"div\", 8);\n        i0.ɵɵelementStart(36, \"label\", 9);\n        i0.ɵɵtext(37);\n        i0.ɵɵpipe(38, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 14);\n        i0.ɵɵpipe(40, \"translate\");\n        i0.ɵɵpipe(41, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 7);\n        i0.ɵɵelementStart(43, \"div\", 8);\n        i0.ɵɵelementStart(44, \"label\", 9);\n        i0.ɵɵtext(45);\n        i0.ɵɵpipe(46, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"input\", 15);\n        i0.ɵɵpipe(48, \"translate\");\n        i0.ɵɵpipe(49, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 16);\n        i0.ɵɵelementStart(51, \"div\", 8);\n        i0.ɵɵelementStart(52, \"label\", 9);\n        i0.ɵɵtext(53);\n        i0.ɵɵpipe(54, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(55, \"textarea\", 17);\n        i0.ɵɵpipe(56, \"translate\");\n        i0.ɵɵpipe(57, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"div\", 18);\n        i0.ɵɵelementStart(59, \"table\", 19);\n        i0.ɵɵelementStart(60, \"thead\");\n        i0.ɵɵelementStart(61, \"tr\");\n        i0.ɵɵelementStart(62, \"th\", 20);\n        i0.ɵɵtext(63);\n        i0.ɵɵpipe(64, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"th\", 20);\n        i0.ɵɵtext(66);\n        i0.ɵɵpipe(67, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"th\");\n        i0.ɵɵtext(69);\n        i0.ɵɵpipe(70, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"th\", 21);\n        i0.ɵɵtext(72);\n        i0.ɵɵpipe(73, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"th\", 22);\n        i0.ɵɵtext(75);\n        i0.ɵɵpipe(76, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"th\");\n        i0.ɵɵtext(78);\n        i0.ɵɵpipe(79, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"th\");\n        i0.ɵɵtext(81);\n        i0.ɵɵpipe(82, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(83, \"th\");\n        i0.ɵɵelement(84, \"th\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(85, \"tbody\");\n        i0.ɵɵelementStart(86, \"tr\");\n        i0.ɵɵelementStart(87, \"td\");\n        i0.ɵɵelementStart(88, \"ng-select\", 23);\n        i0.ɵɵlistener(\"ngModelChange\", function AddupdateadjacementComponent_Template_ng_select_ngModelChange_88_listener($event) {\n          return ctx.tranItemCode = $event;\n        })(\"change\", function AddupdateadjacementComponent_Template_ng_select_change_88_listener($event) {\n          return ctx.loadTaxdata($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(89, \"td\");\n        i0.ɵɵelementStart(90, \"input\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function AddupdateadjacementComponent_Template_input_ngModelChange_90_listener($event) {\n          return ctx.tranItemName = $event;\n        });\n        i0.ɵɵpipe(91, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"td\");\n        i0.ɵɵelementStart(93, \"ng-select\", 23);\n        i0.ɵɵlistener(\"ngModelChange\", function AddupdateadjacementComponent_Template_ng_select_ngModelChange_93_listener($event) {\n          return ctx.tranItemUnit = $event;\n        })(\"change\", function AddupdateadjacementComponent_Template_ng_select_change_93_listener($event) {\n          return ctx.loadUomdata($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(94, \"td\");\n        i0.ɵɵelementStart(95, \"input\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function AddupdateadjacementComponent_Template_input_ngModelChange_95_listener($event) {\n          return ctx.tranUOMFactor = $event;\n        });\n        i0.ɵɵpipe(96, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(97, \"td\");\n        i0.ɵɵelementStart(98, \"input\", 25);\n        i0.ɵɵlistener(\"ngModelChange\", function AddupdateadjacementComponent_Template_input_ngModelChange_98_listener($event) {\n          return ctx.tranItemCost = $event;\n        });\n        i0.ɵɵpipe(99, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(100, \"td\");\n        i0.ɵɵelementStart(101, \"input\", 26);\n        i0.ɵɵlistener(\"ngModelChange\", function AddupdateadjacementComponent_Template_input_ngModelChange_101_listener($event) {\n          return ctx.tranItemQty = $event;\n        })(\"keyup\", function AddupdateadjacementComponent_Template_input_keyup_101_listener() {\n          return ctx.calculate();\n        });\n        i0.ɵɵpipe(102, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(103, \"td\");\n        i0.ɵɵelementStart(104, \"input\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function AddupdateadjacementComponent_Template_input_ngModelChange_104_listener($event) {\n          return ctx.tranTotCost = $event;\n        });\n        i0.ɵɵpipe(105, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(106, \"td\");\n        i0.ɵɵelementStart(107, \"button\", 27);\n        i0.ɵɵlistener(\"click\", function AddupdateadjacementComponent_Template_button_click_107_listener() {\n          return ctx.addInvoice();\n        });\n        i0.ɵɵelement(108, \"i\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(109, \"thead\");\n        i0.ɵɵelementStart(110, \"tr\");\n        i0.ɵɵelementStart(111, \"th\");\n        i0.ɵɵtext(112);\n        i0.ɵɵpipe(113, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(114, \"th\");\n        i0.ɵɵtext(115);\n        i0.ɵɵpipe(116, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(117, \"th\");\n        i0.ɵɵtext(118);\n        i0.ɵɵpipe(119, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(120, \"th\");\n        i0.ɵɵtext(121);\n        i0.ɵɵpipe(122, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(123, \"th\");\n        i0.ɵɵtext(124);\n        i0.ɵɵpipe(125, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(126, \"th\");\n        i0.ɵɵtext(127);\n        i0.ɵɵpipe(128, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(129, \"th\");\n        i0.ɵɵtext(130);\n        i0.ɵɵpipe(131, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(132, \"th\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(133, \"tbody\");\n        i0.ɵɵtemplate(134, AddupdateadjacementComponent_tr_134_Template, 20, 7, \"tr\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(135, \"tfoot\");\n        i0.ɵɵelementStart(136, \"tr\", 31);\n        i0.ɵɵelement(137, \"td\", 32);\n        i0.ɵɵelementStart(138, \"td\", 33);\n        i0.ɵɵtext(139);\n        i0.ɵɵpipe(140, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(141, \"td\", 33);\n        i0.ɵɵtext(142);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(143, \"td\", 34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(144, \"div\", 35);\n        i0.ɵɵelementStart(145, \"div\", 36);\n        i0.ɵɵelementStart(146, \"button\", 37);\n        i0.ɵɵlistener(\"click\", function AddupdateadjacementComponent_Template_button_click_146_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(147);\n        i0.ɵɵpipe(148, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(149, \" \\u00A0\\u00A0 \");\n        i0.ɵɵelement(150, \"input\", 38);\n        i0.ɵɵpipe(151, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 60, \"Create_New_Adjustments\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 62, \"Trans_Date\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(18, 64, \"Select\"), \" \", i0.ɵɵpipeBind1(19, 66, \"Trans_Date\"), \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(24, 68, \"Branch\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"items\", ctx.tranBranchList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.tranBranch);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(31, 70, \"WareHouse\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"items\", ctx.tranLocationList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.tranLocation);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(38, 72, \"Document_Number\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \" \", i0.ɵɵpipeBind1(40, 74, \"Please_Enter\"), \"  \", i0.ɵɵpipeBind1(41, 76, \"Document_Number\"), \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(46, 78, \"Reference_Number\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \" \", i0.ɵɵpipeBind1(48, 80, \"Please_Enter\"), \"  \", i0.ɵɵpipeBind1(49, 82, \"Reference_Number\"), \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(54, 84, \"Remarks\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \" \", i0.ɵɵpipeBind1(56, 86, \"Please_Enter\"), \"  \", i0.ɵɵpipeBind1(57, 88, \"Remarks\"), \"\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(64, 90, \"Item Code\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(67, 92, \"Item Name\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(70, 94, \"Item UnitCode\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(73, 96, \"UOM Factor\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(76, 98, \"Item Cost\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(79, 100, \"Item Qty\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(82, 102, \"Tot Cost\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"items\", ctx.ItemCodeList)(\"ngModel\", ctx.tranItemCode)(\"ngModelOptions\", i0.ɵɵpureFunction0(134, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(91, 104, \"tranItemName\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.tranItemName)(\"ngModelOptions\", i0.ɵɵpureFunction0(135, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"items\", ctx.UOMList)(\"ngModel\", ctx.tranItemUnit)(\"ngModelOptions\", i0.ɵɵpureFunction0(136, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(96, 106, \"tranUOMFactor\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.tranUOMFactor)(\"ngModelOptions\", i0.ɵɵpureFunction0(137, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(99, 108, \"tranItemCost\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.tranItemCost)(\"ngModelOptions\", i0.ɵɵpureFunction0(138, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(102, 110, \"Quantity\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.tranItemQty)(\"ngModelOptions\", i0.ɵɵpureFunction0(139, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(105, 112, \"tranTotCost\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.tranTotCost)(\"ngModelOptions\", i0.ɵɵpureFunction0(140, _c0));\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(113, 114, \"Item Code\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(116, 116, \"Item Name\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(119, 118, \"Item Qty\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(122, 120, \"Item UnitCode\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(125, 122, \"UOM Factor\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(128, 124, \"Item Cost\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(131, 126, \"Tot Cost\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listOfInvoices);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(140, 128, \"Invoice_Total\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.grandInvoiceTotalStr);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(148, 130, \"Cancel\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(151, 132, \"Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i11.NgSelectComponent, i12.ValidationMessagesComponent, i1.NgModel, i13.NgForOf],\n    pipes: [i14.TranslatePipe],\n    encapsulation: 2\n  });\n  return AddupdateadjacementComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}