{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./ValidationService\";\nimport * as i2 from \"@angular/common\";\n\nfunction ValidationMessagesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\n\nexport let ValidationMessagesComponent = /*#__PURE__*/(() => {\n  class ValidationMessagesComponent {\n    constructor(validationService) {\n      this.validationService = validationService;\n    }\n\n    get errorMessage() {\n      for (const propertyName in this.control.errors) {\n        if (this.control && this.control.errors.hasOwnProperty(propertyName) && this.control.touched) {\n          return this.validationService.getValidatorErrorMessage(propertyName, this.control.errors[propertyName]);\n        }\n      }\n\n      return null;\n    }\n\n  }\n\n  ValidationMessagesComponent.ɵfac = function ValidationMessagesComponent_Factory(t) {\n    return new (t || ValidationMessagesComponent)(i0.ɵɵdirectiveInject(i1.ValidationService));\n  };\n\n  ValidationMessagesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ValidationMessagesComponent,\n    selectors: [[\"validation-message\"]],\n    inputs: {\n      control: \"control\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function ValidationMessagesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ValidationMessagesComponent_div_0_Template, 2, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage !== null);\n      }\n    },\n    directives: [i2.NgIf],\n    encapsulation: 2\n  });\n  return ValidationMessagesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}