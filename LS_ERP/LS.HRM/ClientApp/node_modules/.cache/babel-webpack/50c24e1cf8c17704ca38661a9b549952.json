{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/api.service\";\nimport * as i5 from \"../../api-authorization/AuthorizeService\";\nimport * as i6 from \"../../services/utility.service\";\nimport * as i7 from \"@ngx-translate/core\";\nimport * as i8 from \"../../services/notification.service\";\nimport * as i9 from \"../../sharedcomponent/ValidationService\";\nimport * as i10 from \"@angular/material/dialog\";\nexport let ApprovaldialogwindowsComponent = /*#__PURE__*/(() => {\n  class ApprovaldialogwindowsComponent {\n    constructor(fb, http, router, apiService, authService, utilService, translate, notifyService, validationService, dialogRef) {\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.translate = translate;\n      this.notifyService = notifyService;\n      this.validationService = validationService;\n      this.dialogRef = dialogRef;\n      this.readonly = \"\"; // super(authService);\n    }\n\n    ngOnInit() {\n      this.setForm();\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n    setForm() {\n      this.form = this.fb.group({\n        'serviceCode': [this.serviceCode],\n        'branchCode': [this.branchCode],\n        'serviceType': [this.serviceType],\n        'isApproved': [false],\n        'appRemarks': ['', Validators.required]\n      });\n    }\n\n    submit() {}\n\n    postApproval(Acceptance) {\n      console.log(this.form.value);\n      if (Acceptance == 'True') this.form.value['isApproved'] = true;else this.form.value['isApproved'] = false;\n\n      if (this.form.valid) {\n        /*this.form.value['appRemarks'] = this.form.controls['appRemarks'].value;*/\n        this.apiService.post('PurchaseAuthorities/PurApprovals', this.form.value).subscribe(res => {\n          this.utilService.OkMessage();\n          this.dialogRef.close(true);\n        }, error => {\n          console.error(error);\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields();\n    }\n\n  }\n\n  ApprovaldialogwindowsComponent.ɵfac = function ApprovaldialogwindowsComponent_Factory(t) {\n    return new (t || ApprovaldialogwindowsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(i5.AuthorizeService), i0.ɵɵdirectiveInject(i6.UtilityService), i0.ɵɵdirectiveInject(i7.TranslateService), i0.ɵɵdirectiveInject(i8.NotificationService), i0.ɵɵdirectiveInject(i9.ValidationService), i0.ɵɵdirectiveInject(i10.MatDialogRef));\n  };\n\n  ApprovaldialogwindowsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ApprovaldialogwindowsComponent,\n    selectors: [[\"app-approvaldialogwindows\"]],\n    decls: 25,\n    vars: 23,\n    consts: [[1, \"modal-title\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-12\", \"col-lg-12\"], [1, \"mr-sm-2\"], [\"formControlName\", \"appRemarks\", 1, \"form-control\", 3, \"placeholder\"], [1, \"col-md-12\", \"col-lg-12\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-primary\", \"btn-midblock\", 3, \"value\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-secondary\", \"btn-midblock\", 3, \"value\", \"click\"]],\n    template: function ApprovaldialogwindowsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ApprovaldialogwindowsComponent_Template_button_click_3_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(4, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ApprovaldialogwindowsComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"textarea\", 6);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵtext(14, \"      <validation-message [control]=\\\"form.controls.appRemarks\\\"></validation-message>\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 7);\n        i0.ɵɵelementStart(16, \"input\", 8);\n        i0.ɵɵlistener(\"click\", function ApprovaldialogwindowsComponent_Template_input_click_16_listener() {\n          return ctx.postApproval(\"True\");\n        });\n        i0.ɵɵpipe(17, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \" \\u00A0 \");\n        i0.ɵɵelementStart(19, \"input\", 8);\n        i0.ɵɵlistener(\"click\", function ApprovaldialogwindowsComponent_Template_input_click_19_listener() {\n          return ctx.postApproval(\"False\");\n        });\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(21, \" \\u00A0 \");\n        i0.ɵɵelementStart(22, \"input\", 9);\n        i0.ɵɵlistener(\"click\", function ApprovaldialogwindowsComponent_Template_input_click_22_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(24, \" \\u00A0 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(2, 9, ctx.modalTitle), \" (\", ctx.serviceCode, \")\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 11, \"Remarks\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(12, 13, \"Please_Select\"), \" \", i0.ɵɵpipeBind1(13, 15, \"Remarks\"), \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(17, 17, \"Approve\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(20, 19, \"Not_Approve\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(23, 21, \"Cancel\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    pipes: [i7.TranslatePipe],\n    encapsulation: 2\n  });\n  return ApprovaldialogwindowsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}