{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ParentpayrollmgtComponent } from 'src/app/sharedcomponent/parentpayrollmgt.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/api.service\";\nimport * as i3 from \"src/app/api-authorization/AuthorizeService\";\nimport * as i4 from \"src/app/services/utility.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"src/app/services/notification.service\";\nimport * as i7 from \"src/app/sharedcomponent/ValidationService\";\nimport * as i8 from \"../../../../sharedcomponent/ValidationMessagesComponent\";\nimport * as i9 from \"@angular/material/datepicker\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/slide-toggle\";\nimport * as i12 from \"@ngx-translate/core\";\nexport let AddupdatepayrollperiodComponent = /*#__PURE__*/(() => {\n  class AddupdatepayrollperiodComponent extends ParentpayrollmgtComponent {\n    constructor(fb, apiService, authService, utilService, dialogRef, notifyService, validationService) {\n      super(authService);\n      this.fb = fb;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.dialogRef = dialogRef;\n      this.notifyService = notifyService;\n      this.validationService = validationService;\n      this.id = 0;\n      this.isReadOnly = false;\n    }\n\n    ngOnInit() {\n      this.setForm();\n      if (this.id > 0) this.setEditForm();\n    }\n\n    setForm() {\n      this.form = this.fb.group({\n        payrollPeriodCode: [''],\n        payrollPeriodNameEn: ['', Validators.required],\n        payrollPeriodNameAr: [''],\n        payrollPeriodStartDate: ['', Validators.required],\n        payrollPeriodEndDate: ['', Validators.required],\n        isOpen: [false],\n        isClose: [false],\n        isActive: [false]\n      });\n      this.isReadOnly = false;\n    }\n\n    setEditForm() {\n      this.apiService.get('PayrollPeriod', this.id).subscribe(res => {\n        if (res) {\n          this.isReadOnly = true;\n          this.form.patchValue(res);\n        }\n      });\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n    submit() {\n      if (this.form.valid) {\n        if (this.id > 0) this.form.value['id'] = this.id;\n        this.form.value['payrollPeriodStartDate'] = this.utilService.selectedDateTime(this.form.controls['payrollPeriodStartDate'].value);\n        this.form.value['payrollPeriodEndDate'] = this.utilService.selectedDateTime(this.form.controls['payrollPeriodEndDate'].value);\n        this.apiService.post('PayrollPeriod', this.form.value).subscribe(res => {\n          this.utilService.OkMessage();\n          this.reset();\n          this.dialogRef.close(true);\n        }, error => {\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields();\n    }\n\n    reset() {\n      this.form.controls['payrollPeriodCode'].setValue('');\n      this.form.controls['payrollPeriodNameEn'].setValue('');\n      this.form.controls['payrollPeriodNameAr'].setValue('');\n      this.form.controls['payrollPeriodStartDate'].setValue('');\n      this.form.controls['payrollPeriodEndDate'].setValue('');\n      this.form.controls['isOpen'].setValue('');\n      this.form.controls['isClose'].setValue('');\n      this.form.controls['isActive'].setValue('');\n    }\n\n  }\n\n  AddupdatepayrollperiodComponent.ɵfac = function AddupdatepayrollperiodComponent_Factory(t) {\n    return new (t || AddupdatepayrollperiodComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.AuthorizeService), i0.ɵɵdirectiveInject(i4.UtilityService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.NotificationService), i0.ɵɵdirectiveInject(i7.ValidationService));\n  };\n\n  AddupdatepayrollperiodComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddupdatepayrollperiodComponent,\n    selectors: [[\"app-addupdatepayrollperiod\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 97,\n    vars: 72,\n    consts: [[1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-6\", \"col-lg-6\"], [1, \"form-group\"], [\"for\", \"payrollPeriodCode\"], [\"id\", \"payrollPeriodCode\", \"type\", \"text\", \"formControlName\", \"payrollPeriodCode\", 1, \"form-control\", 3, \"placeholder\", \"readonly\"], [3, \"control\"], [\"for\", \"payrollPeriodNameEn\"], [\"id\", \"payrollPeriodNameEn\", \"type\", \"text\", \"formControlName\", \"payrollPeriodNameEn\", 1, \"form-control\", \"input-mandatory\", 3, \"placeholder\"], [\"for\", \"payrollPeriodNameAr\"], [\"id\", \"payrollPeriodNameAr\", \"type\", \"text\", \"formControlName\", \"payrollPeriodNameAr\", 1, \"form-control\", \"input-mandatory\", 3, \"placeholder\"], [\"for\", \"payrollPeriodStartDate\", 1, \"mr-sm-2\"], [1, \"input-group\"], [\"formControlName\", \"payrollPeriodStartDate\", 1, \"form-control\", \"input-mandatory\", 3, \"placeholder\", \"matDatepicker\"], [1, \"input-group-prepend\", \"datapickericon\"], [\"matSuffix\", \"\", 3, \"for\"], [\"payrollPeriodStartDate\", \"\"], [\"for\", \"payrollPeriodEndDate\", 1, \"mr-sm-2\"], [\"formControlName\", \"payrollPeriodEndDate\", 1, \"form-control\", \"input-mandatory\", 3, \"placeholder\", \"matDatepicker\"], [\"payrollPeriodEndDate\", \"\"], [1, \"form-group\", 2, \"display\", \"flex\"], [\"color\", \"primary\", \"formControlName\", \"isOpen\"], [\"for\", \"isOpen\"], [\"color\", \"primary\", \"formControlName\", \"isClose\"], [\"for\", \"isClose\"], [\"for\", \"isActive\"], [\"color\", \"primary\", \"formControlName\", \"isActive\"], [1, \"row\", \"mt-3\"], [1, \"col-md-12\", \"col-lg-12\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-secondary\", \"btn-midblock\", 3, \"value\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-primary\", \"btn-midblock\", 3, \"value\"]],\n    template: function AddupdatepayrollperiodComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h3\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AddupdatepayrollperiodComponent_Template_button_click_3_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(4, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddupdatepayrollperiodComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"label\", 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵpipe(14, \"translate\");\n        i0.ɵɵelement(15, \"validation-message\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 4);\n        i0.ɵɵelementStart(17, \"div\", 5);\n        i0.ɵɵelementStart(18, \"div\", 6);\n        i0.ɵɵelementStart(19, \"label\", 10);\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 11);\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵpipe(24, \"translate\");\n        i0.ɵɵelement(25, \"validation-message\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 5);\n        i0.ɵɵelementStart(27, \"div\", 6);\n        i0.ɵɵelementStart(28, \"label\", 12);\n        i0.ɵɵtext(29);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 13);\n        i0.ɵɵpipe(32, \"translate\");\n        i0.ɵɵpipe(33, \"translate\");\n        i0.ɵɵelement(34, \"validation-message\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 4);\n        i0.ɵɵelementStart(36, \"div\", 5);\n        i0.ɵɵelementStart(37, \"div\", 6);\n        i0.ɵɵelementStart(38, \"label\", 14);\n        i0.ɵɵtext(39);\n        i0.ɵɵpipe(40, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 15);\n        i0.ɵɵelement(42, \"input\", 16);\n        i0.ɵɵpipe(43, \"translate\");\n        i0.ɵɵpipe(44, \"translate\");\n        i0.ɵɵelementStart(45, \"div\", 17);\n        i0.ɵɵelement(46, \"mat-datepicker-toggle\", 18);\n        i0.ɵɵelement(47, \"mat-datepicker\", null, 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"validation-message\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 5);\n        i0.ɵɵelementStart(51, \"div\", 6);\n        i0.ɵɵelementStart(52, \"div\", 6);\n        i0.ɵɵelementStart(53, \"label\", 20);\n        i0.ɵɵtext(54);\n        i0.ɵɵpipe(55, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 15);\n        i0.ɵɵelement(57, \"input\", 21);\n        i0.ɵɵpipe(58, \"translate\");\n        i0.ɵɵpipe(59, \"translate\");\n        i0.ɵɵelementStart(60, \"div\", 17);\n        i0.ɵɵelement(61, \"mat-datepicker-toggle\", 18);\n        i0.ɵɵelement(62, \"mat-datepicker\", null, 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(64, \"validation-message\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"div\", 4);\n        i0.ɵɵelementStart(66, \"div\", 5);\n        i0.ɵɵelementStart(67, \"div\", 23);\n        i0.ɵɵelement(68, \"mat-slide-toggle\", 24);\n        i0.ɵɵelement(69, \"br\");\n        i0.ɵɵtext(70, \" \\u00A0 \");\n        i0.ɵɵelementStart(71, \"label\", 25);\n        i0.ɵɵtext(72);\n        i0.ɵɵpipe(73, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"div\", 5);\n        i0.ɵɵelementStart(75, \"div\", 23);\n        i0.ɵɵelement(76, \"mat-slide-toggle\", 26);\n        i0.ɵɵelement(77, \"br\");\n        i0.ɵɵtext(78, \" \\u00A0 \");\n        i0.ɵɵelementStart(79, \"label\", 27);\n        i0.ɵɵtext(80);\n        i0.ɵɵpipe(81, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"div\", 4);\n        i0.ɵɵelementStart(83, \"div\", 5);\n        i0.ɵɵelementStart(84, \"div\", 6);\n        i0.ɵɵelementStart(85, \"label\", 28);\n        i0.ɵɵtext(86);\n        i0.ɵɵpipe(87, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(88, \"br\");\n        i0.ɵɵelement(89, \"mat-slide-toggle\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"div\", 30);\n        i0.ɵɵelementStart(91, \"div\", 31);\n        i0.ɵɵelementStart(92, \"input\", 32);\n        i0.ɵɵlistener(\"click\", function AddupdatepayrollperiodComponent_Template_input_click_92_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵpipe(93, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(94, \" \\u00A0 \");\n        i0.ɵɵelement(95, \"input\", 33);\n        i0.ɵɵpipe(96, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(48);\n\n        const _r1 = i0.ɵɵreference(63);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.modalTitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 32, \"Payroll Period Code\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(13, 34, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(14, 36, \"Payroll Period Code\"), \" \");\n        i0.ɵɵproperty(\"readonly\", ctx.isReadOnly);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.payrollPeriodCode);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 38, \"PayrollPeriodNameEn\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(23, 40, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(24, 42, \"PayrollPeriodNameEn\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.payrollPeriodNameEn);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(30, 44, \"PayrollPeriodNameAr\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(32, 46, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(33, 48, \"payrollPeriodNameAr\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.payrollPeriodNameAr);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(40, 50, \"PayrollPeriodStartDate\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \" \", i0.ɵɵpipeBind1(43, 52, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(44, 54, \"PayrollPeriodStartDate\"), \"\");\n        i0.ɵɵproperty(\"matDatepicker\", _r0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"for\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.payrollPeriodStartDate);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(55, 56, \"PayrollPeriodEndDate\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \" \", i0.ɵɵpipeBind1(58, 58, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(59, 60, \"PayrollPeriodEndDate\"), \"\");\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.payrollPeriodEndDate);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(73, 62, \"Is Open\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(81, 64, \"Is Close\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(87, 66, \"Is_Active\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(93, 68, \"Cancel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(96, 70, \"Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i8.ValidationMessagesComponent, i9.MatDatepickerInput, i9.MatDatepickerToggle, i10.MatSuffix, i9.MatDatepicker, i11.MatSlideToggle],\n    pipes: [i12.TranslatePipe],\n    encapsulation: 2\n  });\n  return AddupdatepayrollperiodComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}