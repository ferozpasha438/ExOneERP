{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/api.service\";\nimport * as i3 from \"../../../api-authorization/AuthorizeService\";\nimport * as i4 from \"../../../services/utility.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"../../../services/notification.service\";\nimport * as i7 from \"../../../sharedcomponent/ValidationMessagesComponent\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@ngx-translate/core\";\n\nfunction AddingtopologyComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cty_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", cty_r1.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cty_r1.text);\n  }\n}\n\nexport let AddingtopologyComponent = /*#__PURE__*/(() => {\n  class AddingtopologyComponent {\n    constructor(fb, apiService, authService, utilService, dialogRef, notifyService) {\n      this.fb = fb;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.dialogRef = dialogRef;\n      this.notifyService = notifyService;\n      this.segmentList = [{\n        text: '5',\n        value: '5'\n      }]; //, { text: '2', value: '2' }, { text: '3', value: '3' }]\n    }\n\n    ngOnInit() {\n      this.setForm();\n      this.apiService.getall('financialsetup/getAcCodeSegment').subscribe(data => {\n        console.log(data);\n      });\n    }\n\n    setForm() {\n      //let cDate: IMyDateModel = { isRange: false, singleDate: {}, dateRange: null };\n      this.form = this.fb.group({\n        'codeType1': ['', Validators.required],\n        'segment1': ['', Validators.required] // 'codeType2': ['', Validators.required],\n        //  'segment2': ['', Validators.required],\n        //'codeType3': ['', Validators.required],\n        //'segment3': ['', Validators.required],\n\n      });\n    }\n\n    submit() {\n      if (this.form.valid) {\n        this.apiService.post('financialsetup/accountCodeTopology', this.form.value).subscribe(res => {\n          this.utilService.OkMessage();\n          this.reset();\n          this.dialogRef.close(true);\n        }, error => {\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields();\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n    reset() {\n      this.form.controls['codeType1'].setValue('');\n      this.form.controls['segment1'].setValue(''); // this.form.controls['codeType2'].setValue('');\n      // this.form.controls['segment2'].setValue('');\n      // this.form.controls['codeType3'].setValue('');\n      // this.form.controls['segment3'].setValue('');\n    }\n\n  }\n\n  AddingtopologyComponent.ɵfac = function AddingtopologyComponent_Factory(t) {\n    return new (t || AddingtopologyComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.AuthorizeService), i0.ɵɵdirectiveInject(i4.UtilityService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.NotificationService));\n  };\n\n  AddingtopologyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddingtopologyComponent,\n    selectors: [[\"app-addingtopology\"]],\n    decls: 33,\n    vars: 28,\n    consts: [[1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"table\", \"table-bordered\"], [\"for\", \"BranchCode\"], [\"id\", \"BranchCode\", \"type\", \"text\", \"formControlName\", \"codeType1\", 1, \"form-control\", 3, \"placeholder\"], [3, \"control\"], [\"id\", \"coty\", \"formControlName\", \"segment1\", 1, \"custom-select\", \"mr-sm-2\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"mt-3\"], [1, \"col-md-12\", \"col-lg-12\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-secondary\", \"btn-midblock\", 3, \"value\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-primary\", \"btn-midblock\", 3, \"value\"], [3, \"value\"]],\n    template: function AddingtopologyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h3\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AddingtopologyComponent_Template_button_click_4_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(5, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddingtopologyComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(7, \"table\", 4);\n        i0.ɵɵelementStart(8, \"tr\");\n        i0.ɵɵelementStart(9, \"td\");\n        i0.ɵɵelementStart(10, \"label\", 5);\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"td\");\n        i0.ɵɵelement(14, \"input\", 6);\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelement(17, \"validation-message\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"td\");\n        i0.ɵɵelementStart(19, \"select\", 8);\n        i0.ɵɵelementStart(20, \"option\", 9);\n        i0.ɵɵtext(21);\n        i0.ɵɵpipe(22, \"translate\");\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, AddingtopologyComponent_option_24_Template, 2, 2, \"option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"validation-message\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 11);\n        i0.ɵɵelementStart(27, \"div\", 12);\n        i0.ɵɵelementStart(28, \"input\", 13);\n        i0.ɵɵlistener(\"click\", function AddingtopologyComponent_Template_input_click_28_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵpipe(29, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30, \" \\u00A0 \");\n        i0.ɵɵelement(31, \"input\", 14);\n        i0.ɵɵpipe(32, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 12, \"Topology\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 14, \"Account_Code\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(15, 16, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(16, 18, \"Account_Code\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.codeType1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(22, 20, \"Choose\"), \" \", i0.ɵɵpipeBind1(23, 22, \"Account_Code\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.segmentList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.segment1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(29, 24, \"Cancel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(32, 26, \"Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.ValidationMessagesComponent, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i8.NgForOf],\n    pipes: [i9.TranslatePipe],\n    encapsulation: 2\n  });\n  return AddingtopologyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}