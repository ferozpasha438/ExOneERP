{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ParentSystemSetupComponent } from '../sharedcomponent/parentsystemsetup.component';\nimport { default as data } from \"../../assets/i18n/apiuri.json\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../api-authorization/AuthorizeService\";\nimport * as i5 from \"../services/utility.service\";\nimport * as i6 from \"../services/notification.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../sharedcomponent/ValidationMessagesComponent\";\nimport * as i9 from \"../sharedcomponent/submit.loader\";\n\nfunction LoginComponent_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" CIN Number \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Username and password \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 18);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_ng_container_28_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.cinlogin();\n    });\n    i0.ɵɵelementStart(2, \"div\", 19);\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵelementStart(4, \"div\", 21);\n    i0.ɵɵelementStart(5, \"label\", 22);\n    i0.ɵɵtext(6, \"CIN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 23);\n    i0.ɵɵelement(8, \"validation-message\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 20);\n    i0.ɵɵelementStart(10, \"div\", 21);\n    i0.ɵɵelementStart(11, \"button\", 25);\n    i0.ɵɵtext(12, \"Validate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.cinloginForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"control\", ctx_r2.cinloginForm.controls.cinNumber);\n  }\n}\n\nfunction LoginComponent_ng_container_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 18);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_ng_container_29_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.login();\n    });\n    i0.ɵɵelementStart(2, \"div\", 19);\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵelementStart(4, \"div\", 21);\n    i0.ɵɵelementStart(5, \"label\", 26);\n    i0.ɵɵtext(6, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 20);\n    i0.ɵɵelementStart(9, \"div\", 21);\n    i0.ɵɵelementStart(10, \"label\", 28);\n    i0.ɵɵtext(11, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 30);\n    i0.ɵɵelement(14, \"submit-button\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 32);\n    i0.ɵɵtext(16, \" Don't have an account? \");\n    i0.ɵɵelementStart(17, \"a\", 33);\n    i0.ɵɵtext(18, \"Register Here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r3.loginForm);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"title\", \"Sign In\");\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent extends ParentSystemSetupComponent {\n    constructor(fb, http, router, // private apiService: ApiService,\n    authService, utilService, notifyService) {\n      super(authService);\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.notifyService = notifyService;\n      this.dbconnectionString = '';\n      this.dbHRMconnectionString = '';\n      this.apiEndPoint = ''; //moduleCodes: string = '';\n      //cinNumber: string = '';\n\n      this.isCinForm = true;\n      this.apiUri = data.financeurl;\n      this.setForm();\n    }\n\n    ngOnInit() {\n      //console.log(this.authService.isAuthenticated())\n      //if (this.authService.isAuthenticated())\n      //  window.location.href = \"dashboard\";\n      //else\n      localStorage.clear();\n    }\n\n    setForm() {\n      this.cinloginForm = this.fb.group({\n        //'cinNumber': ['CIN0005', Validators.required]\n        'cinNumber': ['Saher', Validators.required]\n      });\n      this.loginForm = this.fb.group({\n        'cinNumber': '',\n        'userName': ['Admin', Validators.required],\n        'password': ['admin@123', Validators.required]\n      });\n    } //setForm() {\n    //  this.cinloginForm = this.fb.group({      \n    //    'cinNumber': ['', Validators.required]      \n    //  });\n    //  this.loginForm = this.fb.group({\n    //    'cinNumber': '',\n    //    'userName': ['', Validators.required],\n    //    'password': ['', Validators.required]     \n    //  });\n    //}\n\n\n    cinlogin() {\n      if (this.cinloginForm.valid) {\n        this.authService.SetSubmitting(true);\n        this.http.post(`${this.apiUri}/validatecin`, this.cinloginForm.value).subscribe(data => {\n          // console.log(data)\n          let metaData = data;\n          this.dbconnectionString = metaData.dbConnectionString;\n          this.dbHRMconnectionString = metaData.utlUrl;\n          this.apiEndPoint = metaData.admUrl;\n          localStorage.setItem('setupapi', metaData.admUrl);\n          localStorage.setItem('apiEndpoint', metaData.admUrl);\n          localStorage.setItem('oprEndPoint', metaData.opmUrl);\n          localStorage.setItem('dbConnectionString', this.dbconnectionString);\n          localStorage.setItem('dbHRMConnectionString', this.dbHRMconnectionString);\n          localStorage.setItem('moduleCodes', metaData.moduleCodes);\n          this.loginForm.controls['cinNumber'].setValue(metaData.cinNumber);\n          localStorage.setItem('metaData', JSON.stringify(metaData));\n          this.isCinForm = false;\n        }, error => {\n          this.utilService.ShowApiErrorMessage(error);\n        });\n        this.authService.SetSubmitting(false);\n      } else this.utilService.FillUpFields();\n    } ////login() {\n    ////  if (this.loginForm.valid) {\n    ////    //alert(ApiEndPoint);\n    ////    //const headers = new HttpHeaders()\n    ////    //  .set('ConnectionString', this.dbconnectionString);\n    ////    this.http.post(`${this.apiEndPoint}/login`, this.loginForm.value)//, { 'headers': headers })\n    ////      .subscribe(data => {\n    ////        localStorage.setItem('userName', this.loginForm.controls['userName'].value)\n    ////        localStorage.setItem('menuItems', JSON.stringify(data as Array<MenuItemListDto>));\n    ////        this.authService.setAuthorize(true);\n    ////        this.notifyService.showSuccess('Login Successful');\n    ////        this.router.navigateByUrl('dashboard');\n    ////        //window.location.href = \"/dashboard\";\n    ////      },\n    ////        error => {\n    ////          this.utilService.ShowApiErrorMessage(error);\n    ////        });\n    ////  }\n    ////}\n\n\n    login() {\n      if (this.loginForm.valid) {\n        this.authService.SetSubmitting(true);\n        this.http.post(`${this.apiEndPoint}/login`, this.loginForm.value).subscribe(res => {\n          const menuItems = res['userSideMenuList'];\n          const token = res['token'];\n          const logoURL = res['logoURL'];\n          this.notifyService.showSuccess('Login Successful');\n          localStorage.setItem('accessToken', token);\n          localStorage.setItem('logoURL', logoURL);\n          localStorage.setItem('userName', this.loginForm.controls['userName'].value);\n          localStorage.setItem('menuItems', JSON.stringify(menuItems));\n          this.authService.setAuthorize(true);\n          this.authService.SetSubmitting(false); //this.router.navigateByUrl('dashboard');\n\n          window.location.href = \"dashboard\";\n        }, error => {\n          this.authService.SetSubmitting(false);\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields();\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthorizeService), i0.ɵɵdirectiveInject(i5.UtilityService), i0.ɵɵdirectiveInject(i6.NotificationService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login-component\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 30,\n    vars: 4,\n    consts: [[1, \"main-wrapper\"], [1, \"auth-wrapper\", \"d-flex\", \"no-block\", \"justify-content-center\", \"align-items-center\", \"position-relative\"], [1, \"auth-box\", \"row\"], [1, \"col-lg-12\", \"col-md-12\"], [1, \"col-lg-6\", \"col-md-6\", \"modal-bg-img\"], [\"src\", \"assets/images/lefbg3.png\", 2, \"width\", \"100%\"], [1, \"col-lg-6\", \"col-md-6\", \"bg-white\", \"customradius\"], [1, \"selectLanguage\"], [1, \"customize-input\"], [1, \"custom-select\", \"form-control\", \"bg-white\", \"custom-radius\", \"custom-shadow\", \"border-0\"], [\"selected\", \"\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [1, \"p-3\"], [1, \"mt-3\", \"text-center\"], [1, \"text-center\"], [4, \"ngIf\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"form-group\"], [\"for\", \"cin\", 1, \"text-dark\"], [\"id\", \"cin\", \"type\", \"text\", \"placeholder\", \"Enter your CIN\", \"formControlName\", \"cinNumber\", 1, \"form-control\"], [3, \"control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-block\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-primary\"], [\"for\", \"uname\", 1, \"text-dark\"], [\"id\", \"uname\", \"type\", \"text\", \"placeholder\", \"Enter your username\", \"formControlName\", \"userName\", 1, \"form-control\"], [\"for\", \"pwd\", 1, \"text-dark\"], [\"id\", \"pwd\", \"type\", \"password\", \"placeholder\", \"Enter your password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"col-lg-12\", \"text-center\"], [3, \"title\"], [1, \"col-lg-12\", \"text-center\", \"mt-5\"], [\"href\", \"#\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-outline-primary\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵelementStart(9, \"select\", 9);\n        i0.ɵɵelementStart(10, \"option\", 10);\n        i0.ɵɵtext(11, \"EN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"option\", 11);\n        i0.ɵɵtext(13, \"AB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 12);\n        i0.ɵɵtext(15, \"AK\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 13);\n        i0.ɵɵtext(17, \"BE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 14);\n        i0.ɵɵelementStart(19, \"h2\", 15);\n        i0.ɵɵtext(20, \"Sign In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\", 16);\n        i0.ɵɵtext(22, \" Enter your \");\n        i0.ɵɵtemplate(23, LoginComponent_ng_container_23_Template, 2, 0, \"ng-container\", 17);\n        i0.ɵɵtemplate(24, LoginComponent_ng_container_24_Template, 2, 0, \"ng-container\", 17);\n        i0.ɵɵtext(25, \" to \");\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵtext(27, \"access erp panel. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, LoginComponent_ng_container_28_Template, 13, 2, \"ng-container\", 17);\n        i0.ɵɵtemplate(29, LoginComponent_ng_container_29_Template, 19, 2, \"ng-container\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngIf\", ctx.isCinForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isCinForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isCinForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isCinForm);\n      }\n    },\n    directives: [i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i7.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i8.ValidationMessagesComponent, i9.SubmitLoaderComponent],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}