{"ast":null,"code":"import { HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './account/login.component';\nimport { PaymentComponent } from './account/payment.component';\nimport { AuthorizeInterceptor } from './api-authorization/authorize.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'; //import { BranchesComponent } from './systemsetup/branches/branches.component';\n//import { CitiesComponent } from './systemsetup/cities/cities.component';\n//import { CompanysetupComponent } from './systemsetup/companysetup/companysetup.component';\n//import { CurrencyComponent } from './systemsetup/currency/currency.component';\n//import { LoginandsecurityComponent } from './systemsetup/loginandsecurity/loginandsecurity.component';\n//import { TaxesComponent } from './systemsetup/taxes/taxes.component';\n//import { TransactionsequenceComponent } from './systemsetup/transactionsequence/transactionsequence.component';\n//import { FinancialmastersetupComponent } from './SystemSetup/financialmastersetup/financialmastersetup.component';\n//import { AddupdatebranchComponent } from './systemsetup/addupdatebranch/addupdatebranch.component';\n//import { AddupdatecityComponent } from './systemsetup/cities/addupdatecity.component';\n//import { AddupdatecompanysetupComponent } from './systemsetup/addupdatecompanysetup/addupdatecompanysetup.component';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { LeftMenuComponent } from './left-menu/left-menu.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from './sharedcomponent/shared.module';\nimport { NgxPrintModule } from 'ngx-print';\nimport { NgApexchartsModule } from \"ng-apexcharts\";\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\nimport { TestExampleComponent } from './Operationalmgt/test-example/test-example.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@ngx-translate/core\"; //import { Login2Component } from './account/login2/login2.component';\n// AoT requires an exported function for factories\n\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http, 'assets/i18n/', '.json');\n} //export function ModuleHttpLoaderFactory(http: HttpClient) {\n//  const baseTranslateUrl = './assets/i18n';\n//  const options: IModuleTranslationOptions = {\n//    modules: [\n//      // Fetches file at e.g. /assets/i18n/en.json\n//      { baseTranslateUrl },\n//      // Fetches file at e.g. /assets/i18n/non-lazy/en.json\n//     // { baseTranslateUrl, moduleName: 'non-lazy', namespace: 'FEATURE_FOO' }\n//    ]\n//  };\n//  return new ModuleTranslateLoader(http, options);\n//}\n//export function ApplicationInitializerFactory(\n//  translate: TranslateService,\n//  injector: Injector\n//) {\n//  return async () => {\n//    await injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n//    const deaultLang = 'en';\n//    translate.addLangs(['en', 'ar']);\n//    translate.setDefaultLang(deaultLang);\n//    try {\n//      await translate.use(deaultLang).toPromise();\n//    } catch (err) {\n//      console.log(err);\n//    }\n//  };\n//}\n\nexport class AppModule {}\n\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\n\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [//{\n  //  provide: APP_INITIALIZER,\n  //  useFactory: ApplicationInitializerFactory,\n  //  deps: [TranslateService, Injector],\n  //  multi: true\n  //},    \n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthorizeInterceptor,\n    multi: true\n  }],\n  imports: [[// BrowserModule,    \n  BrowserAnimationsModule, NgxPrintModule, NgApexchartsModule, NgxMaterialTimepickerModule, //HttpClientModule,\n  //FormsModule,\n  //ReactiveFormsModule,\n  AppRoutingModule, ToastrModule.forRoot({\n    timeOut: 2500,\n    positionClass: 'toast-top-right',\n    preventDuplicates: true\n  }), TranslateModule.forRoot({\n    loader: {\n      provide: TranslateLoader,\n      useFactory: HttpLoaderFactory,\n      deps: [HttpClient]\n    }\n  }), //TranslateModule.forRoot({\n  //  loader: {\n  //    provide: TranslateLoader,\n  //    useFactory: HttpLoaderFactory,\n  //    deps: [HttpClient]\n  //  }\n  //}),\n  //TreeviewModule.forRoot(),\n  SharedModule //    FinanceModule,\n  // MatTableModule,\n  // MatSlideToggleModule,\n  //// MatSnackBarModule,\n  // MatPaginatorModule,\n  // MatSortModule,\n  // MatDialogModule,\n  // MatDatepickerModule,\n  // MatNativeDateModule,\n  // MatTabsModule,\n  // MatTreeModule,\n  // MatIconModule,\n  // MatButtonModule,\n  // MatCheckboxModule,\n  // MatProgressSpinnerModule,\n  ]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, NavMenuComponent, HomeComponent, LoginComponent, PaymentComponent, DashboardComponent, LeftMenuComponent, TestExampleComponent],\n    imports: [// BrowserModule,    \n    BrowserAnimationsModule, NgxPrintModule, NgApexchartsModule, NgxMaterialTimepickerModule, //HttpClientModule,\n    //FormsModule,\n    //ReactiveFormsModule,\n    AppRoutingModule, i1.ToastrModule, i2.TranslateModule, //TranslateModule.forRoot({\n    //  loader: {\n    //    provide: TranslateLoader,\n    //    useFactory: HttpLoaderFactory,\n    //    deps: [HttpClient]\n    //  }\n    //}),\n    //TreeviewModule.forRoot(),\n    SharedModule]\n  });\n})();","map":{"version":3,"sources":["E:/LS_Projects/ExOneERP/LS_ERP/LS.HRM/ClientApp/src/app/app.module.ts"],"names":["HttpClient","HTTP_INTERCEPTORS","LoginComponent","PaymentComponent","AuthorizeInterceptor","AppRoutingModule","AppComponent","DashboardComponent","HomeComponent","LeftMenuComponent","NavMenuComponent","TranslateHttpLoader","BrowserAnimationsModule","ToastrModule","TranslateLoader","TranslateModule","SharedModule","NgxPrintModule","NgApexchartsModule","NgxMaterialTimepickerModule","TestExampleComponent","i0","i1","i2","HttpLoaderFactory","http","AppModule","ɵfac","AppModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","bootstrap","ɵinj","ɵɵdefineInjector","providers","provide","useClass","multi","imports","forRoot","timeOut","positionClass","preventDuplicates","loader","useFactory","deps","ngJitMode","ɵɵsetNgModuleScope","declarations"],"mappings":"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","sourcesContent":["import { HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { LoginComponent } from './account/login.component';\r\nimport { PaymentComponent } from './account/payment.component';\r\nimport { AuthorizeInterceptor } from './api-authorization/authorize.interceptor';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n//import { BranchesComponent } from './systemsetup/branches/branches.component';\r\n//import { CitiesComponent } from './systemsetup/cities/cities.component';\r\n//import { CompanysetupComponent } from './systemsetup/companysetup/companysetup.component';\r\n//import { CurrencyComponent } from './systemsetup/currency/currency.component';\r\n//import { LoginandsecurityComponent } from './systemsetup/loginandsecurity/loginandsecurity.component';\r\n//import { TaxesComponent } from './systemsetup/taxes/taxes.component';\r\n//import { TransactionsequenceComponent } from './systemsetup/transactionsequence/transactionsequence.component';\r\n//import { FinancialmastersetupComponent } from './SystemSetup/financialmastersetup/financialmastersetup.component';\r\n//import { AddupdatebranchComponent } from './systemsetup/addupdatebranch/addupdatebranch.component';\r\n//import { AddupdatecityComponent } from './systemsetup/cities/addupdatecity.component';\r\n//import { AddupdatecompanysetupComponent } from './systemsetup/addupdatecompanysetup/addupdatecompanysetup.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LeftMenuComponent } from './left-menu/left-menu.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { SharedModule } from './sharedcomponent/shared.module';\r\nimport { NgxPrintModule } from 'ngx-print';\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\nimport { TestExampleComponent } from './Operationalmgt/test-example/test-example.component';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"ngx-toastr\";\r\nimport * as i2 from \"@ngx-translate/core\";\r\n//import { Login2Component } from './account/login2/login2.component';\r\n// AoT requires an exported function for factories\r\nexport function HttpLoaderFactory(http) {\r\n    return new TranslateHttpLoader(http, 'assets/i18n/', '.json');\r\n}\r\n//export function ModuleHttpLoaderFactory(http: HttpClient) {\r\n//  const baseTranslateUrl = './assets/i18n';\r\n//  const options: IModuleTranslationOptions = {\r\n//    modules: [\r\n//      // Fetches file at e.g. /assets/i18n/en.json\r\n//      { baseTranslateUrl },\r\n//      // Fetches file at e.g. /assets/i18n/non-lazy/en.json\r\n//     // { baseTranslateUrl, moduleName: 'non-lazy', namespace: 'FEATURE_FOO' }\r\n//    ]\r\n//  };\r\n//  return new ModuleTranslateLoader(http, options);\r\n//}\r\n//export function ApplicationInitializerFactory(\r\n//  translate: TranslateService,\r\n//  injector: Injector\r\n//) {\r\n//  return async () => {\r\n//    await injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\r\n//    const deaultLang = 'en';\r\n//    translate.addLangs(['en', 'ar']);\r\n//    translate.setDefaultLang(deaultLang);\r\n//    try {\r\n//      await translate.use(deaultLang).toPromise();\r\n//    } catch (err) {\r\n//      console.log(err);\r\n//    }\r\n//  };\r\n//}\r\nexport class AppModule {\r\n}\r\nAppModule.ɵfac = function AppModule_Factory(t) { return new (t || AppModule)(); };\r\nAppModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: AppModule, bootstrap: [AppComponent] });\r\nAppModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\r\n        //{\r\n        //  provide: APP_INITIALIZER,\r\n        //  useFactory: ApplicationInitializerFactory,\r\n        //  deps: [TranslateService, Injector],\r\n        //  multi: true\r\n        //},    \r\n        { provide: HTTP_INTERCEPTORS, useClass: AuthorizeInterceptor, multi: true }\r\n    ], imports: [[\r\n            // BrowserModule,    \r\n            BrowserAnimationsModule,\r\n            NgxPrintModule,\r\n            NgApexchartsModule,\r\n            NgxMaterialTimepickerModule,\r\n            //HttpClientModule,\r\n            //FormsModule,\r\n            //ReactiveFormsModule,\r\n            AppRoutingModule,\r\n            ToastrModule.forRoot({\r\n                timeOut: 2500,\r\n                positionClass: 'toast-top-right',\r\n                preventDuplicates: true,\r\n            }),\r\n            TranslateModule.forRoot({\r\n                loader: {\r\n                    provide: TranslateLoader,\r\n                    useFactory: HttpLoaderFactory,\r\n                    deps: [HttpClient]\r\n                }\r\n            }),\r\n            //TranslateModule.forRoot({\r\n            //  loader: {\r\n            //    provide: TranslateLoader,\r\n            //    useFactory: HttpLoaderFactory,\r\n            //    deps: [HttpClient]\r\n            //  }\r\n            //}),\r\n            //TreeviewModule.forRoot(),\r\n            SharedModule,\r\n            //    FinanceModule,\r\n            // MatTableModule,\r\n            // MatSlideToggleModule,\r\n            //// MatSnackBarModule,\r\n            // MatPaginatorModule,\r\n            // MatSortModule,\r\n            // MatDialogModule,\r\n            // MatDatepickerModule,\r\n            // MatNativeDateModule,\r\n            // MatTabsModule,\r\n            // MatTreeModule,\r\n            // MatIconModule,\r\n            // MatButtonModule,\r\n            // MatCheckboxModule,\r\n            // MatProgressSpinnerModule,\r\n        ]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, { declarations: [AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        LoginComponent,\r\n        PaymentComponent,\r\n        DashboardComponent,\r\n        LeftMenuComponent,\r\n        TestExampleComponent], imports: [\r\n        // BrowserModule,    \r\n        BrowserAnimationsModule,\r\n        NgxPrintModule,\r\n        NgApexchartsModule,\r\n        NgxMaterialTimepickerModule,\r\n        //HttpClientModule,\r\n        //FormsModule,\r\n        //ReactiveFormsModule,\r\n        AppRoutingModule, i1.ToastrModule, i2.TranslateModule, \r\n        //TranslateModule.forRoot({\r\n        //  loader: {\r\n        //    provide: TranslateLoader,\r\n        //    useFactory: HttpLoaderFactory,\r\n        //    deps: [HttpClient]\r\n        //  }\r\n        //}),\r\n        //TreeviewModule.forRoot(),\r\n        SharedModule] }); })();\r\n"]},"metadata":{},"sourceType":"module"}