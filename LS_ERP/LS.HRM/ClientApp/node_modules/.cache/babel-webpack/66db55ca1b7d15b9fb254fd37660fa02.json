{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/api.service\";\nimport * as i3 from \"../../../api-authorization/AuthorizeService\";\nimport * as i4 from \"../../../services/utility.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"../../../services/notification.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../../sharedcomponent/ValidationMessagesComponent\";\nimport * as i9 from \"@angular/material/datepicker\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/slide-toggle\";\nimport * as i12 from \"@ngx-translate/core\";\n\nfunction AddupdateExaminationManagementComponent_ng_container_18_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r12 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"value\", item_r12.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.isArab ? item_r12.textTwo : item_r12.text);\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddupdateExaminationManagementComponent_ng_container_18_option_1_Template, 2, 2, \"option\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.branchCodeList);\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_ng_container_30_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"value\", item_r14.gradeCode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.isArab ? item_r14.gradeName2 : item_r14.gradeName);\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_ng_container_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddupdateExaminationManagementComponent_ng_container_30_option_1_Template, 2, 2, \"option\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.gradeCodeList);\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_ng_container_42_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"value\", item_r16.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r15.isArab ? item_r16.textTwo : item_r16.text);\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_ng_container_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddupdateExaminationManagementComponent_ng_container_42_option_1_Template, 2, 2, \"option\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.typesOfExamsList);\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_ng_container_92_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"value\", item_r18.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r17.isArab ? item_r18.textTwo : item_r18.text);\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_ng_container_92_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddupdateExaminationManagementComponent_ng_container_92_option_1_Template, 2, 2, \"option\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.usersList);\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_div_94_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6);\n    i0.ɵɵelement(5, \"mat-slide-toggle\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, \"Is_Completed\"));\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_div_95_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 13);\n    i0.ɵɵelement(6, \"input\", 31);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementStart(8, \"div\", 15);\n    i0.ɵɵelement(9, \"mat-datepicker-toggle\", 16);\n    i0.ɵɵelement(10, \"mat-datepicker\", null, 32);\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"validation-message\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r19 = i0.ɵɵreference(11);\n\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 5, \"Date_Of_Completion\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(7, 7, \"Date_Of_Completion\"));\n    i0.ɵɵproperty(\"matDatepicker\", _r19);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"for\", _r19);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", ctx_r7.form.controls.dateOfCompletion);\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_div_96_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 13);\n    i0.ɵɵelement(6, \"input\", 33);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"Date_of_Result\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(7, 4, \"Date_of_Result\"));\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_div_97_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6);\n    i0.ɵɵelement(5, \"mat-slide-toggle\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, \"Result_Declared\"));\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_div_98_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 39);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵelementStart(3, \"div\", 13);\n    i0.ɵɵelement(4, \"input\", 40);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelementStart(7, \"div\", 13);\n    i0.ɵɵelement(8, \"input\", 41);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵelementStart(11, \"div\", 13);\n    i0.ɵɵelement(12, \"input\", 42);\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const i_r22 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r22);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(5, 4, \"Subject_Code\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(9, 6, \"Starting_Date\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(13, 8, \"Ending_Date\"));\n  }\n}\n\nfunction AddupdateExaminationManagementComponent_div_98_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"table\", 36);\n    i0.ɵɵelementStart(2, \"thead\");\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"tbody\", 37);\n    i0.ɵɵtemplate(14, AddupdateExaminationManagementComponent_div_98_ng_container_14_Template, 14, 10, \"ng-container\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 4, \"Subject_Code\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 6, \"Starting_Date\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 8, \"Ending_Date\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.getFormControls.controls);\n  }\n}\n\nexport let AddupdateExaminationManagementComponent = /*#__PURE__*/(() => {\n  class AddupdateExaminationManagementComponent {\n    constructor(fb, apiService, authService, utilService, dialogRef, notifyService) {\n      this.fb = fb;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.dialogRef = dialogRef;\n      this.notifyService = notifyService;\n      this.id = 0;\n      this.isArab = false;\n      this.myControl = new FormControl('');\n      this.options = ['One', 'Two', 'Three'];\n      this.isShown = false;\n      this.gradeCodeList = [];\n      this.branchCodeList = [];\n      this.typesOfExamsList = [];\n      this.usersList = [];\n      this.isShowCompleteSection = false;\n      this.gradeSubjectList = [];\n      this.buttonstatus = false;\n    }\n\n    ngOnInit() {\n      this.isArab = this.utilService.isArabic();\n      this.form = this.fb.group({\n        'branchCode': ['', Validators.required],\n        'gradeCode': ['', Validators.required],\n        'typeofExamination': ['', Validators.required],\n        'startingDate': ['', Validators.required],\n        'endingDate': ['', Validators.required],\n        'remarks': [''],\n        'preparedBy': ['', Validators.required],\n        'dateOfCompletion': [''],\n        'dateofResult': [''],\n        'isCompleted': [false],\n        'isResultDeclared': [false],\n        'tableRows': this.fb.array([])\n      });\n      this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value || '')));\n      this.loadData();\n\n      if (this.row) {\n        this.id = parseInt(this.row['id']);\n        this.form.patchValue(this.row);\n        this.editExaminationData();\n      }\n    }\n\n    initiateForm(code) {\n      return this.fb.group({\n        'subjectCode': [code, Validators.required],\n        'startingDateTime': ['', Validators.required],\n        'endingDateTime': ['', Validators.required]\n      });\n    }\n\n    initiateEditForm(code, sdate, tdate) {\n      return this.fb.group({\n        'subjectCode': [code, Validators.required],\n        'startingDateTime': [sdate, Validators.required],\n        'endingDateTime': [tdate, Validators.required]\n      });\n    }\n\n    get getFormControls() {\n      const control = this.form.get('tableRows');\n      return control;\n    } //addRow() {\n    //  let control = this.form.get('tableRows') as FormArray;\n    //  control.push(this.initiateForm());\n    //  this.buttonstatus = true;\n    //}\n    //deleteRow(index: number) {\n    //  const control = this.form.get('tableRows') as FormArray;\n    //  control.removeAt(index);\n    //  if (control.length == 0) {\n    //    this.buttonstatus = false;\n    //  }\n    //}\n\n\n    loadData() {\n      this.apiService.getall('schoolBranches/getSchoolBranchList').subscribe(res => {\n        this.branchCodeList = res;\n      });\n      this.apiService.getPagination('acedemicClassGrade', this.utilService.getQueryString(0, 1000, '', '')).subscribe(res => {\n        if (res) this.gradeCodeList = res['items'];\n      });\n      this.apiService.getall('ExaminationManagement/GetAllExamTypesList').subscribe(res => {\n        this.typesOfExamsList = res;\n      });\n    }\n\n    loadUsersList() {\n      const branchCode = this.form.value['branchCode'];\n      const gradeCode = this.form.value['gradeCode'];\n\n      if (branchCode != null && branchCode != '' && gradeCode != null && gradeCode != '') {\n        this.apiService.getall(`ExaminationManagement/GetAllUsersList/${gradeCode}/${branchCode}`).subscribe(res => {\n          this.usersList = res;\n        });\n      }\n\n      if (gradeCode != null && gradeCode != '') {\n        this.apiService.getall(`AcademicsSubjects/GetAllGradeSubjectList/${gradeCode}`).subscribe(res => {\n          if (res) {\n            this.gradeSubjectList = res;\n\n            if (this.row) {} else {\n              let control = this.form.get('tableRows');\n\n              for (var i = 0; i < res.length; i++) {\n                control.push(this.initiateForm(res[i].value));\n              }\n\n              if (res.length > 0) {\n                this.isShown = true;\n                this.buttonstatus = true;\n              }\n            }\n          }\n        });\n      }\n    }\n\n    _filter(value) {\n      const filterValue = value.toLowerCase();\n      return this.options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n\n    submit() {\n      if (this.form.valid) {\n        if (this.id > 0) this.form.value['id'] = this.id;\n        this.form.value['startingDate'] = this.utilService.selectedDate(this.form.controls['startingDate'].value);\n        this.form.value['endingDate'] = this.utilService.selectedDate(this.form.controls['endingDate'].value);\n        if (this.form.controls['dateOfCompletion'].value != null && this.form.controls['dateOfCompletion'].value != '') this.form.value['dateOfCompletion'] = this.utilService.selectedDate(this.form.controls['dateOfCompletion'].value);else this.form.value['dateOfCompletion'] = null;\n        if (this.form.controls['dateofResult'].value != null && this.form.controls['dateofResult'].value != '') this.form.value['dateofResult'] = this.utilService.selectedDate(this.form.controls['dateofResult'].value);else this.form.value['dateofResult'] = null; //const rows = this.form.get('tableRows') as FormArray;\n        //for (var i = 0; i < rows.controls.length; i++) {\n        //  if (rows.controls[i].value['startingDateTime'] != null && rows.controls[i].value['startingDateTime'] != '')\n        //    rows.controls[i].value['startingDateTime'] = this.utilService.selectedDate(rows.controls[i].value['startingDateTime']);\n        //  else\n        //    rows.controls[i].value['startingDateTime'] = null;\n        //  if (rows.controls[i].value['endingDateTime'] != null && rows.controls[i].value['endingDateTime'] != '')\n        //    rows.controls[i].value['endingDateTime'] = this.utilService.selectedDate(rows.controls[i].value['endingDateTime']);\n        //  else\n        //    rows.controls[i].value['endingDateTime'] = null;\n        //}\n\n        this.apiService.post('ExaminationManagement', this.form.value).subscribe(res => {\n          this.utilService.OkMessage();\n          this.reset();\n          this.dialogRef.close(true);\n        }, error => {\n          console.error(error);\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields();\n    }\n\n    editExaminationData() {\n      this.apiService.getall(`ExaminationManagement/${this.id}`).subscribe(res => {\n        if (res) {\n          this.form.patchValue({\n            'branchCode': res.branchCode,\n            'dateOfCompletion': res.dateOfCompletion,\n            'dateofResult': res.dateofResult,\n            'endingDate': res.endingDate,\n            'gradeCode': res.gradeCode,\n            'isCompleted': res.isCompleted,\n            'isResultDeclared': res.isResultDeclared,\n            'preparedBy': res.preparedBy,\n            'remarks': res.remarks,\n            'startingDate': res.startingDate,\n            'typeofExamination': res.typeofExamination,\n            'tableRows': res.tableRows\n          });\n          let date1 = formatDate(new Date(), 'yyyy-MM-dd', 'en_US');\n          let date2 = formatDate(res.endingDate, 'yyyy-MM-dd', 'en_US');\n\n          if (date1 > date2) {\n            this.isShowCompleteSection = true;\n          }\n\n          let control = this.form.get('tableRows');\n\n          for (var i = 0; i < res.tableRows.length; i++) {\n            control.push(this.initiateEditForm(res.tableRows[i].subjectCode, res.tableRows[i].startingDateTime, res.tableRows[i].endingDateTime));\n          }\n\n          this.loadUsersList();\n          this.form.patchValue({\n            'preparedBy': res.preparedBy\n          });\n          this.isShown = true;\n          this.buttonstatus = true;\n        }\n      });\n    }\n\n    reset() {\n      this.form.reset();\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  AddupdateExaminationManagementComponent.ɵfac = function AddupdateExaminationManagementComponent_Factory(t) {\n    return new (t || AddupdateExaminationManagementComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.AuthorizeService), i0.ɵɵdirectiveInject(i4.UtilityService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.NotificationService));\n  };\n\n  AddupdateExaminationManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddupdateExaminationManagementComponent,\n    selectors: [[\"app-addupdate-examination-management\"]],\n    decls: 106,\n    vars: 84,\n    consts: [[1, \"modal-title\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"outer\"], [1, \"row\", \"rowm0\", \"mt-3\"], [1, \"col-md-6\", \"col-lg-6\", \"col-sm-6\"], [1, \"form-group\"], [\"formControlName\", \"branchCode\", 1, \"custom-select\", \"mr-sm-2\", 3, \"change\"], [\"value\", \"\"], [4, \"ngIf\"], [3, \"control\"], [\"formControlName\", \"gradeCode\", 1, \"custom-select\", \"mr-sm-2\", 3, \"change\"], [\"formControlName\", \"typeofExamination\", 1, \"custom-select\", \"mr-sm-2\"], [1, \"input-group\"], [\"formControlName\", \"startingDate\", 1, \"form-control\", \"datapickerinput\", 3, \"placeholder\", \"matDatepicker\"], [1, \"input-group-prepend\", \"datapickericon\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker1\", \"\"], [\"formControlName\", \"endingDate\", 1, \"form-control\", \"datapickerinput\", 3, \"placeholder\", \"matDatepicker\"], [\"picker2\", \"\"], [\"type\", \"text\", \"formControlName\", \"remarks\", 1, \"form-control\", 3, \"placeholder\"], [\"formControlName\", \"preparedBy\", 1, \"custom-select\", \"mr-sm-2\"], [\"class\", \"col-md-6 col-lg-6 col-sm-6\", 4, \"ngIf\"], [\"class\", \"card-body\", 4, \"ngIf\"], [1, \"row\", \"customrow\", \"mt-4\"], [1, \"col-lg-12\", \"col-md-12\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"value\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-primary\", 3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"color\", \"primary\", \"formControlName\", \"isCompleted\"], [\"formControlName\", \"dateOfCompletion\", 1, \"form-control\", \"datapickerinput\", 3, \"placeholder\", \"matDatepicker\"], [\"picker3\", \"\"], [\"formControlName\", \"dateofResult\", \"readonly\", \"\", 1, \"form-control\", \"datapickerinput\", 3, \"placeholder\"], [\"disabled\", \"\", \"color\", \"primary\", \"formControlName\", \"isResultDeclared\"], [1, \"card-body\"], [1, \"table\", \"table-striped\", \"table-bordered\"], [\"formArrayName\", \"tableRows\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [\"type\", \"text\", \"formControlName\", \"subjectCode\", \"readonly\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"matInput\", \"\", \"type\", \"datetime-local\", \"formControlName\", \"startingDateTime\", 1, \"form-control\", \"datapickerinput\", 3, \"placeholder\"], [\"matInput\", \"\", \"type\", \"datetime-local\", \"formControlName\", \"endingDateTime\", 1, \"form-control\", \"datapickerinput\", 3, \"placeholder\"]],\n    template: function AddupdateExaminationManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AddupdateExaminationManagementComponent_Template_button_click_3_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(4, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AddupdateExaminationManagementComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 7);\n        i0.ɵɵlistener(\"change\", function AddupdateExaminationManagementComponent_Template_select_change_13_listener() {\n          return ctx.loadUsersList();\n        });\n        i0.ɵɵelementStart(14, \"option\", 8);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵpipe(17, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, AddupdateExaminationManagementComponent_ng_container_18_Template, 2, 1, \"ng-container\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"validation-message\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 5);\n        i0.ɵɵelementStart(21, \"div\", 6);\n        i0.ɵɵelementStart(22, \"label\");\n        i0.ɵɵtext(23);\n        i0.ɵɵpipe(24, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"select\", 11);\n        i0.ɵɵlistener(\"change\", function AddupdateExaminationManagementComponent_Template_select_change_25_listener() {\n          return ctx.loadUsersList();\n        });\n        i0.ɵɵelementStart(26, \"option\", 8);\n        i0.ɵɵtext(27);\n        i0.ɵɵpipe(28, \"translate\");\n        i0.ɵɵpipe(29, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(30, AddupdateExaminationManagementComponent_ng_container_30_Template, 2, 1, \"ng-container\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"validation-message\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 5);\n        i0.ɵɵelementStart(33, \"div\", 6);\n        i0.ɵɵelementStart(34, \"label\");\n        i0.ɵɵtext(35);\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"select\", 12);\n        i0.ɵɵelementStart(38, \"option\", 8);\n        i0.ɵɵtext(39);\n        i0.ɵɵpipe(40, \"translate\");\n        i0.ɵɵpipe(41, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(42, AddupdateExaminationManagementComponent_ng_container_42_Template, 2, 1, \"ng-container\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"validation-message\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 5);\n        i0.ɵɵelementStart(45, \"div\", 6);\n        i0.ɵɵelementStart(46, \"label\");\n        i0.ɵɵtext(47);\n        i0.ɵɵpipe(48, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 13);\n        i0.ɵɵelement(50, \"input\", 14);\n        i0.ɵɵpipe(51, \"translate\");\n        i0.ɵɵelementStart(52, \"div\", 15);\n        i0.ɵɵelement(53, \"mat-datepicker-toggle\", 16);\n        i0.ɵɵelement(54, \"mat-datepicker\", null, 17);\n        i0.ɵɵelement(56, \"br\");\n        i0.ɵɵelement(57, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(58, \"validation-message\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"div\", 5);\n        i0.ɵɵelementStart(60, \"div\", 6);\n        i0.ɵɵelementStart(61, \"label\");\n        i0.ɵɵtext(62);\n        i0.ɵɵpipe(63, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"div\", 13);\n        i0.ɵɵelement(65, \"input\", 18);\n        i0.ɵɵpipe(66, \"translate\");\n        i0.ɵɵelementStart(67, \"div\", 15);\n        i0.ɵɵelement(68, \"mat-datepicker-toggle\", 16);\n        i0.ɵɵelement(69, \"mat-datepicker\", null, 19);\n        i0.ɵɵelement(71, \"br\");\n        i0.ɵɵelement(72, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(73, \"validation-message\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"div\", 5);\n        i0.ɵɵelementStart(75, \"div\", 6);\n        i0.ɵɵelementStart(76, \"label\");\n        i0.ɵɵtext(77);\n        i0.ɵɵpipe(78, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(79, \"textarea\", 20);\n        i0.ɵɵpipe(80, \"translate\");\n        i0.ɵɵelement(81, \"validation-message\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"div\", 5);\n        i0.ɵɵelementStart(83, \"div\", 6);\n        i0.ɵɵelementStart(84, \"label\");\n        i0.ɵɵtext(85);\n        i0.ɵɵpipe(86, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"select\", 21);\n        i0.ɵɵelementStart(88, \"option\", 8);\n        i0.ɵɵtext(89);\n        i0.ɵɵpipe(90, \"translate\");\n        i0.ɵɵpipe(91, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(92, AddupdateExaminationManagementComponent_ng_container_92_Template, 2, 1, \"ng-container\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(93, \"validation-message\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(94, AddupdateExaminationManagementComponent_div_94_Template, 6, 3, \"div\", 22);\n        i0.ɵɵtemplate(95, AddupdateExaminationManagementComponent_div_95_Template, 15, 9, \"div\", 22);\n        i0.ɵɵtemplate(96, AddupdateExaminationManagementComponent_div_96_Template, 8, 6, \"div\", 22);\n        i0.ɵɵtemplate(97, AddupdateExaminationManagementComponent_div_97_Template, 6, 3, \"div\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(98, AddupdateExaminationManagementComponent_div_98_Template, 15, 10, \"div\", 23);\n        i0.ɵɵelementStart(99, \"div\", 24);\n        i0.ɵɵelementStart(100, \"div\", 25);\n        i0.ɵɵelementStart(101, \"input\", 26);\n        i0.ɵɵlistener(\"click\", function AddupdateExaminationManagementComponent_Template_input_click_101_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵpipe(102, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(103, \" \\u00A0\\u00A0 \");\n        i0.ɵɵelement(104, \"input\", 27);\n        i0.ɵɵpipe(105, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(55);\n\n        const _r4 = i0.ɵɵreference(70);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 42, \"Examination_Management\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 44, \"Branch_Code\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(16, 46, \"Select\"), \" \", i0.ɵɵpipeBind1(17, 48, \"Branch_Code\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.branchCodeList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.branchCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 50, \"Grade_Code\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(28, 52, \"Select\"), \" \", i0.ɵɵpipeBind1(29, 54, \"Grade_Code\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.gradeCodeList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.gradeCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 56, \"Type_of_Examination\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(40, 58, \"Select\"), \" \", i0.ɵɵpipeBind1(41, 60, \"Type_of_Examination\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.typesOfExamsList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.typeofExamination);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(48, 62, \"Starting_Date\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(51, 64, \"Starting_Date\"));\n        i0.ɵɵproperty(\"matDatepicker\", _r3);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r3);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.startingDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(63, 66, \"Ending_Date\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(66, 68, \"Ending_Date\"));\n        i0.ɵɵproperty(\"matDatepicker\", _r4);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r4);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.endingDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(78, 70, \"Remarks\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(80, 72, \"Remarks\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.remarks);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(86, 74, \"Prepared_By\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(90, 76, \"Select\"), \" \", i0.ɵɵpipeBind1(91, 78, \"Prepared_By\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.usersList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.preparedBy);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShowCompleteSection);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShowCompleteSection);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShowCompleteSection);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShowCompleteSection);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShown);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(102, 80, \"Cancel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(105, 82, \"Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i7.NgIf, i8.ValidationMessagesComponent, i1.DefaultValueAccessor, i9.MatDatepickerInput, i9.MatDatepickerToggle, i10.MatSuffix, i9.MatDatepicker, i7.NgForOf, i11.MatSlideToggle, i1.FormArrayName, i1.FormGroupName],\n    pipes: [i12.TranslatePipe],\n    encapsulation: 2\n  });\n  return AddupdateExaminationManagementComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}