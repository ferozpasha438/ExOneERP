{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ParentOptMgtComponent } from '../../../sharedcomponent/parentoptmgt.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../services/api.service\";\nimport * as i5 from \"../../../api-authorization/AuthorizeService\";\nimport * as i6 from \"../../../services/utility.service\";\nimport * as i7 from \"@ngx-translate/core\";\nimport * as i8 from \"../../../services/notification.service\";\nimport * as i9 from \"../../../sharedcomponent/ValidationService\";\nimport * as i10 from \"@angular/material/dialog\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/slide-toggle\";\nimport * as i13 from \"../../../sharedcomponent/ValidationMessagesComponent\";\n\nfunction AddupdateSurveyFormElementsComponent_span_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵelement(1, \"validation-message\", 28);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r1.form.controls.elementType);\n  }\n}\n\nfunction AddupdateSurveyFormElementsComponent_span_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"Required\"));\n  }\n}\n\nfunction AddupdateSurveyFormElementsComponent_span_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵelement(1, \"validation-message\", 28);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r3.form.controls.elementEngName);\n  }\n}\n\nfunction AddupdateSurveyFormElementsComponent_span_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"Required\"));\n  }\n}\n\nfunction AddupdateSurveyFormElementsComponent_span_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵelement(1, \"validation-message\", 28);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r5.form.controls.elementArbName);\n  }\n}\n\nfunction AddupdateSurveyFormElementsComponent_span_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"Required\"));\n  }\n}\n\nfunction AddupdateSurveyFormElementsComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 29);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"List_Value_String\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(6, 5, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(7, 7, \"List_Value_String\"), \"\");\n  }\n}\n\nfunction AddupdateSurveyFormElementsComponent_div_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 31);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"Min_Value\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(6, 5, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(7, 7, \"Min_Value\"), \"\");\n  }\n}\n\nfunction AddupdateSurveyFormElementsComponent_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 32);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"Max_Value\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(6, 5, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(7, 7, \"Max_Value\"), \"\");\n  }\n}\n\nexport let AddupdateSurveyFormElementsComponent = /*#__PURE__*/(() => {\n  class AddupdateSurveyFormElementsComponent extends ParentOptMgtComponent {\n    constructor(fb, http, router, apiService, authService, utilService, translate, notifyService, validationService, dialogRef) {\n      super(authService);\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.translate = translate;\n      this.notifyService = notifyService;\n      this.validationService = validationService;\n      this.dialogRef = dialogRef;\n      this.id = 0;\n      this.listVisible = false;\n      this.minmaxVisible = false;\n      this.readonly = \"\";\n      this.isDataLoading = false;\n    }\n\n    ngOnInit() {\n      this.setForm();\n\n      if (this.id > 0) {\n        this.setEditForm();\n        this.readonly = \"readonly\";\n      }\n\n      console.log(\"Before\");\n      console.log(this.form);\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n    setForm() {\n      this.form = this.fb.group({\n        'formElementCode': ['SFEXXXX'],\n        'elementEngName': ['', Validators.required],\n        'elementArbName': ['', Validators.required],\n        'elementType': ['', Validators.required],\n        'listValueString': [''],\n        'minValue': [''],\n        'maxValue': [''],\n        'isActive': [true]\n      });\n    }\n\n    submit() {\n      console.log(\"After\");\n      console.log(this.form);\n\n      if (this.form.valid) {\n        if (this.id > 0) this.form.value['id'] = this.id;\n        if (this.form.value['minValue'] == '') this.form.value['minValue'] = 0;\n        if (this.form.value['maxValue'] == '') this.form.value['maxValue'] = 0;\n        this.apiService.post('surveyFormElement', this.form.value).subscribe(res => {\n          this.utilService.OkMessage();\n          this.reset();\n          this.dialogRef.close(true);\n        }, error => {\n          console.error(error);\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields();\n    }\n\n    setEditForm() {\n      this.apiService.get('surveyFormElement/getSurveyFormElementById', this.id).subscribe(res => {\n        if (res) {\n          this.form.patchValue(res);\n\n          if (res['elementType'] == 'List') {\n            this.listVisible = true;\n            this.minmaxVisible = false;\n          } else if (res['elementType'] == 'Scale') {\n            this.minmaxVisible = true;\n            this.listVisible = false;\n          } else {\n            this.listVisible = false;\n            this.minmaxVisible = false;\n          }\n        }\n      });\n    }\n\n    reset() {\n      this.form.controls['formElementCode'].setValue('');\n      this.form.controls['elementEngName'].setValue('');\n      this.form.controls['elementArbName'].setValue('');\n      this.form.controls['elementType'].setValue('');\n      this.form.controls['listValueString'].setValue('');\n      this.form.controls['minValue'].setValue(0);\n      this.form.controls['maxValue'].setValue(0);\n    }\n\n    elementTypeChanged(event) {\n      const type = event.target.value;\n\n      if (type == 'List') {\n        this.listVisible = true;\n        this.minmaxVisible = false;\n      } else if (type == 'Scale') {\n        this.minmaxVisible = true;\n        this.listVisible = false;\n      } else {\n        this.listVisible = false;\n        this.minmaxVisible = false;\n      }\n    }\n\n  }\n\n  AddupdateSurveyFormElementsComponent.ɵfac = function AddupdateSurveyFormElementsComponent_Factory(t) {\n    return new (t || AddupdateSurveyFormElementsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(i5.AuthorizeService), i0.ɵɵdirectiveInject(i6.UtilityService), i0.ɵɵdirectiveInject(i7.TranslateService), i0.ɵɵdirectiveInject(i8.NotificationService), i0.ɵɵdirectiveInject(i9.ValidationService), i0.ɵɵdirectiveInject(i10.MatDialogRef));\n  };\n\n  AddupdateSurveyFormElementsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddupdateSurveyFormElementsComponent,\n    selectors: [[\"app-addupdate-survey-form-elements\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 79,\n    vars: 70,\n    consts: [[1, \"modal-title\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [\"myform\", \"ngForm\"], [1, \"row\"], [1, \"col-md-6\", \"col-lg-6\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"formElementCode\", \"readonly\", \"\", 1, \"form-control\", 3, \"placeholder\"], [1, \"form-group\", \"mb-4\"], [\"for\", \"eletype\", 1, \"mr-sm-2\"], [\"formControlName\", \"elementType\", \"value\", \"option.value\", 1, \"custom-select\", \"mr-sm-2\", 3, \"change\"], [\"selected\", \"\"], [\"value\", \"Absolute\"], [\"value\", \"Boolean\"], [\"value\", \"List\"], [\"value\", \"Scale\"], [\"value\", \"Percentage\"], [\"style\", \"color:red\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"elementEngName\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"text\", \"formControlName\", \"elementArbName\", 1, \"form-control\", 3, \"placeholder\"], [\"class\", \"col-md-6 col-lg-6\", 4, \"ngIf\"], [\"class\", \"col-md-3 col-lg-3\", 4, \"ngIf\"], [\"color\", \"primary\", \"formControlName\", \"isActive\"], [1, \"row\", \"mt-3\"], [1, \"col-md-12\", \"col-lg-12\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-secondary\", \"btn-midblock\", 3, \"value\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-primary\", \"btn-midblock\", 3, \"value\"], [2, \"color\", \"red\"], [3, \"control\"], [\"type\", \"text\", \"formControlName\", \"listValueString\", 1, \"form-control\", 3, \"placeholder\"], [1, \"col-md-3\", \"col-lg-3\"], [\"type\", \"number\", \"formControlName\", \"minValue\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"number\", \"formControlName\", \"maxValue\", 1, \"form-control\", 3, \"placeholder\"]],\n    template: function AddupdateSurveyFormElementsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AddupdateSurveyFormElementsComponent_Template_button_click_3_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(4, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddupdateSurveyFormElementsComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵpipe(14, \"translate\");\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 5);\n        i0.ɵɵelementStart(17, \"div\", 8);\n        i0.ɵɵelementStart(18, \"label\", 9);\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"select\", 10);\n        i0.ɵɵlistener(\"change\", function AddupdateSurveyFormElementsComponent_Template_select_change_21_listener($event) {\n          return ctx.elementTypeChanged($event);\n        });\n        i0.ɵɵelementStart(22, \"option\", 11);\n        i0.ɵɵtext(23);\n        i0.ɵɵpipe(24, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 12);\n        i0.ɵɵtext(26);\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 13);\n        i0.ɵɵtext(29);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 14);\n        i0.ɵɵtext(32);\n        i0.ɵɵpipe(33, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"option\", 15);\n        i0.ɵɵtext(35);\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"option\", 16);\n        i0.ɵɵtext(38);\n        i0.ɵɵpipe(39, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(40, AddupdateSurveyFormElementsComponent_span_40_Template, 2, 1, \"span\", 17);\n        i0.ɵɵtemplate(41, AddupdateSurveyFormElementsComponent_span_41_Template, 3, 3, \"span\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 5);\n        i0.ɵɵelementStart(43, \"div\", 6);\n        i0.ɵɵelementStart(44, \"label\");\n        i0.ɵɵtext(45);\n        i0.ɵɵpipe(46, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"input\", 18);\n        i0.ɵɵpipe(48, \"translate\");\n        i0.ɵɵpipe(49, \"translate\");\n        i0.ɵɵtemplate(50, AddupdateSurveyFormElementsComponent_span_50_Template, 2, 1, \"span\", 17);\n        i0.ɵɵtemplate(51, AddupdateSurveyFormElementsComponent_span_51_Template, 3, 3, \"span\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 5);\n        i0.ɵɵelementStart(53, \"div\", 6);\n        i0.ɵɵelementStart(54, \"label\");\n        i0.ɵɵtext(55);\n        i0.ɵɵpipe(56, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(57, \"input\", 19);\n        i0.ɵɵpipe(58, \"translate\");\n        i0.ɵɵpipe(59, \"translate\");\n        i0.ɵɵtemplate(60, AddupdateSurveyFormElementsComponent_span_60_Template, 2, 1, \"span\", 17);\n        i0.ɵɵtemplate(61, AddupdateSurveyFormElementsComponent_span_61_Template, 3, 3, \"span\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(62, AddupdateSurveyFormElementsComponent_div_62_Template, 8, 9, \"div\", 20);\n        i0.ɵɵtemplate(63, AddupdateSurveyFormElementsComponent_div_63_Template, 8, 9, \"div\", 21);\n        i0.ɵɵtemplate(64, AddupdateSurveyFormElementsComponent_div_64_Template, 8, 9, \"div\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"div\", 5);\n        i0.ɵɵelementStart(66, \"div\", 6);\n        i0.ɵɵelementStart(67, \"label\");\n        i0.ɵɵtext(68);\n        i0.ɵɵpipe(69, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(70, \"br\");\n        i0.ɵɵelement(71, \"mat-slide-toggle\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"div\", 23);\n        i0.ɵɵelementStart(73, \"div\", 24);\n        i0.ɵɵelementStart(74, \"input\", 25);\n        i0.ɵɵlistener(\"click\", function AddupdateSurveyFormElementsComponent_Template_input_click_74_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵpipe(75, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(76, \" \\u00A0 \");\n        i0.ɵɵelement(77, \"input\", 26);\n        i0.ɵɵpipe(78, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(6);\n\n        let tmp_11_0;\n        let tmp_12_0;\n        let tmp_15_0;\n        let tmp_16_0;\n        let tmp_19_0;\n        let tmp_20_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 30, ctx.modalTitle));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 32, \"Element_Code\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(14, 34, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(15, 36, \"Element_Code\"), \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 38, \"Element_Type\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 40, \"Choose_Element_Type\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(27, 42, \"Absolute\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(30, 44, \"Boolean\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(33, 46, \"List\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 48, \"Scale\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(39, 50, \"Percentage\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !(((tmp_11_0 = ctx.form.get(\"elementType\")) == null ? null : tmp_11_0.hasError(\"required\")) && (_r0 == null ? null : _r0.submitted)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_12_0 = ctx.form.get(\"elementType\")) == null ? null : tmp_12_0.hasError(\"required\")) && (_r0 == null ? null : _r0.submitted));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(46, 52, \"Element_English_Name\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(48, 54, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(49, 56, \"Element_English_Name\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !(((tmp_15_0 = ctx.form.get(\"elementEngName\")) == null ? null : tmp_15_0.hasError(\"required\")) && (_r0 == null ? null : _r0.submitted)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_16_0 = ctx.form.get(\"elementEngName\")) == null ? null : tmp_16_0.hasError(\"required\")) && (_r0 == null ? null : _r0.submitted));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(56, 58, \"Element_Arabic_Name\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(58, 60, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(59, 62, \"Element_Arabic_Name\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !(((tmp_19_0 = ctx.form.get(\"elementArbName\")) == null ? null : tmp_19_0.hasError(\"required\")) && (_r0 == null ? null : _r0.submitted)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_20_0 = ctx.form.get(\"elementArbName\")) == null ? null : tmp_20_0.hasError(\"required\")) && (_r0 == null ? null : _r0.submitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.listVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.minmaxVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.minmaxVisible);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(69, 64, \"Is_Active\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(75, 66, \"Cancel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(78, 68, \"Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i11.NgIf, i12.MatSlideToggle, i13.ValidationMessagesComponent, i1.NumberValueAccessor],\n    pipes: [i7.TranslatePipe],\n    encapsulation: 2\n  });\n  return AddupdateSurveyFormElementsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}