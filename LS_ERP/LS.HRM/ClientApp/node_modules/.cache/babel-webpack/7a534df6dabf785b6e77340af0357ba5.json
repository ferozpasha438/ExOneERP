{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\nimport { ParentOptMgtComponent } from '../../../sharedcomponent/parentoptmgt.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../services/api.service\";\nimport * as i5 from \"../../../api-authorization/AuthorizeService\";\nimport * as i6 from \"../../../services/utility.service\";\nimport * as i7 from \"@ngx-translate/core\";\nimport * as i8 from \"../../../services/notification.service\";\nimport * as i9 from \"../../../sharedcomponent/ValidationService\";\nimport * as i10 from \"@angular/material/dialog\";\nimport * as i11 from \"../../../sharedcomponent/ValidationMessagesComponent\";\nexport let UpdatestandarddevationComponent = /*#__PURE__*/(() => {\n  class UpdatestandarddevationComponent extends ParentOptMgtComponent {\n    constructor(fb, http, router, apiService, authService, utilService, translate, notifyService, validationService, dialogRef) {\n      super(authService);\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.translate = translate;\n      this.notifyService = notifyService;\n      this.validationService = validationService;\n      this.dialogRef = dialogRef;\n      this.readonly = \"\";\n      this.id = 0;\n      this.cityList = [];\n      this.custCodeControl = new FormControl('', Validators.required);\n      this.isDataLoading = false;\n      this.isChildCustomer = false;\n      this.filteredCustCodes = this.custCodeControl.valueChanges.pipe(startWith(''), debounceTime(utilService.autoDelay()), distinctUntilChanged(), switchMap(val => {\n        if (val.trim() !== '') this.isDataLoading = true;\n        return this.filterCustCodes(val || '');\n      }));\n    }\n\n    ngOnInit() {\n      this.loadCities();\n      this.setForm();\n\n      if (this.id > 0) {\n        this.setEditForm();\n        this.readonly = \"readonly\";\n      }\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n    setForm() {\n      this.form = this.fb.group({\n        'siteCode': ['SITEXXXXXX'],\n        'siteName': ['', Validators.required],\n        'siteArbName': ['', Validators.required],\n        'customerCode': [''],\n        'siteAddress': ['', Validators.required],\n        'siteCityCode': ['', Validators.required],\n        'siteGeoLatitude': ['', Validators.required],\n        'siteGeoLongitude': ['', Validators.required],\n        'siteGeoGain': ['', Validators.required],\n        'isChildCustomer': [false],\n        'vatNumber': [''],\n        'isActive': [true],\n        'standardDeviation': [0]\n      });\n    }\n\n    submit() {\n      if (this.id > 0) this.form.value['id'] = this.id;\n      let custCode = this.custCodeControl.value;\n\n      if (this.utilService.hasValue(custCode)) {\n        this.form.value['customerCode'] = custCode;\n        this.custCodeControl.setValue(custCode);\n      } else {\n        this.utilService.FillUpFields();\n      }\n\n      if (this.form.valid) {\n        if (this.isChildCustomer) {\n          const vatNumber = this.form.controls['vatNumber'].value;\n\n          if (!this.utilService.hasValue(vatNumber)) {\n            this.notifyService.showError(\"Enter vatNumber\");\n            return;\n          }\n        }\n\n        this.apiService.post('CustomerSite', this.form.value).subscribe(res => {\n          this.utilService.OkMessage();\n          this.dialogRef.close(true);\n        }, error => {\n          console.error(error);\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields(); // this.ngOnInit();\n\n    }\n\n    setEditForm() {\n      this.apiService.get('CustomerSite/getSiteById', this.id).subscribe(res => {\n        if (res) {\n          this.form.patchValue(res);\n          this.custCodeControl.setValue(res['customerCode']);\n          const isChildCustomerFlag = res['isChildCustomer'];\n          this.isChildCustomer = isChildCustomerFlag ? isChildCustomerFlag : false;\n          this.form.patchValue({\n            'id': 0\n          });\n        }\n      });\n    }\n\n    reset() {\n      this.form.controls['siteCode'].setValue('');\n      this.form.controls['siteName'].setValue('');\n      this.form.controls['SiteArbName'].setValue('');\n      this.form.controls['customerCode'].setValue('');\n      this.form.controls['siteAddress'].setValue('');\n      this.form.controls['siteCityCode'].setValue('');\n      this.form.controls['siteGeoLatitude'].setValue('');\n      this.form.controls['siteGeoLongitude'].setValue('');\n      this.form.controls['siteGeoGain'].setValue('');\n      this.form.controls['isChildCustomer'].setValue('');\n      this.form.controls['vatNumber'].setValue('');\n      this.form.controls['isActive'].setValue(true);\n    }\n\n    filterCustCodes(val) {\n      return this.apiService.getall(`CustomerMaster/getSelectCustomerList?search=${val}`).pipe(map(response => {\n        const res = response;\n        this.isDataLoading = false;\n        return res;\n      }));\n    }\n\n    loadCities() {\n      this.apiService.getall('City/getCitiesSelectList').subscribe(res => {\n        this.cityList = res;\n      });\n    }\n\n    isChildCustomerChecked(event) {\n      this.isChildCustomer = event.checked; // this.form.controls['vatNumber'].setValue('');\n    }\n\n    validate(event, control, action) {\n      let value = '';\n\n      if (action == \"change\") {\n        value = event.target.value;\n      }\n\n      switch (control) {\n        case \"custCodeControl\":\n          this.apiService.getall('CustomerMaster/getCustomerByCustomerCode/' + value).subscribe(res => {\n            if (res != null) {\n              this.form.patchValue({\n                'customerCode': res['custCode']\n              });\n              let custCode = this.custCodeControl.value;\n              this.form.value['customerCode'] = custCode;\n            } else {\n              this.form.controls['customerCode'].setValue('');\n              this.custCodeControl.setValue('');\n            }\n          });\n          break;\n\n        default:\n          ;\n      }\n    }\n\n  }\n\n  UpdatestandarddevationComponent.ɵfac = function UpdatestandarddevationComponent_Factory(t) {\n    return new (t || UpdatestandarddevationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(i5.AuthorizeService), i0.ɵɵdirectiveInject(i6.UtilityService), i0.ɵɵdirectiveInject(i7.TranslateService), i0.ɵɵdirectiveInject(i8.NotificationService), i0.ɵɵdirectiveInject(i9.ValidationService), i0.ɵɵdirectiveInject(i10.MatDialogRef));\n  };\n\n  UpdatestandarddevationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdatestandarddevationComponent,\n    selectors: [[\"app-updatestandarddevation\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 50,\n    vars: 50,\n    consts: [[1, \"modal-title\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-6\", \"col-lg-6\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"siteCode\", \"readonly\", \"\", 1, \"form-control\", 3, \"placeholder\"], [3, \"control\"], [\"type\", \"text\", \"formControlName\", \"siteName\", \"readonly\", \"\", 1, \"form-control\", 3, \"placeholder\"], [1, \"form-group\", \"mb-4\"], [\"for\", \"city\", 1, \"mr-sm-2\"], [\"type\", \"text\", \"formControlName\", \"siteArbName\", \"readonly\", \"\", 1, \"form-control\", 3, \"placeholder\"], [1, \"mr-sm-2\"], [\"type\", \"number\", \"step\", \"1\", \"formControlName\", \"standardDeviation\", 1, \"form-control\", 3, \"placeholder\"], [1, \"row\", \"customrow\"], [1, \"col-lg-12\", \"col-md-12\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"value\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-primary\", 3, \"value\"]],\n    template: function UpdatestandarddevationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function UpdatestandarddevationComponent_Template_button_click_3_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(4, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdatestandarddevationComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"label\");\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵpipe(14, \"translate\");\n        i0.ɵɵelement(15, \"validation-message\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 4);\n        i0.ɵɵelementStart(17, \"div\", 5);\n        i0.ɵɵelementStart(18, \"label\");\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 8);\n        i0.ɵɵpipe(22, \"translate\");\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵelement(24, \"validation-message\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 4);\n        i0.ɵɵelementStart(26, \"div\", 9);\n        i0.ɵɵelementStart(27, \"label\", 10);\n        i0.ɵɵtext(28);\n        i0.ɵɵpipe(29, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 11);\n        i0.ɵɵpipe(31, \"translate\");\n        i0.ɵɵpipe(32, \"translate\");\n        i0.ɵɵelement(33, \"validation-message\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 4);\n        i0.ɵɵelementStart(35, \"div\", 5);\n        i0.ɵɵelementStart(36, \"label\", 12);\n        i0.ɵɵtext(37);\n        i0.ɵɵpipe(38, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 13);\n        i0.ɵɵpipe(40, \"translate\");\n        i0.ɵɵpipe(41, \"translate\");\n        i0.ɵɵelement(42, \"validation-message\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 14);\n        i0.ɵɵelementStart(44, \"div\", 15);\n        i0.ɵɵelementStart(45, \"input\", 16);\n        i0.ɵɵlistener(\"click\", function UpdatestandarddevationComponent_Template_input_click_45_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵpipe(46, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(47, \" \\u00A0\\u00A0 \");\n        i0.ɵɵelement(48, \"input\", 17);\n        i0.ɵɵpipe(49, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 20, ctx.modalTitle));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 22, \"Site_Id\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(13, 24, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(14, 26, \"Site_Id\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.siteCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 28, \"Site_Eng_Name\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(22, 30, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(23, 32, \"Site_Eng_Name\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.siteName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(29, 34, \"Site_Arb_Name\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(31, 36, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(32, 38, \"Site_Arb_Name\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.siteArbName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(38, 40, \"Standard_deviation\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(40, 42, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(41, 44, \"Standard_deviation\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.standardDeviation);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(46, 46, \"Cancel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(49, 48, \"Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i11.ValidationMessagesComponent, i1.NumberValueAccessor],\n    pipes: [i7.TranslatePipe],\n    encapsulation: 2\n  });\n  return UpdatestandarddevationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}