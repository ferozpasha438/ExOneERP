{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/progress-spinner\";\n\nfunction SpinnerLoaderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"mat-progress-spinner\", 2);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let SpinnerLoaderComponent = /*#__PURE__*/(() => {\n  class SpinnerLoaderComponent {\n    constructor() {\n      this.isLoading = false;\n    }\n\n  }\n\n  SpinnerLoaderComponent.ɵfac = function SpinnerLoaderComponent_Factory(t) {\n    return new (t || SpinnerLoaderComponent)();\n  };\n\n  SpinnerLoaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SpinnerLoaderComponent,\n    selectors: [[\"spinner-loader\"]],\n    inputs: {\n      isLoading: \"isLoading\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"style\", \"display: flex; justify-content: center; align-items: center; background: white;\", 4, \"ngIf\"], [2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\", \"background\", \"white\"], [\"color\", \"primary\", \"strokeWidth\", \"3\", \"diameter\", \"30\", \"mode\", \"indeterminate\"]],\n    template: function SpinnerLoaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SpinnerLoaderComponent_div_0_Template, 2, 0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    directives: [i1.NgIf, i2.MatProgressSpinner],\n    encapsulation: 2\n  });\n  return SpinnerLoaderComponent;\n})();\nexport function ConfirmedValidator(controlName, matchingControlName) {\n  return formGroup => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n      return;\n    }\n\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({\n        confirmedValidator: true\n      });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}