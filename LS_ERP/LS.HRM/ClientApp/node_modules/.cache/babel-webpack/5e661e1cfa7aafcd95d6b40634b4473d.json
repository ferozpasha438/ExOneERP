{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../services/api.service\";\nimport * as i3 from \"../../../../api-authorization/AuthorizeService\";\nimport * as i4 from \"../../../../services/utility.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"../../../../services/notification.service\";\nimport * as i7 from \"../../../../sharedcomponent/ValidationMessagesComponent\";\nimport * as i8 from \"@ngx-translate/core\";\nexport let UpdatingcustomerComponent = /*#__PURE__*/(() => {\n  class UpdatingcustomerComponent {\n    constructor(fb, apiService, authService, utilService, dialogRef, notifyService) {\n      this.fb = fb;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.dialogRef = dialogRef;\n      this.notifyService = notifyService;\n      this.id = 0;\n    }\n\n    ngOnInit() {\n      this.setForm();\n      if (this.data) this.form.patchValue(this.data);\n    }\n\n    setForm() {\n      //let cDate: IMyDateModel = { isRange: false, singleDate: {}, dateRange: null };\n      this.form = this.fb.group({\n        // 'docNum': ['', Validators.required],\n        'custName': ['', Validators.required],\n        'custArbName': ['', Validators.required]\n      });\n    }\n\n    submit() {\n      if (this.form.valid) {\n        this.dialogRef.close(this.form);\n      } else this.utilService.FillUpFields();\n    }\n\n    reset() {\n      this.form.reset();\n    }\n\n    closeModel() {\n      this.dialogRef.close(null);\n    }\n\n  }\n\n  UpdatingcustomerComponent.ɵfac = function UpdatingcustomerComponent_Factory(t) {\n    return new (t || UpdatingcustomerComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.AuthorizeService), i0.ɵɵdirectiveInject(i4.UtilityService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.NotificationService));\n  };\n\n  UpdatingcustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdatingcustomerComponent,\n    selectors: [[\"app-updatingcustomer\"]],\n    decls: 31,\n    vars: 24,\n    consts: [[\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"novalidate\", \"\", 1, \"mt-1\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"rowm0\"], [1, \"col-md-12\", \"col-lg-12\"], [1, \"form-group\"], [1, \"mr-sm-2\"], [\"type\", \"text\", \"formControlName\", \"custName\", 1, \"form-control\", 3, \"placeholder\"], [3, \"control\"], [\"type\", \"text\", \"formControlName\", \"custArbName\", 1, \"form-control\", 3, \"placeholder\"], [1, \"row\"], [1, \"col-lg-12\", \"col-md-12\", \"text-center\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-primary\", 3, \"value\"]],\n    template: function UpdatingcustomerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementStart(3, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function UpdatingcustomerComponent_Template_button_click_3_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(4, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdatingcustomerComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"label\", 5);\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵelement(14, \"validation-message\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 3);\n        i0.ɵɵelementStart(16, \"div\", 4);\n        i0.ɵɵelementStart(17, \"label\", 5);\n        i0.ɵɵtext(18);\n        i0.ɵɵpipe(19, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 8);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelement(22, \"validation-message\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 9);\n        i0.ɵɵelementStart(24, \"div\", 10);\n        i0.ɵɵelementStart(25, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function UpdatingcustomerComponent_Template_button_click_25_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(26);\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(28, \" \\u00A0\\u00A0 \");\n        i0.ɵɵelement(29, \"input\", 12);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 10, \"Walk-In-Customer\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 12, \"Customer_Name\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(13, 14, \"Customer_Name\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.custName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(19, 16, \"Customer_Name_Arabic\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(21, 18, \"Customer_Name_Arabic\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.custArbName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(27, 20, \"Cancel\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(30, 22, \"Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.ValidationMessagesComponent],\n    pipes: [i8.TranslatePipe],\n    encapsulation: 2\n  });\n  return UpdatingcustomerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}