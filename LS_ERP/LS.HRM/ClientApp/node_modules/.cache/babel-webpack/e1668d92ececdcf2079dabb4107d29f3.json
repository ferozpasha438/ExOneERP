{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/api.service\";\nimport * as i3 from \"../../../services/utility.service\";\nimport * as i4 from \"../../../services/notification.service\";\nimport * as i5 from \"../../../sharedcomponent/ValidationService\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"../../../sharedcomponent/ValidationMessagesComponent\";\nimport * as i8 from \"@ngx-translate/core\";\nexport let AccounttypeComponent = /*#__PURE__*/(() => {\n  class AccounttypeComponent {\n    constructor(fb, apiService, utilService, notifyService, validationService, dialog, dialogRef) {\n      this.fb = fb;\n      this.apiService = apiService;\n      this.utilService = utilService;\n      this.notifyService = notifyService;\n      this.validationService = validationService;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef;\n      this.accountTypeId = '';\n      this.accountType = [];\n    }\n\n    ngOnInit() {\n      this.setForm(); // this.loadAccTypes();\n    }\n\n    setForm() {\n      //let cDate: IMyDateModel = { isRange: false, singleDate: {}, dateRange: null };\n      this.form = this.fb.group({\n        'finType': ['', Validators.required],\n        'finCatCode': ['', Validators.required],\n        'finCatName': ['', Validators.required]\n      });\n      this.form.patchValue({\n        'finType': this.accountTypeId\n      });\n    } //loadAccTypes() {\n    //  this.apiService.getall('accountType').subscribe(res => {\n    //    if (res) {\n    //      this.accountType = res;\n    //    }\n    //  })\n    //}\n    //checkCategory(evt: any, type: string) {\n    //const bCode = evt.target.value as string;\n    //this.apiService.getall(`accountscategory/?type=${bCode}&s=${type}`).subscribe(res => {\n    //  if (res) {\n    //    if (type === 'c')\n    //      this.form.controls['finCatCode'].setValue('');\n    //    else if (type === 'n')\n    //      this.form.controls['finCatName'].setValue('');\n    //    this.notifyService.showError('Already Exists.');\n    //  }\n    //});\n    // }\n\n\n    submit() {\n      if (this.form.valid) {\n        this.apiService.post('accountscategory', this.form.value).subscribe(res => {\n          this.utilService.OkMessage();\n          this.form.reset();\n          this.dialogRef.close(true);\n        }, error => {\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields();\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  AccounttypeComponent.ɵfac = function AccounttypeComponent_Factory(t) {\n    return new (t || AccounttypeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.UtilityService), i0.ɵɵdirectiveInject(i4.NotificationService), i0.ɵɵdirectiveInject(i5.ValidationService), i0.ɵɵdirectiveInject(i6.MatDialog), i0.ɵɵdirectiveInject(i6.MatDialogRef));\n  };\n\n  AccounttypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccounttypeComponent,\n    selectors: [[\"app-accounttype\"]],\n    decls: 42,\n    vars: 41,\n    consts: [[1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-12\", \"col-lg-12\"], [1, \"form-group\"], [\"for\", \"inlineFormCustomSelect\", 1, \"mr-sm-2\"], [\"type\", \"text\", \"formControlName\", \"finType\", 1, \"form-control\", 3, \"placeholder\", \"readonly\"], [3, \"control\"], [1, \"col-md-4\", \"col-lg-6\"], [\"for\", \"exampleFormControlSelect1\"], [\"type\", \"text\", \"formControlName\", \"finCatCode\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"text\", \"formControlName\", \"finCatName\", 1, \"form-control\", 3, \"placeholder\"], [1, \"row\", \"mt-3\"], [1, \"col-md-12\", \"col-lg-12\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-secondary\", \"btn-midblock\", 3, \"value\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-primary\", \"btn-midblock\", 3, \"value\"]],\n    template: function AccounttypeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h3\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AccounttypeComponent_Template_button_click_4_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(5, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AccounttypeComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"label\", 7);\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵpipe(14, \"translate\");\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵelement(16, \"validation-message\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 10);\n        i0.ɵɵelementStart(18, \"div\", 6);\n        i0.ɵɵelementStart(19, \"label\", 11);\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 12);\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵpipe(24, \"translate\");\n        i0.ɵɵelement(25, \"validation-message\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 10);\n        i0.ɵɵelementStart(27, \"div\", 6);\n        i0.ɵɵelementStart(28, \"label\", 11);\n        i0.ɵɵtext(29);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 13);\n        i0.ɵɵpipe(32, \"translate\");\n        i0.ɵɵpipe(33, \"translate\");\n        i0.ɵɵelement(34, \"validation-message\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 14);\n        i0.ɵɵelementStart(36, \"div\", 15);\n        i0.ɵɵelementStart(37, \"input\", 16);\n        i0.ɵɵlistener(\"click\", function AccounttypeComponent_Template_input_click_37_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵpipe(38, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(39, \" \\u00A0 \");\n        i0.ɵɵelement(40, \"input\", 17);\n        i0.ɵɵpipe(41, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 17, \"Account_Type\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 19, \"Type_of_Account\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(14, 21, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(15, 23, \"Type_of_Account\"), \"\");\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.finType);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 25, \"Category_Code\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(23, 27, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(24, 29, \"Category_Code\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.finCatCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(30, 31, \"Category_Name\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(32, 33, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(33, 35, \"Category_Name\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.finCatName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(38, 37, \"Cancel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(41, 39, \"Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.ValidationMessagesComponent],\n    pipes: [i8.TranslatePipe],\n    encapsulation: 2\n  });\n  return AccounttypeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}