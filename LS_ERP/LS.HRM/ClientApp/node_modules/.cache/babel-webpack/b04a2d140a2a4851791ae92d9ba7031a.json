{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ParentSchoolMgtComponent } from '../../sharedcomponent/parentschoolmgt.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/api.service\";\nimport * as i5 from \"../../api-authorization/AuthorizeService\";\nimport * as i6 from \"@ngx-translate/core\";\nimport * as i7 from \"../../services/notification.service\";\nimport * as i8 from \"../../services/utility.service\";\nimport * as i9 from \"../../sharedcomponent/ValidationService\";\nimport * as i10 from \"@angular/material/dialog\";\nimport * as i11 from \"../../sharedcomponent/pagination.service\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"../../sharedcomponent/ValidationMessagesComponent\";\nimport * as i14 from \"@angular/material/datepicker\";\nconst _c0 = [\"calendar\"];\n\nfunction CalendarComponent_ng_container_29_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"value\", item_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.isArab ? item_r3.textTwo : item_r3.text);\n  }\n}\n\nfunction CalendarComponent_ng_container_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CalendarComponent_ng_container_29_option_1_Template, 2, 2, \"option\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.branchCodeList);\n  }\n}\n\nfunction CalendarComponent_div_31_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dayData_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"spanDiv\", dayData_r6.eventType, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", dayData_r6.eventDate, \" \\u00A0\\u00A0(\", ctx_r5.isArab ? dayData_r6.eventNameAr : dayData_r6.eventName, \")\");\n  }\n}\n\nfunction CalendarComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"div\", 1);\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵelementStart(4, \"span\", 21);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 20);\n    i0.ɵɵelementStart(8, \"span\", 22);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 20);\n    i0.ɵɵelementStart(12, \"span\", 23);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 24);\n    i0.ɵɵelementStart(16, \"mat-calendar\", 25, 26);\n    i0.ɵɵlistener(\"selectedChange\", function CalendarComponent_div_31_Template_mat_calendar_selectedChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.selectedDate = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 27);\n    i0.ɵɵtemplate(19, CalendarComponent_div_31_div_19_Template, 3, 5, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 8, \"Weekend\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 10, \"Holiday\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 12, \"Event\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"dateClass\", ctx_r1.dateClass())(\"selected\", ctx_r1.selectedDate)(\"minDate\", ctx_r1.minDate)(\"maxDate\", ctx_r1.maxDate);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.allDatesData);\n  }\n}\n\nexport let CalendarComponent = /*#__PURE__*/(() => {\n  class CalendarComponent extends ParentSchoolMgtComponent {\n    constructor(fb, http, router, apiService, authService, translate, notifyService, utilService, validationService, dialog, pageService) {\n      super(authService);\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.translate = translate;\n      this.notifyService = notifyService;\n      this.utilService = utilService;\n      this.validationService = validationService;\n      this.dialog = dialog;\n      this.pageService = pageService;\n      this.displayedColumns = ['Actions'];\n      this.searchValue = '';\n      this.sortingOrder = 'id desc';\n      this.isLoading = false;\n      this.id = 0;\n      this.isArab = false;\n      this.branchCodeList = [];\n      this.isShowDiv = false;\n      this.examHeaderID = 0;\n      this.branchCode = '';\n      this.datesWeekends = [];\n      this.datesHolidays = [];\n      this.datesEvents = [];\n      this.allDatesData = [];\n    }\n\n    ngOnInit() {\n      this.isArab = this.utilService.isArabic();\n      this.form = this.fb.group({\n        \"branchCode\": ['', Validators.required]\n      });\n      this.loading();\n    }\n\n    loading() {\n      this.apiService.getall('schoolBranches/getSchoolBranchList').subscribe(res => {\n        this.branchCodeList = res;\n      });\n    }\n\n    dateClass() {\n      return date => {\n        var highlightDate = this.datesWeekends.map(strDate => new Date(strDate)).some(d => d.getDate() === date.getDate() && d.getMonth() === date.getMonth() && d.getFullYear() === date.getFullYear());\n\n        if (highlightDate) {\n          return highlightDate ? 'special-date' : '';\n        } else {\n          highlightDate = this.datesHolidays.map(strDate => new Date(strDate)).some(d => d.getDate() === date.getDate() && d.getMonth() === date.getMonth() && d.getFullYear() === date.getFullYear());\n\n          if (highlightDate) {\n            return highlightDate ? 'special-holiday-date' : '';\n          } else {\n            highlightDate = this.datesEvents.map(strDate => new Date(strDate)).some(d => d.getDate() === date.getDate() && d.getMonth() === date.getMonth() && d.getFullYear() === date.getFullYear());\n            return highlightDate ? 'special-event-date' : '';\n          }\n        }\n      };\n    }\n\n    loadResultList() {\n      const branchCode = this.form.value['branchCode'];\n\n      if (branchCode != null && branchCode != '') {\n        this.apiService.getall(`Branch/GetBranchEventsHolidaysData/${branchCode}`).subscribe(res => {\n          if (res) {\n            this.minDate = this.utilService.selectedDate(res.startDate);\n            this.maxDate = this.utilService.selectedDate(res.endDate);\n\n            for (var i = 0; i < res.eventsHolidaysDataList.length; i++) {\n              if (res.eventsHolidaysDataList[i].eventType === 1) {\n                this.datesWeekends.push(res.eventsHolidaysDataList[i].eventDate);\n              } else if (res.eventsHolidaysDataList[i].eventType === 2) {\n                this.datesHolidays.push(res.eventsHolidaysDataList[i].eventDate);\n                res.eventsHolidaysDataList[i].eventDate = this.utilService.selectedDate(res.eventsHolidaysDataList[i].eventDate);\n                this.allDatesData.push(res.eventsHolidaysDataList[i]);\n              } else if (res.eventsHolidaysDataList[i].eventType === 3) {\n                this.datesEvents.push(res.eventsHolidaysDataList[i].eventDate);\n                res.eventsHolidaysDataList[i].eventDate = this.utilService.selectedDate(res.eventsHolidaysDataList[i].eventDate);\n                this.allDatesData.push(res.eventsHolidaysDataList[i]);\n              }\n            }\n\n            this.isShowDiv = true;\n          }\n        }, error => {\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      }\n    }\n\n    submit() {}\n\n    reset() {\n      this.form.reset();\n    }\n\n  }\n\n  CalendarComponent.ɵfac = function CalendarComponent_Factory(t) {\n    return new (t || CalendarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(i5.AuthorizeService), i0.ɵɵdirectiveInject(i6.TranslateService), i0.ɵɵdirectiveInject(i7.NotificationService), i0.ɵɵdirectiveInject(i8.UtilityService), i0.ɵɵdirectiveInject(i9.ValidationService), i0.ɵɵdirectiveInject(i10.MatDialog), i0.ɵɵdirectiveInject(i11.PaginationService));\n  };\n\n  CalendarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CalendarComponent,\n    selectors: [[\"app-calendar\"]],\n    viewQuery: function CalendarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 7);\n        i0.ɵɵviewQuery(MatSort, 7);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.calendar = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 32,\n    vars: 22,\n    consts: [[1, \"page-breadcrumb\"], [1, \"row\"], [1, \"col-12\", \"align-self-center\"], [1, \"page-title\", \"text-truncate\", \"text-dark\", \"font-weight-medium\", \"mb-1\"], [1, \"d-flex\", \"align-items-center\"], [\"aria-label\", \"breadcrumb\"], [1, \"breadcrumb\", \"m-0\", \"p-0\"], [1, \"breadcrumb-item\", \"text-muted\"], [\"aria-current\", \"page\", 1, \"breadcrumb-item\", \"active\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"container-fluid\"], [1, \"col-md-2\", \"col-lg-2\"], [1, \"form-group\"], [\"formControlName\", \"branchCode\", 1, \"custom-select\", \"mr-sm-2\", 3, \"change\"], [\"value\", \"\"], [4, \"ngIf\"], [3, \"control\"], [\"class\", \"row\", 4, \"ngIf\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"col-md-12\", \"col-lg-12\", 2, \"padding\", \"8%\"], [2, \"background-color\", \"red\", \"color\", \"#fff\", \"padding\", \"5%\"], [2, \"background-color\", \"green\", \"color\", \"#fff\", \"padding\", \"5%\"], [2, \"background-color\", \"yellow\", \"color\", \"#000\", \"padding\", \"5%\"], [1, \"col-md-6\", \"col-lg-6\"], [3, \"dateClass\", \"selected\", \"minDate\", \"maxDate\", \"selectedChange\"], [\"calendar\", \"\"], [1, \"col-md-4\", \"col-lg-4\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function CalendarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h3\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"nav\", 5);\n        i0.ɵɵelementStart(8, \"ol\", 6);\n        i0.ɵɵelementStart(9, \"li\", 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"li\", 8);\n        i0.ɵɵtext(13);\n        i0.ɵɵpipe(14, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function CalendarComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(16, \"div\", 10);\n        i0.ɵɵelementStart(17, \"div\", 1);\n        i0.ɵɵelementStart(18, \"div\", 11);\n        i0.ɵɵelementStart(19, \"label\");\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 11);\n        i0.ɵɵelementStart(23, \"div\", 12);\n        i0.ɵɵelementStart(24, \"select\", 13);\n        i0.ɵɵlistener(\"change\", function CalendarComponent_Template_select_change_24_listener() {\n          return ctx.loadResultList();\n        });\n        i0.ɵɵelementStart(25, \"option\", 14);\n        i0.ɵɵtext(26);\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵpipe(28, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(29, CalendarComponent_ng_container_29_Template, 2, 1, \"ng-container\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"validation-message\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, CalendarComponent_div_31_Template, 20, 14, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 10, \"School_Calendar\"), \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 12, \"School_Calendar\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 14, \"School_Calendar\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 16, \"Branch_Code\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(27, 18, \"Select\"), \" \", i0.ɵɵpipeBind1(28, 20, \"Branch_Code\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.branchCodeList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.branchCode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShowDiv);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i12.NgIf, i13.ValidationMessagesComponent, i12.NgForOf, i14.MatCalendar],\n    pipes: [i6.TranslatePipe],\n    styles: [\"\"]\n  });\n  return CalendarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}