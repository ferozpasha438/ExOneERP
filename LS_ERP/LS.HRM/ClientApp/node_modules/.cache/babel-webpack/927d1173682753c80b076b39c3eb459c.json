{"ast":null,"code":"import { AdItem, ComponentloaderDirective } from '../../../sharedcomponent/componentloader.directive';\nimport { VacationrequestComponent } from '../vacationrequest/vacationrequest.component';\nimport { LeaverequestattachmentComponent } from '../shared/leaverequestattachment/leaverequestattachment.component';\nimport { LeaverequestapprovalComponent } from '../shared/leaverequestapproval/leaverequestapproval.component';\nimport { LeaverequestComponent } from '../leaverequest/leaverequest.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/utility.service\";\nimport * as i2 from \"@ngx-translate/core\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../sharedcomponent/componentloader.directive\";\n\nfunction ServicerequestinfoComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ServicerequestinfoComponent_button_3_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.loadComponents(item_r2);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", item_r2.isBtnClicked ? \"btn-danger\" : \"btn-primary\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r2.text);\n  }\n}\n\nfunction ServicerequestinfoComponent_ng_template_7_Template(rf, ctx) {}\n\nexport let ServicerequestinfoComponent = /*#__PURE__*/(() => {\n  class ServicerequestinfoComponent {\n    constructor(utilService, translate, componentFactoryResolver, dialogRef) {\n      this.utilService = utilService;\n      this.translate = translate;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.dialogRef = dialogRef;\n      this.id = 0;\n      this.modalTitle = '';\n      this.serviceRequestRefNo = '';\n      this.isFromAppoval = false;\n      this.modalBtnTitle = ''; // employeeNumber: string = '00004';\n\n      this.employeeId = 4;\n      this.btnClicked = '';\n      this.btnList = [];\n      this.isArab = false;\n      this.poList = [];\n    }\n\n    ngOnInit() {\n      this.isArab = this.utilService.isArabic();\n      this.fillBtnList();\n      this.fillComponents();\n      this.initialLoading(1);\n    }\n\n    fillBtnList() {\n      this.btnList = [{\n        id: 1,\n        text: this.translate.instant('Leave_request'),\n        isBtnClicked: true,\n        serviceRequestTypeCode: 'VAC'\n      }, {\n        id: 2,\n        text: this.translate.instant('Vaction_request'),\n        isBtnClicked: false,\n        serviceRequestTypeCode: 'VACA'\n      }, {\n        id: 3,\n        text: this.translate.instant('Travel_request'),\n        isBtnClicked: false,\n        serviceRequestTypeCode: 'TAC'\n      }, {\n        id: 4,\n        text: this.translate.instant('Loan_request'),\n        isBtnClicked: false,\n        serviceRequestTypeCode: 'LAC'\n      }];\n    }\n\n    fillComponents() {\n      const data = {\n        serviceRequestTypeCode: '',\n        id: this.id,\n        serviceRequestRefNo: this.serviceRequestRefNo,\n        isFromAppoval: this.isFromAppoval\n      };\n      this.poList = [new AdItem(LeaverequestComponent, data), new AdItem(VacationrequestComponent, data), new AdItem(LeaverequestattachmentComponent, data), new AdItem(LeaverequestapprovalComponent, data)];\n    }\n\n    initialLoading(index) {\n      const viewContainerRef = this.appComponentloader.viewContainerRef;\n      viewContainerRef.clear();\n      const componentItem = this.poList[index - 1];\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentItem.component);\n      const componentRef = viewContainerRef.createComponent(componentFactory);\n      componentItem.data.serviceRequestTypeCode = this.btnList.find(e => e.id == index).serviceRequestTypeCode;\n      componentRef.instance.data = componentItem.data; //    componentRef.instance.data = this.id;\n    }\n\n    loadComponents(item) {\n      this.initialLoading(item.id);\n      this.setBtnStyles(item);\n    }\n\n    setBtnStyles(item) {\n      this.btnList.forEach(item => item.isBtnClicked = false);\n      item.isBtnClicked = true;\n    }\n\n    printInvoice() {\n      const printContent = document.getElementById(\"printcontainer\");\n      const WindowPrt = window.open('', '', 'left=0,top=0,width=2000,height=1000,toolbar=0,scrollbars=0,status=0');\n      setTimeout(() => {\n        WindowPrt.document.write(printContent.innerHTML);\n        WindowPrt.document.close();\n        WindowPrt.focus();\n        WindowPrt.print();\n        WindowPrt.close();\n      }, 50);\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  ServicerequestinfoComponent.ɵfac = function ServicerequestinfoComponent_Factory(t) {\n    return new (t || ServicerequestinfoComponent)(i0.ɵɵdirectiveInject(i1.UtilityService), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n  };\n\n  ServicerequestinfoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ServicerequestinfoComponent,\n    selectors: [[\"app-servicerequestinfo\"]],\n    viewQuery: function ServicerequestinfoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(ComponentloaderDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.appComponentloader = _t.first);\n      }\n    },\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"container-fluid\", \"m-3\"], [1, \"row\", 2, \"position\", \"relative\"], [1, \"col-md-12\"], [\"type\", \"button\", \"class\", \"m-1 btn-request btn\", \"aria-hidden\", \"true\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"id\", \"printcontainer\", 1, \"pt-0\", \"pl-3\", \"pr-3\", \"pb-3\", \"shadow\"], [\"loadingComponent\", \"\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"m-1\", \"btn-request\", \"btn\", 3, \"ngClass\", \"click\"]],\n    template: function ServicerequestinfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, ServicerequestinfoComponent_button_3_Template, 2, 2, \"button\", 3);\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ServicerequestinfoComponent_Template_button_click_4_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(5, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtemplate(7, ServicerequestinfoComponent_ng_template_7_Template, 0, 0, \"ng-template\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.btnList);\n      }\n    },\n    directives: [i4.NgForOf, i5.ComponentloaderDirective, i4.NgClass],\n    styles: [\".btn-request[_ngcontent-%COMP%] {\\n    border-radius: 10px;\\n  }\"]\n  });\n  return ServicerequestinfoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}