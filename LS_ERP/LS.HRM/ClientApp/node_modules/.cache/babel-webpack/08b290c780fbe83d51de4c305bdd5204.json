{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { PayrollComponentType } from 'src/app/services/utility.constants';\nimport { ParentpayrollmgtComponent } from 'src/app/sharedcomponent/parentpayrollmgt.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/api.service\";\nimport * as i3 from \"src/app/api-authorization/AuthorizeService\";\nimport * as i4 from \"@ngx-translate/core\";\nimport * as i5 from \"src/app/services/utility.service\";\nimport * as i6 from \"src/app/services/notification.service\";\nimport * as i7 from \"@angular/material/dialog\";\nimport * as i8 from \"../Sharedcomponent/EmployeeBasicInfo/employeebasicinfo.component\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"../../../sharedcomponent/ValidationMessagesComponent\";\nimport * as i11 from \"@ng-select/ng-select\";\nimport * as i12 from \"@angular/material/tooltip\";\nimport * as i13 from \"../../../sharedcomponent/decimalpipe.component\";\n\nfunction GetemployeepayrollstructureComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 54);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const payrollPackage_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", payrollPackage_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", payrollPackage_r5.text, \"\");\n  }\n}\n\nfunction GetemployeepayrollstructureComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵelementStart(2, \"label\", 55);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 56);\n    i0.ɵɵlistener(\"blur\", function GetemployeepayrollstructureComponent_div_51_Template_input_blur_5_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.OnFormulaQueryStringChange($event, \"e\");\n    });\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"FormulaQueryString\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(6, 5, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(7, 7, \"FormulaQueryString\"), \"\");\n  }\n}\n\nfunction GetemployeepayrollstructureComponent_tr_84_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"a\", 29);\n    i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_tr_84_ng_container_1_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const item_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.UpdatePayrollComponent(item_r8.payrollComponentCode, \"e\");\n    });\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelement(4, \"i\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" \\u00A0 \");\n    i0.ɵɵelementStart(6, \"a\", 29);\n    i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_tr_84_ng_container_1_Template_a_click_6_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const i_r9 = i0.ɵɵnextContext().index;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.RemovePayrollComponent(i_r9);\n    });\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelement(8, \"i\", 59);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 60);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"decimalpipe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(3, 4, \"EditPayrollComponent\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(7, 6, \"DeletePayrollComponent\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", item_r8.payrollComponentName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 8, item_r8.payValue));\n  }\n}\n\nfunction GetemployeepayrollstructureComponent_tr_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, GetemployeepayrollstructureComponent_tr_84_ng_container_1_Template, 14, 10, \"ng-container\", 57);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r8.payrollComponentType === 1);\n  }\n}\n\nfunction GetemployeepayrollstructureComponent_div_100_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵelementStart(2, \"label\", 61);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 62);\n    i0.ɵɵlistener(\"blur\", function GetemployeepayrollstructureComponent_div_100_Template_input_blur_5_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.OnFormulaQueryStringChange($event, \"e\");\n    });\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"FormulaQueryString\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(6, 5, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(7, 7, \"FormulaQueryString\"), \"\");\n  }\n}\n\nfunction GetemployeepayrollstructureComponent_tr_133_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"a\", 29);\n    i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_tr_133_ng_container_1_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const item_r19 = i0.ɵɵnextContext().$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.UpdatePayrollComponent(item_r19.payrollComponentCode, \"d\");\n    });\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelement(4, \"i\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" \\u00A0 \");\n    i0.ɵɵelementStart(6, \"a\", 29);\n    i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_tr_133_ng_container_1_Template_a_click_6_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const i_r20 = i0.ɵɵnextContext().index;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.RemovePayrollComponent(i_r20);\n    });\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelement(8, \"i\", 59);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 60);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"decimalpipe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(3, 4, \"EditPayrollComponent\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(7, 6, \"DeletePayrollComponent\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", item_r19.payrollComponentName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 8, item_r19.payValue));\n  }\n}\n\nfunction GetemployeepayrollstructureComponent_tr_133_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, GetemployeepayrollstructureComponent_tr_133_ng_container_1_Template, 14, 10, \"ng-container\", 57);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r19.payrollComponentType === 2);\n  }\n}\n\nexport let GetemployeepayrollstructureComponent = /*#__PURE__*/(() => {\n  class GetemployeepayrollstructureComponent extends ParentpayrollmgtComponent {\n    constructor(fb, apiService, authService, translate, utilService, notifyService, dialogRef) {\n      super(authService);\n      this.fb = fb;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.translate = translate;\n      this.utilService = utilService;\n      this.notifyService = notifyService;\n      this.dialogRef = dialogRef;\n      this.ePayrollComponents = [];\n      this.dPayrollComponents = [];\n      this.payrollPackages = [];\n      this.packageComponents = [];\n      this.grossSalary = 0;\n      this.totalDeductions = 0;\n      this.netPay = 0;\n      this.isArab = false;\n      this.btnAddTitle = this.translate.instant('AddPayrollComponent');\n    }\n\n    ngOnInit() {\n      this.isArab = this.utilService.isArabic();\n      this.setForm();\n      if (this.employeeNumber != '') this.setEditForm();\n    }\n\n    setForm() {\n      this.form = this.fb.group({\n        id: ['', Validators.required],\n        ePayrollComponentCode: [{\n          value: '',\n          disabled: false\n        }],\n        eIsFormula: [{\n          value: false,\n          disabled: true\n        }],\n        eFormulaQueryString: [''],\n        ePayValue: [''],\n        dPayrollComponentCode: [{\n          value: '',\n          disabled: false\n        }],\n        dIsFormula: [{\n          value: false,\n          disabled: true\n        }],\n        dFormulaQueryString: [''],\n        dPayValue: [''],\n        packageComponents: this.fb.array([])\n      });\n      this.loadpayrollComponents();\n    }\n\n    setEditForm() {\n      this.GetEmployeePersonalInformation();\n      this.GetEmployeeContractInformation();\n    }\n\n    GetEmployeePersonalInformation() {\n      this.apiService.getQueryString(`PersonalInformation/GetEmployeePersonalInformationById?employeeNumber=`, this.employeeNumber).subscribe(res => {\n        if (res) {\n          res.allowImageUpload = false;\n          this.employeeBasicInfo = res;\n        }\n      });\n    }\n\n    GetEmployeeContractInformation() {\n      let queryParam = `employeeID=${encodeURIComponent('' + Number(this.employeeNumber))}`;\n      this.apiService.getQueryString(`EmployeeContract/GetEmployeeContractInformationById?`, queryParam).subscribe(res => {\n        if (res) {\n          if (res['gradeCode'] != null) this.gradeCode = res['gradeCode'];\n          if (res['positionCode'] != null) this.positionCode = res['positionCode'];\n          this.loadpayrollPackages();\n          this.GetEmployeePayrollPackageDetails();\n        }\n      });\n    }\n\n    loadpayrollComponents() {\n      let queryParam = `isStructured=true`;\n      this.apiService.getQueryString(`PayrollComponent/GetPayrollComponents?`, queryParam).subscribe(res => {\n        if (res) {\n          let payrollComponents = res;\n          payrollComponents.forEach(e => e.payrollComponentName = this.isArab ? e.payrollComponentNameAr : e.payrollComponentNameEn);\n          this.ePayrollComponents = payrollComponents.filter(e => e.payrollComponentType == PayrollComponentType.Earning);\n          this.dPayrollComponents = payrollComponents.filter(e => e.payrollComponentType == PayrollComponentType.Deduction);\n        }\n      });\n    }\n\n    get packageComponentsFrmArray() {\n      return this.form.get('packageComponents');\n    }\n\n    editItem(res) {\n      this.packageComponentsFrmArray.push(this.fb.group(res));\n    }\n\n    loadpayrollPackages() {\n      let queryParam = `GradeCode=${encodeURIComponent('' + this.gradeCode)}&PositionCode=${encodeURIComponent('' + this.positionCode)}`;\n      this.apiService.getQueryString(`PayrollPackage/GetPayrollPackageSelectListItem?`, queryParam).subscribe(res => {\n        this.payrollPackages = res;\n      });\n    }\n\n    GetEmployeePayrollPackageDetails() {\n      this.apiService.get('EmployeePayrollStructured', Number(this.employeeNumber)).subscribe(res => {\n        if (res) {\n          if (res['id'] == 0) this.form.controls['id'].setValue('');else this.form.controls['id'].setValue(res['id']);\n          let packageComponents = res['packageComponents'];\n          packageComponents.forEach(item => {\n            this.packageComponents.push(item);\n            this.calculateTotalPackage();\n          });\n        }\n      });\n    }\n\n    ImportPayrollPackageDetails() {\n      if (this.form.controls['id'].value) {\n        this.apiService.get('PayrollPackage', this.form.controls['id'].value).subscribe(res => {\n          if (res) {\n            let packageComponents = res['packageComponents'];\n            packageComponents.forEach(item => {\n              let packageComponent = item;\n              packageComponent.id = this.form.controls['id'].value;\n              packageComponent.employeeID = Number(this.employeeNumber);\n              packageComponent.isUsedInPayroll = false;\n              this.packageComponents.push(packageComponent);\n              this.calculateTotalPackage();\n            });\n          }\n        });\n      }\n    }\n\n    AddPayrollComponent(payrollComponentType) {\n      let payrollComponentCode = this.form.controls[payrollComponentType + 'PayrollComponentCode'].value; //Try to retrieve the component that's being added.\n\n      let payrollPackageComponent = this.packageComponents.find(e => e.payrollComponentCode.toLocaleLowerCase() === payrollComponentCode.toLocaleLowerCase()); //Add Payroll component.\n\n      if (!this.form.controls[payrollComponentType + 'PayrollComponentCode'].disabled) {\n        //Check for Basic component's existence\n        //try to retrieve Basic Component.\n        let basicSalaryComponent = this.packageComponents.filter(e => e.payrollComponentCode.toLocaleLowerCase() === 'BASIC'.toLocaleLowerCase()); //Check if Basic Salary is existing.\n\n        if (basicSalaryComponent.length == 1) {\n          if (this.form.controls[payrollComponentType + 'PayrollComponentCode'].value && this.form.controls['id'].value) {\n            //Check if its already existing.\n            if (!payrollPackageComponent) {\n              let queryParam = `payrollComponentCode=${encodeURIComponent('' + payrollComponentCode)}`;\n              this.apiService.getQueryString(`PayrollComponent/GetPayrollComponentByCode?`, queryParam).subscribe(res => {\n                if (res) {\n                  let item;\n                  let formulaQueryString = '';\n                  if (this.form.controls[payrollComponentType + 'IsFormula'].value) formulaQueryString = this.form.controls[payrollComponentType + 'FormulaQueryString'].value;\n                  item = {\n                    id: this.form.controls['id'].value,\n                    employeeID: Number(this.employeeNumber),\n                    payrollComponentCode: this.form.controls[payrollComponentType + 'PayrollComponentCode'].value,\n                    payrollComponentName: this.isArab ? res['payrollComponentNameAr'] : res['payrollComponentNameEn'],\n                    isFormula: this.form.controls[payrollComponentType + 'IsFormula'].value,\n                    payValue: this.form.controls[payrollComponentType + 'PayValue'].value,\n                    payrollComponentType: res['payrollComponentType'],\n                    formulaQueryString: formulaQueryString\n                  }; //If PayValue is empty, do not add to the list.\n\n                  if (this.form.controls[payrollComponentType + 'PayValue'].value) {\n                    this.packageComponents.push(item);\n                    this.calculateTotalPackage();\n                    this.form.controls[payrollComponentType + 'PayrollComponentCode'].setValue('');\n                    this.ResetPayrollComponentsControls(payrollComponentType);\n                  }\n                }\n              });\n            } else {\n              this.notifyService.showError(this.translate.instant('PayrollComponentAlreadyExisting'), 'Error');\n            }\n          } else this.utilService.FillUpFields();\n        } else {\n          this.notifyService.showError(this.translate.instant('AddBasicComponent'), 'Error');\n        }\n      } else {\n        if (payrollPackageComponent) {\n          if (this.form.controls[payrollComponentType + 'IsFormula'].value) payrollPackageComponent.formulaQueryString = this.form.controls[payrollComponentType + 'FormulaQueryString'].value;\n          payrollPackageComponent.payValue = this.form.controls[payrollComponentType + 'PayValue'].value; //If PayValue is empty, do not add to the list.\n\n          if (this.form.controls[payrollComponentType + 'PayValue'].value) {\n            //Remove the existing item from array.\n            let index = this.packageComponents.findIndex(e => e.payrollComponentCode.toLocaleLowerCase() === payrollComponentCode.toLocaleLowerCase());\n            this.packageComponents.splice(index, 1); //Push the modified item\n\n            this.packageComponents.push(payrollPackageComponent); //Re-Calculate the payvalue for formula based components.\n\n            this.packageComponents.forEach(e => {\n              //if payvalue is calculated based on formula.\n              if (e.isFormula) {\n                e.payValue = this.CalculatePayValue(e.formulaQueryString);\n              }\n            }); //Re-Calculate the Total Package.\n\n            this.calculateTotalPackage();\n            this.ResetAll(payrollComponentType);\n          }\n        }\n      }\n    }\n\n    UpdatePayrollComponent(payrollComponentCode, payrollComponentType) {\n      //Try to retrieve the component that's being added.\n      let payrollPackageComponent = this.packageComponents.find(e => e.payrollComponentCode.toLocaleLowerCase() === payrollComponentCode.toLocaleLowerCase()); //If exists, populate the values in controls.\n\n      if (payrollPackageComponent) {\n        this.form.controls[payrollComponentType + 'PayrollComponentCode'].setValue(payrollPackageComponent.payrollComponentCode);\n        this.form.controls[payrollComponentType + 'PayrollComponentCode'].disable();\n        this.form.controls[payrollComponentType + 'IsFormula'].setValue(payrollPackageComponent.isFormula);\n        this.form.controls[payrollComponentType + 'FormulaQueryString'].setValue(payrollPackageComponent.formulaQueryString);\n        this.form.controls[payrollComponentType + 'PayValue'].setValue(payrollPackageComponent.payValue);\n        this.btnAddTitle = this.translate.instant('UpdatePayrollComponent');\n        if (!payrollPackageComponent.isFormula) this.form.controls[payrollComponentType + 'PayValue'].enable();else this.form.controls[payrollComponentType + 'PayValue'].disable();\n      }\n    }\n\n    RemovePayrollComponent(index) {\n      let basicSalaryIndex = this.packageComponents.findIndex(e => e.payrollComponentCode.toLocaleLowerCase() === 'BASIC'.toLocaleLowerCase());\n\n      if (basicSalaryIndex != index) {\n        this.packageComponents.splice(index, 1);\n        this.calculateTotalPackage();\n      } else this.notifyService.showError(this.translate.instant('CannotDeleteBasicSalary'), 'Error');\n    }\n\n    OnPayrollComponentChange(payrollComponentType) {\n      //Check for Basic component's existence\n      //try to retrieve Basic Component.\n      let basicSalaryComponent = this.packageComponents.filter(e => e.payrollComponentCode.toLocaleLowerCase() === 'BASIC'.toLocaleLowerCase()); //Check if Basic Salary is existing.\n\n      if (basicSalaryComponent.length == 1) {\n        if (this.form.controls[payrollComponentType + 'PayrollComponentCode'].value && this.form.controls['id'].value) {\n          let payrollComponentCode = this.form.controls[payrollComponentType + 'PayrollComponentCode'].value; //Try to retrieve the component that's being added.\n\n          let payrollPackageComponent = this.packageComponents.find(e => e.payrollComponentCode.toLocaleLowerCase() === payrollComponentCode.toLocaleLowerCase());\n          this.ResetPayrollComponentsControls(payrollComponentType); //Check if its already existing.\n\n          if (!payrollPackageComponent) {\n            let payValue;\n            let queryParam = `payrollComponentCode=${encodeURIComponent('' + payrollComponentCode)}`;\n            this.apiService.getQueryString(`PayrollComponent/GetPayrollComponentByCode?`, queryParam).subscribe(res => {\n              if (res) {\n                let isFormula = res['isFormula'];\n                let _formulaQueryString = res['formulaQueryString'];\n                this.form.controls[payrollComponentType + 'IsFormula'].setValue(isFormula);\n                this.form.controls[payrollComponentType + 'FormulaQueryString'].setValue(_formulaQueryString);\n\n                if (isFormula) {\n                  payValue = this.CalculatePayValue(_formulaQueryString);\n                } else payValue = res['payValue'];\n\n                this.form.controls[payrollComponentType + 'PayValue'].setValue(payValue);\n              }\n            });\n          } else {\n            this.notifyService.showError(this.translate.instant('PayrollComponentAlreadyExisting'), 'Error');\n          }\n        } else this.utilService.FillUpFields();\n      } else {\n        this.notifyService.showError(this.translate.instant('AddBasicComponent'), 'Error');\n      }\n    }\n\n    ResetAll(payrollComponentType) {\n      this.form.controls[payrollComponentType + 'PayrollComponentCode'].setValue('');\n      this.form.controls[payrollComponentType + 'PayrollComponentCode'].enable();\n      this.ResetPayrollComponentsControls(payrollComponentType);\n    }\n\n    ResetPayrollComponentsControls(payrollComponentType) {\n      this.form.controls[payrollComponentType + 'IsFormula'].setValue(false);\n      this.form.controls[payrollComponentType + 'FormulaQueryString'].setValue('');\n      this.form.controls[payrollComponentType + 'PayValue'].setValue('');\n      this.btnAddTitle = this.translate.instant('AddPayrollComponent');\n    }\n\n    OnFormulaQueryStringChange(event, payrollComponentType) {\n      let formulaQueryString = event.target.value;\n      let payValue = 0;\n      payValue = this.CalculatePayValue(formulaQueryString);\n      this.form.controls[payrollComponentType + 'PayValue'].setValue(payValue);\n    }\n\n    CalculatePayValue(formulaeQueryString) {\n      let _payValue = 0; //formulaQueryString  will be in the format of \"Basic*(10/100);HRA*(5/100)\"\n\n      if (formulaeQueryString) {\n        let formulae = formulaeQueryString.split(';');\n\n        if (formulae.length > 0) {\n          formulae.forEach(formula => {\n            let expression = formula.split('*');\n\n            if (expression.length == 2) {\n              if (expression[1].includes('(')) expression[1] = expression[1].replace('(', '');\n              if (expression[1].includes(')')) expression[1] = expression[1].replace(')', '');\n\n              let _fraction = expression[1].split('/');\n\n              let _percentage = 0;\n              if (_fraction.length == 2) _percentage = Number(_fraction[0]);\n              let _payrollComponentCode = expression[0];\n\n              if (!formulaeQueryString.includes('gross')) {\n                // let payrollPackageComponent =\n                //   this.packageComponents.controls.find(\n                //     (group) =>\n                //       (group as FormGroup).get('payrollComponentCode')?.value ===\n                //       _payrollComponentCode\n                //   ) as FormGroup | undefined;\n                try {\n                  let payrollPackageComponent = this.packageComponents.find(e => e.payrollComponentCode.toLocaleLowerCase() === _payrollComponentCode.toLocaleLowerCase());\n\n                  if (payrollPackageComponent) {\n                    if (payrollPackageComponent.isFormula) {\n                      //Calculates payvalue for all the earning or deduction payroll components those are based on 'BASIC' salary.\n                      _payValue = _payValue + _percentage / 100 * this.CalculatePayValue(payrollPackageComponent.formulaQueryString);\n                    } else _payValue = _payValue + _percentage / 100 * payrollPackageComponent.payValue;\n                  }\n                } catch (e) {\n                  console.log(e.message);\n                }\n              } else {\n                _payValue = _payValue + _percentage / 100 * this.grossSalary;\n              }\n            }\n          });\n        }\n      }\n\n      return _payValue;\n    }\n\n    calculateTotalPackage() {\n      try {\n        this.grossSalary = this.packageComponents.filter(e => e.payrollComponentType == PayrollComponentType.Earning).map(a => a.payValue).reduce(function (a, b) {\n          return Number(a) + Number(b);\n        });\n\n        if (this.packageComponents.filter(e => e.payrollComponentType == PayrollComponentType.Deduction).length > 0) {\n          this.totalDeductions = this.packageComponents.filter(e => e.payrollComponentType == PayrollComponentType.Deduction).map(a => a.payValue).reduce(function (a, b) {\n            return Number(a) + Number(b);\n          });\n        } else this.totalDeductions = 0;\n\n        this.netPay = this.grossSalary - this.totalDeductions;\n        console.log(this.grossSalary);\n        console.log(this.totalDeductions);\n        console.log(this.netPay);\n      } catch (e) {\n        console.log(e.message);\n      }\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n    submit() {\n      if (this.form.valid) {\n        if (this.packageComponents.length > 0) {\n          this.packageComponents.forEach(item => {\n            this.editItem(item);\n          });\n        }\n\n        this.apiService.post('EmployeePayrollStructured', this.form.value).subscribe(res => {\n          this.utilService.OkMessage();\n          this.ResetAll('e');\n          this.ResetAll('d');\n        }, error => {\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields();\n    }\n\n  }\n\n  GetemployeepayrollstructureComponent.ɵfac = function GetemployeepayrollstructureComponent_Factory(t) {\n    return new (t || GetemployeepayrollstructureComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.AuthorizeService), i0.ɵɵdirectiveInject(i4.TranslateService), i0.ɵɵdirectiveInject(i5.UtilityService), i0.ɵɵdirectiveInject(i6.NotificationService), i0.ɵɵdirectiveInject(i7.MatDialogRef));\n  };\n\n  GetemployeepayrollstructureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GetemployeepayrollstructureComponent,\n    selectors: [[\"app-getemployeepayrollstructure\"]],\n    inputs: {\n      employeeNumber: \"employeeNumber\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 178,\n    vars: 111,\n    consts: [[3, \"employeeBasicInfo\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"novalidate\", \"\", 1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-3\", \"col-lg-3\"], [\"for\", \"id\", 1, \"mr-sm-2\"], [\"formControlName\", \"id\", 1, \"custom-select\", \"input-mandatory\", \"mr-sm-2\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"control\"], [1, \"col-md-4\", \"arabicright\", 2, \"margin-top\", \"33px\", \"color\", \"white\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"fas\", \"fa-download\"], [1, \"container-fluid\"], [1, \"col-md-12\", \"col-lg-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"col-md-6\", \"col-lg-6\"], [1, \"row\", \"pb-3\"], [1, \"card-title\", \"pt6\", \"text-center\"], [1, \"col-md-10\", \"col-lg-10\"], [1, \"mr-sm-2\"], [\"formControlName\", \"ePayrollComponentCode\", \"bindLabel\", \"payrollComponentName\", \"bindValue\", \"payrollComponentCode\", 3, \"items\", \"placeholder\", \"change\"], [\"class\", \"col-md-10 col-lg-10\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"ePayValue\"], [\"formControlName\", \"ePayValue\", \"type\", \"number\", \"step\", \"0.01\", \"min\", \"0\", 1, \"form-control\", 3, \"placeholder\"], [1, \"col-md-2\", \"col-lg-2\", \"mt-4\"], [1, \"tableicons\", 3, \"matTooltip\", \"click\"], [1, \"fa\", \"fa-plus-square\"], [1, \"fa\", \"fa-times-circle\"], [1, \"table\", \"table-responsive\", 2, \"width\", \"100%\"], [1, \"form-group\", 2, \"width\", \"100%\"], [2, \"font-size\", \"1rem\", \"font-weight\", \"bold\"], [4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"dPayrollComponentCode\", \"bindLabel\", \"payrollComponentName\", \"bindValue\", \"payrollComponentCode\", 3, \"items\", \"placeholder\", \"change\"], [\"for\", \"dPayValue\"], [\"formControlName\", \"dPayValue\", \"type\", \"number\", \"step\", \"0.01\", \"min\", \"0\", 1, \"form-control\", 3, \"placeholder\"], [1, \"row\", 2, \"margin\", \"0%\"], [1, \"col-md-6\"], [1, \"col-md-3\", \"summary\"], [1, \"col-md-3\", \"summary\", \"text-right\"], [2, \"margin-right\", \"1%\"], [1, \"col-md-5\"], [1, \"col-md-4\", \"summary\", \"text-right\"], [1, \"row\", \"netPay\"], [1, \"col-md-9\", \"text-right\"], [1, \"col-md-3\", \"text-right\"], [2, \"margin-right\", \"-10%\"], [1, \"row\", \"mt-3\"], [1, \"col-md-12\", \"col-lg-12\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-secondary\", \"btn-midblock\", 3, \"value\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-rounded\", \"btn-primary\", \"btn-midblock\", 3, \"value\"], [3, \"value\"], [\"for\", \"eFormulaQueryString\"], [\"type\", \"text\", \"formControlName\", \"eFormulaQueryString\", 1, \"form-control\", 3, \"placeholder\", \"blur\"], [4, \"ngIf\"], [1, \"icon-note\"], [1, \"icon-trash\"], [1, \"text-right\"], [\"for\", \"dFormulaQueryString\"], [\"type\", \"text\", \"formControlName\", \"dFormulaQueryString\", 1, \"form-control\", 3, \"placeholder\", \"blur\"]],\n    template: function GetemployeepayrollstructureComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"br\");\n        i0.ɵɵelement(1, \"app-employeebasicinfo\", 0);\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"h3\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function GetemployeepayrollstructureComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"label\", 6);\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 7);\n        i0.ɵɵelementStart(14, \"option\", 8);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, GetemployeepayrollstructureComponent_option_17_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"validation-message\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 11);\n        i0.ɵɵelementStart(20, \"a\", 12);\n        i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_Template_a_click_20_listener() {\n          return ctx.ImportPayrollPackageDetails();\n        });\n        i0.ɵɵelementStart(21, \"i\", 13);\n        i0.ɵɵtext(22);\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"br\");\n        i0.ɵɵelementStart(25, \"div\", 1);\n        i0.ɵɵelementStart(26, \"h3\", 2);\n        i0.ɵɵtext(27);\n        i0.ɵɵpipe(28, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"br\");\n        i0.ɵɵelementStart(30, \"div\", 14);\n        i0.ɵɵelementStart(31, \"div\", 4);\n        i0.ɵɵelementStart(32, \"div\", 15);\n        i0.ɵɵelementStart(33, \"div\", 16);\n        i0.ɵɵelementStart(34, \"div\", 17);\n        i0.ɵɵelementStart(35, \"div\", 4);\n        i0.ɵɵelementStart(36, \"div\", 18);\n        i0.ɵɵelementStart(37, \"div\", 19);\n        i0.ɵɵelementStart(38, \"div\", 15);\n        i0.ɵɵelementStart(39, \"h2\", 20);\n        i0.ɵɵtext(40);\n        i0.ɵɵpipe(41, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 4);\n        i0.ɵɵelementStart(44, \"div\", 21);\n        i0.ɵɵelementStart(45, \"label\", 22);\n        i0.ɵɵtext(46);\n        i0.ɵɵpipe(47, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"ng-select\", 23);\n        i0.ɵɵlistener(\"change\", function GetemployeepayrollstructureComponent_Template_ng_select_change_48_listener() {\n          return ctx.OnPayrollComponentChange(\"e\");\n        });\n        i0.ɵɵpipe(49, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 4);\n        i0.ɵɵtemplate(51, GetemployeepayrollstructureComponent_div_51_Template, 8, 9, \"div\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(52, \" \\u00A0 \");\n        i0.ɵɵelementStart(53, \"div\", 4);\n        i0.ɵɵelementStart(54, \"div\", 21);\n        i0.ɵɵelementStart(55, \"div\", 25);\n        i0.ɵɵelementStart(56, \"label\", 26);\n        i0.ɵɵtext(57);\n        i0.ɵɵpipe(58, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(59, \"input\", 27);\n        i0.ɵɵpipe(60, \"translate\");\n        i0.ɵɵpipe(61, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"div\", 28);\n        i0.ɵɵelementStart(63, \"a\", 29);\n        i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_Template_a_click_63_listener() {\n          return ctx.AddPayrollComponent(\"e\");\n        });\n        i0.ɵɵelement(64, \"i\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(65, \" \\u00A0 \");\n        i0.ɵɵelementStart(66, \"a\", 29);\n        i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_Template_a_click_66_listener() {\n          return ctx.ResetAll(\"e\");\n        });\n        i0.ɵɵpipe(67, \"translate\");\n        i0.ɵɵelement(68, \"i\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"div\", 4);\n        i0.ɵɵelementStart(70, \"div\", 15);\n        i0.ɵɵelementStart(71, \"div\", 32);\n        i0.ɵɵelementStart(72, \"table\", 33);\n        i0.ɵɵelementStart(73, \"tr\");\n        i0.ɵɵelementStart(74, \"th\", 34);\n        i0.ɵɵtext(75);\n        i0.ɵɵpipe(76, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"th\", 34);\n        i0.ɵɵtext(78);\n        i0.ɵɵpipe(79, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"th\", 34);\n        i0.ɵɵtext(81);\n        i0.ɵɵpipe(82, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"tbody\");\n        i0.ɵɵtemplate(84, GetemployeepayrollstructureComponent_tr_84_Template, 2, 1, \"tr\", 35);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(85, \"div\", 18);\n        i0.ɵɵelementStart(86, \"div\", 19);\n        i0.ɵɵelementStart(87, \"div\", 15);\n        i0.ɵɵelementStart(88, \"h2\", 20);\n        i0.ɵɵtext(89);\n        i0.ɵɵpipe(90, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(91, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"div\", 4);\n        i0.ɵɵelementStart(93, \"div\", 21);\n        i0.ɵɵelementStart(94, \"label\", 22);\n        i0.ɵɵtext(95);\n        i0.ɵɵpipe(96, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(97, \"ng-select\", 36);\n        i0.ɵɵlistener(\"change\", function GetemployeepayrollstructureComponent_Template_ng_select_change_97_listener() {\n          return ctx.OnPayrollComponentChange(\"d\");\n        });\n        i0.ɵɵpipe(98, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(99, \"div\", 4);\n        i0.ɵɵtemplate(100, GetemployeepayrollstructureComponent_div_100_Template, 8, 9, \"div\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(101, \" \\u00A0 \");\n        i0.ɵɵelementStart(102, \"div\", 4);\n        i0.ɵɵelementStart(103, \"div\", 21);\n        i0.ɵɵelementStart(104, \"div\", 25);\n        i0.ɵɵelementStart(105, \"label\", 37);\n        i0.ɵɵtext(106);\n        i0.ɵɵpipe(107, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(108, \"input\", 38);\n        i0.ɵɵpipe(109, \"translate\");\n        i0.ɵɵpipe(110, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(111, \"div\", 28);\n        i0.ɵɵelementStart(112, \"a\", 29);\n        i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_Template_a_click_112_listener() {\n          return ctx.AddPayrollComponent(\"d\");\n        });\n        i0.ɵɵelement(113, \"i\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(114, \" \\u00A0 \");\n        i0.ɵɵelementStart(115, \"a\", 29);\n        i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_Template_a_click_115_listener() {\n          return ctx.ResetAll(\"d\");\n        });\n        i0.ɵɵpipe(116, \"translate\");\n        i0.ɵɵelement(117, \"i\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"div\", 4);\n        i0.ɵɵelementStart(119, \"div\", 15);\n        i0.ɵɵelementStart(120, \"div\", 32);\n        i0.ɵɵelementStart(121, \"table\", 33);\n        i0.ɵɵelementStart(122, \"tr\");\n        i0.ɵɵelementStart(123, \"th\");\n        i0.ɵɵtext(124);\n        i0.ɵɵpipe(125, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(126, \"th\");\n        i0.ɵɵtext(127);\n        i0.ɵɵpipe(128, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(129, \"th\");\n        i0.ɵɵtext(130);\n        i0.ɵɵpipe(131, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(132, \"tbody\");\n        i0.ɵɵtemplate(133, GetemployeepayrollstructureComponent_tr_133_Template, 2, 1, \"tr\", 35);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(134, \"div\", 4);\n        i0.ɵɵelementStart(135, \"div\", 18);\n        i0.ɵɵelementStart(136, \"div\", 39);\n        i0.ɵɵelement(137, \"div\", 40);\n        i0.ɵɵelementStart(138, \"div\", 41);\n        i0.ɵɵelementStart(139, \"b\");\n        i0.ɵɵtext(140);\n        i0.ɵɵpipe(141, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(142, \"div\", 42);\n        i0.ɵɵelementStart(143, \"div\", 43);\n        i0.ɵɵtext(144);\n        i0.ɵɵpipe(145, \"decimalpipe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(146, \"div\", 18);\n        i0.ɵɵelementStart(147, \"div\", 39);\n        i0.ɵɵelement(148, \"div\", 44);\n        i0.ɵɵelementStart(149, \"div\", 45);\n        i0.ɵɵelementStart(150, \"b\");\n        i0.ɵɵtext(151);\n        i0.ɵɵpipe(152, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(153, \"div\", 42);\n        i0.ɵɵelementStart(154, \"div\", 43);\n        i0.ɵɵtext(155);\n        i0.ɵɵpipe(156, \"decimalpipe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(157, \"div\", 46);\n        i0.ɵɵelement(158, \"div\", 40);\n        i0.ɵɵelementStart(159, \"div\", 40);\n        i0.ɵɵelementStart(160, \"div\", 4);\n        i0.ɵɵelementStart(161, \"div\", 47);\n        i0.ɵɵelementStart(162, \"b\");\n        i0.ɵɵtext(163);\n        i0.ɵɵpipe(164, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(165, \"div\", 48);\n        i0.ɵɵelementStart(166, \"div\", 49);\n        i0.ɵɵtext(167);\n        i0.ɵɵpipe(168, \"decimalpipe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(169, \"div\", 50);\n        i0.ɵɵelementStart(170, \"div\", 51);\n        i0.ɵɵelementStart(171, \"input\", 52);\n        i0.ɵɵlistener(\"click\", function GetemployeepayrollstructureComponent_Template_input_click_171_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵpipe(172, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(173, \" \\u00A0 \");\n        i0.ɵɵelement(174, \"input\", 53);\n        i0.ɵɵpipe(175, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(176, \"br\");\n        i0.ɵɵelement(177, \"br\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"employeeBasicInfo\", ctx.employeeBasicInfo);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 45, \"ImportPayrollPackage\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 47, \"PayrollPackage\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 49, \"PayrollPackage\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.payrollPackages);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\\u00A0\", i0.ɵɵpipeBind1(23, 51, \"Import\"), \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(28, 53, \"ManageEmployeePayrollPackage\"));\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(41, 55, \"EARNINGS\"), \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(47, 57, \"PayrollComponent\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(49, 59, \"payrollComponent\"));\n        i0.ɵɵproperty(\"items\", ctx.ePayrollComponents);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"eIsFormula\"].value);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(58, 61, \"PayValue\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(60, 63, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(61, 65, \"PayValue\"), \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"matTooltip\", ctx.btnAddTitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(67, 67, \"Cancel\"));\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(76, 69, \"Actions\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(79, 71, \"Earnings\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(82, 73, \"Amount\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.packageComponents);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(90, 75, \"DEDUCTIONS\"), \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(96, 77, \"PayrollComponent\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(98, 79, \"payrollComponent\"));\n        i0.ɵɵproperty(\"items\", ctx.dPayrollComponents);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"dIsFormula\"].value);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(107, 81, \"PayValue\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(109, 83, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(110, 85, \"PayValue\"), \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"matTooltip\", ctx.btnAddTitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind1(116, 87, \"Cancel\"));\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(125, 89, \"Actions\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(128, 91, \"Deductions\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(131, 93, \"Amount\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.packageComponents);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(141, 95, \"GrossSalary\"), \":\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(145, 97, ctx.grossSalary), \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(152, 99, \"TotalDeductions\"), \":\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(156, 101, ctx.totalDeductions), \" \");\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(164, 103, \"NetPay\"), \":\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(168, 105, ctx.netPay), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(172, 107, \"Cancel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(175, 109, \"Save\"));\n      }\n    },\n    directives: [i8.EmployeebasicinfoComponent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i9.NgForOf, i10.ValidationMessagesComponent, i11.NgSelectComponent, i9.NgIf, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.MinValidator, i12.MatTooltip],\n    pipes: [i4.TranslatePipe, i13.DecimalPipe],\n    styles: [\"table[_ngcontent-%COMP%] {\\n        border-collapse: collapse;\\n        width: 100%;\\n    }\\n\\n    td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n        border: 1px solid #a5a5a5;\\n        text-align: center;\\n        padding: 10px;\\n        font-size: 17px !important;\\n    }\\n\\n    th[_ngcontent-%COMP%] {\\n        color: black;\\n    }\\n\\n    .select[_ngcontent-%COMP%] {\\n        word-wrap: normal;\\n        width: 32px;\\n        height: 32px;\\n    }\\n\\n    .mt-4[_ngcontent-%COMP%] {\\n        margin-top: 1.9rem !important;\\n    }\\n\\n    .summary[_ngcontent-%COMP%] {\\n        transform: translateY(-23px);\\n        margin: 0%;\\n        background-color: #e8eef3 !important;\\n        padding: 1%;\\n    }\\n\\n    .netPay[_ngcontent-%COMP%] {\\n        transform: translateY(-12px);\\n        margin: 0%;\\n        background-color: #e8eef3 !important;\\n        padding: 0.5%;\\n    }\"]\n  });\n  return GetemployeepayrollstructureComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}