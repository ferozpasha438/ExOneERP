{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../services/api.service\";\nimport * as i3 from \"../../../../api-authorization/AuthorizeService\";\nimport * as i4 from \"../../../../services/utility.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"../../../../services/notification.service\";\nimport * as i7 from \"../../../../sharedcomponent/ValidationService\";\nimport * as i8 from \"@ng-select/ng-select\";\nimport * as i9 from \"../../../../sharedcomponent/ValidationMessagesComponent\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/datepicker\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/slide-toggle\";\nimport * as i14 from \"@ngx-translate/core\";\n\nfunction AddupdateapadvancepaymentComponent_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r7.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r7.text);\n  }\n}\n\nfunction AddupdateapadvancepaymentComponent_option_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r8.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r8.text);\n  }\n}\n\nfunction AddupdateapadvancepaymentComponent_option_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r9.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r9.text);\n  }\n}\n\nfunction AddupdateapadvancepaymentComponent_div_90_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"label\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 38);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelement(8, \"validation-message\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(4, 4, \"checkNumber\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(6, 6, \"Please_Enter\"), \"  \", i0.ɵɵpipeBind1(7, 8, \"checkNumber\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"control\", ctx_r4.form.controls.checkNumber);\n  }\n}\n\nfunction AddupdateapadvancepaymentComponent_div_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"label\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 9);\n    i0.ɵɵelementStart(5, \"div\", 17);\n    i0.ɵɵelement(6, \"input\", 39);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementStart(8, \"div\", 19);\n    i0.ɵɵelement(9, \"mat-datepicker-toggle\", 20);\n    i0.ɵɵelement(10, \"mat-datepicker\", null, 40);\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r10 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 4, \"checkdate\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(7, 6, \"Select_a_Date\"));\n    i0.ɵɵproperty(\"matDatepicker\", _r10);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"for\", _r10);\n  }\n}\n\nfunction AddupdateapadvancepaymentComponent_div_114_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"label\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"ng-select\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"Invoice_Number\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"items\", ctx_r6.invoiceNumberList);\n  }\n}\n\nexport let AddupdateapadvancepaymentComponent = /*#__PURE__*/(() => {\n  class AddupdateapadvancepaymentComponent {\n    constructor(fb, apiService, authService, utilService, dialogRef, dialog, notifyService, validationService) {\n      this.fb = fb;\n      this.apiService = apiService;\n      this.authService = authService;\n      this.utilService = utilService;\n      this.dialogRef = dialogRef;\n      this.dialog = dialog;\n      this.notifyService = notifyService;\n      this.validationService = validationService;\n      this.id = 0;\n      this.IsEnableInvoice = false;\n      this.toBePaidAmount = '';\n      this.invoiceNumberList = [];\n      this.customerSiteList = [];\n      this.customerList = [];\n      this.companyList = [];\n      this.payCodeList = [];\n      this.branchList = [];\n      this.payCodeTypeList = [];\n      this.invoiceItems = [];\n      this.selectedInvoiceItems = [];\n      this.selectedInvoiceIDs = [];\n      this.selectedInvoiceIdList = [];\n      this.IsCheckSelected = false;\n      this.payType = '';\n      this.customerCode = '';\n      this.totalAmount = 0;\n      this.totalAmountStr = '';\n      this.isArab = false;\n      this.isSiteSelected = false;\n      this.finsetup = {\n        minCutOffShortAmt: 0,\n        maxCutOffOverAmr: 0\n      };\n    }\n\n    ngOnInit() {\n      this.isArab = this.utilService.isArabic();\n      this.setForm();\n      this.loadData();\n      this.loadFinSetupData(); //if (this.id > 0)\n      //  this.setEditForm();\n    }\n\n    setForm() {\n      //let cDate: IMyDateModel = { isRange: false, singleDate: {}, dateRange: null };\n      this.form = this.fb.group({\n        'custCode': ['', Validators.required],\n        // 'siteCode': [null],\n        'companyId': ['', Validators.required],\n        'branchCode': ['', Validators.required],\n        'tranDate': ['', Validators.required],\n        'payCode': ['', Validators.required],\n        // 'payType': ['', Validators.required],\n        'advAmount': ['0', Validators.required],\n        'invoiceNumber': [],\n        //'amount': ['', Validators.compose([Validators.required])],// this.validationService.numberValidator])],\n        // 'voucherNumber': ['', Validators.compose([Validators.required])],// this.validationService.numberValidator])],\n        //'narration': ['', Validators.required],\n        'preparedby': this.authService.getUserName(),\n        //'docNum': ['', Validators.required],      \n        'remarks': [''],\n        'notes': [''],\n        'docNum': [''],\n        'checkNumber': [''],\n        'sndInvNum': [1],\n        'checkDate': [null] //'': ['', Validators.required],\n        //'': ['', Validators.required],\n\n      });\n    }\n\n    enableInvoice(event) {\n      this.IsEnableInvoice = event.checked;\n      this.form.controls['invoiceNumber'].setValue(null);\n    }\n\n    loadBranchsForCompany(comId, result) {\n      if (comId) {\n        this.apiService.getall(`branch/getSelectSysBranchListByComId/${comId}`).subscribe(res => {\n          if (res) {\n            this.branchList = res;\n            if (result['payType'] === '1') this.IsCheckSelected = true;\n            this.form.patchValue(result); //this.form.patchValue({ 'custCode': `${result['custCode']}` });\n          }\n        });\n      }\n    }\n\n    loadFinSetupData() {\n      this.apiService.getall(\"financialsetup/getFinSetup\").subscribe(res => {\n        if (res) {\n          this.finsetup = {\n            minCutOffShortAmt: res.minCutOffShortAmt,\n            maxCutOffOverAmr: res.maxCutOffOverAmr\n          };\n        }\n      });\n    }\n\n    loadData() {\n      //this.productList = [{ text: 'product One', value: '1' }, { text: 'product Two', value: '2' }]\n      this.apiService.getall(\"paymentcodes/getSelectPaymentCodeList\").subscribe(res => {\n        if (res) this.payCodeList = res;\n      });\n      this.apiService.getall(\"vendor/getLanVendorsCustomList?isPayment=true\").subscribe(res => {\n        if (res) {\n          this.customerList = res;\n          const newList = this.customerList.map(i => {\n            i.text = !this.isArab ? i.text : i.textAr;\n            return i;\n          });\n        }\n      });\n      this.apiService.getall(\"company/getSelectCompanyList\").subscribe(res => {\n        if (res) this.companyList = res;\n      });\n      this.apiService.getall(\"paymentcodes/getSelectPaymentTypeList\").subscribe(res => {\n        if (res) this.payCodeTypeList = res;\n      });\n    }\n\n    setCheckNumber(event) {\n      let payCode = event.target.value;\n\n      if (payCode !== '') {\n        this.apiService.getall(`paymentcodes?payCode=${payCode}`).subscribe(res => {\n          if (res) {\n            this.payType = res['finPayType'];\n            this.setCheckNumberInput(this.payType);\n          }\n        });\n      } else this.setCheckNumberInput('');\n    }\n\n    setCheckNumberInput(payType) {\n      if (payType !== '') {\n        this.form.controls['payType'].setValue(payType);\n\n        if (payType === '1') {\n          this.payType = payType;\n          this.IsCheckSelected = true;\n          this.form.controls['checkNumber'].setValidators([Validators.required]);\n          this.form.controls['checkDate'].setValidators([Validators.required]);\n        } else {\n          this.setCheckNumberInputDefault();\n        }\n\n        this.form.controls['checkNumber'].updateValueAndValidity();\n        this.form.controls['checkDate'].updateValueAndValidity();\n      } else {\n        this.form.controls['payType'].setValue('');\n        this.setCheckNumberInputDefault();\n      }\n    }\n\n    setCheckNumberInputDefault() {\n      this.form.controls['checkNumber'].setValue('');\n      this.form.controls['checkDate'].setValue(null);\n      this.form.controls['checkNumber'].clearValidators();\n      this.form.controls['checkDate'].clearValidators();\n      this.IsCheckSelected = false;\n    }\n\n    resetSiteInfo() {\n      this.isSiteSelected = false;\n      this.loadCustomerInvoices(this.customerCode);\n    }\n\n    loadProductdata(event) {\n      let custCode = event.textTwo;\n      let custId = event.value; // this.form.controls['siteCode'].setValue(null);\n\n      this.form.controls['invoiceNumber'].setValue(null);\n\n      if (custCode) {\n        this.customerCode = custCode;\n        this.selectedInvoiceIDs = [];\n        this.selectedInvoiceItems = [];\n        this.totalAmount = 0; //this.apiService.getall(`generateInvoice/getCustomerInvoiceNumberList/${custId}`).subscribe(res => {\n        //  if (res) {\n        //    this.invoiceNumberList = res;\n        //  }\n        //});\n        //this.apiService.getall(`customer/getCustomerSitesSelectList/${custId}`).subscribe(res => {\n        //  if (res) {\n        //    this.customerSiteList = res;\n        //    this.customerSiteList.map((i) => {\n        //      i.text = !this.isArab ? i.text : i.textTwo;\n        //      return i;\n        //    });\n        //  }\n        //});\n        //this.apiService.getall(`customerPayment/getCustomerToBePaidAmount?customerCode=${custCode}`).subscribe(res => {\n        //  if (res) {\n        //    let isPaid = res['isPaid'] as boolean;\n        //    if (!isPaid)\n        //      this.toBePaidAmount = `Amount to be Paid : <br> (Invoice Amount) = ${res['tobePaidAmount']} `;\n        //    //this.toBePaidAmount = `Amount to be Paid : <br> (Invoice Amount) ${res['netAmount']} - [ (Paid Amount) ${res['paidAmount']} + (Advance Amount) ${res['appliedAmount']} ] = ${res['tobePaidAmount']} `;\n        //    else\n        //      this.toBePaidAmount = 'Amount to be Paid : 0';\n        //  }\n        //});\n      } else {\n        this.toBePaidAmount = 'Amount to be Paid : 0';\n      }\n    }\n\n    loadCustomerInvoices(custCode) {\n      this.apiService.getall(`opmArPayment/getOpmArInvoiceList?customerCode=${custCode}`).subscribe(res => {\n        if (res) this.invoiceItems = res;\n      });\n    }\n\n    loadBranchs(event) {\n      let comId = event.target.value;\n\n      if (comId) {\n        this.apiService.getall(`branch/getSelectSysBranchListByComId/${comId}`).subscribe(res => {\n          if (res) this.branchList = res;\n        });\n      }\n    }\n\n    submit() {\n      if (this.form.valid) {\n        this.form.value['tranDate'] = this.utilService.selectedDateTime(this.form.controls['tranDate'].value);\n        this.apiService.post('opmArPayment/createOpmCustomerAdvancePayment', this.form.value).subscribe(res => {\n          this.utilService.OkMessage();\n          this.reset();\n          this.dialogRef.close(true);\n        }, error => {\n          this.utilService.ShowApiErrorMessage(error);\n        });\n      } else this.utilService.FillUpFields();\n    }\n\n    reset() {\n      this.form.controls['custCode'].setValue('');\n      this.form.controls['branchCode'].setValue('');\n      this.form.controls['companyId'].setValue(''); // this.form.reset();\n    }\n\n    closeModel() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  AddupdateapadvancepaymentComponent.ɵfac = function AddupdateapadvancepaymentComponent_Factory(t) {\n    return new (t || AddupdateapadvancepaymentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.AuthorizeService), i0.ɵɵdirectiveInject(i4.UtilityService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i5.MatDialog), i0.ɵɵdirectiveInject(i6.NotificationService), i0.ɵɵdirectiveInject(i7.ValidationService));\n  };\n\n  AddupdateapadvancepaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddupdateapadvancepaymentComponent,\n    selectors: [[\"app-addupdateapadvancepayment\"]],\n    decls: 124,\n    vars: 101,\n    consts: [[1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"close\", 3, \"click\"], [\"novalidate\", \"\", 1, \"mt-1\", 3, \"formGroup\", \"ngSubmit\"], [1, \"outer\"], [1, \"row\", \"rowm0\"], [1, \"col-md-12\", \"col-lg-12\"], [1, \"row\"], [1, \"col-md-3\", \"col-lg-3\"], [1, \"form-group\"], [1, \"mr-sm-2\"], [\"bindLabel\", \"text\", \"bindValue\", \"textTwo\", \"formControlName\", \"custCode\", 3, \"items\", \"change\"], [3, \"control\"], [\"formControlName\", \"companyId\", 1, \"custom-select\", \"mr-sm-2\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"branchCode\", 1, \"custom-select\", \"mr-sm-2\"], [1, \"input-group\", \"mb-2\"], [\"formControlName\", \"tranDate\", 1, \"form-control\", \"datapickerinput\", 3, \"placeholder\", \"matDatepicker\"], [1, \"input-group-prepend\", \"datapickericon\"], [\"matSuffix\", \"\", 3, \"for\"], [\"tranDate\", \"\"], [\"formControlName\", \"payCode\", 1, \"custom-select\", \"mr-sm-2\"], [\"type\", \"number\", \"formControlName\", \"advAmount\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"text\", \"formControlName\", \"preparedby\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"text\", \"formControlName\", \"docNum\", 1, \"form-control\", 3, \"placeholder\"], [\"class\", \"col-md-3 col-lg-3\", 4, \"ngIf\"], [1, \"col-md-6\", \"col-lg-6\"], [\"formControlName\", \"remarks\", 1, \"form-control\", 3, \"placeholder\"], [\"formControlName\", \"notes\", 1, \"form-control\", 3, \"placeholder\"], [1, \"col-md-2\", \"col-lg-2\"], [1, \"mtop6\"], [\"color\", \"primary\", 3, \"change\"], [\"class\", \"col-md-4 col-lg-4\", 4, \"ngIf\"], [1, \"col-lg-12\", \"col-md-12\", \"text-center\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"waves-effect\", \"waves-light\", \"btn-primary\", 3, \"value\"], [3, \"value\"], [\"type\", \"text\", \"formControlName\", \"checkNumber\", \"maxlength\", \"10\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"text\", \"formControlName\", \"checkDate\", 1, \"form-control\", \"datapickerinput\", 3, \"placeholder\", \"matDatepicker\"], [\"checkdate\", \"\"], [1, \"col-md-4\", \"col-lg-4\"], [\"bindLabel\", \"text\", \"bindValue\", \"value\", \"formControlName\", \"invoiceNumber\", 3, \"items\"]],\n    template: function AddupdateapadvancepaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h2\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"translate\");\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AddupdateapadvancepaymentComponent_Template_button_click_4_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(5, \" \\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddupdateapadvancepaymentComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"label\", 10);\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ng-select\", 11);\n        i0.ɵɵlistener(\"change\", function AddupdateapadvancepaymentComponent_Template_ng_select_change_16_listener($event) {\n          return ctx.loadProductdata($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"validation-message\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 8);\n        i0.ɵɵelementStart(19, \"div\", 9);\n        i0.ɵɵelementStart(20, \"label\", 10);\n        i0.ɵɵtext(21);\n        i0.ɵɵpipe(22, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"select\", 13);\n        i0.ɵɵlistener(\"change\", function AddupdateapadvancepaymentComponent_Template_select_change_23_listener($event) {\n          return ctx.loadBranchs($event);\n        });\n        i0.ɵɵelementStart(24, \"option\", 14);\n        i0.ɵɵtext(25);\n        i0.ɵɵpipe(26, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, AddupdateapadvancepaymentComponent_option_27_Template, 2, 2, \"option\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"validation-message\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 8);\n        i0.ɵɵelementStart(30, \"div\", 9);\n        i0.ɵɵelementStart(31, \"label\", 10);\n        i0.ɵɵtext(32);\n        i0.ɵɵpipe(33, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"select\", 16);\n        i0.ɵɵelementStart(35, \"option\", 14);\n        i0.ɵɵtext(36);\n        i0.ɵɵpipe(37, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(38, AddupdateapadvancepaymentComponent_option_38_Template, 2, 2, \"option\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"validation-message\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 8);\n        i0.ɵɵelementStart(41, \"label\", 10);\n        i0.ɵɵtext(42);\n        i0.ɵɵpipe(43, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 9);\n        i0.ɵɵelementStart(45, \"div\", 17);\n        i0.ɵɵelement(46, \"input\", 18);\n        i0.ɵɵpipe(47, \"translate\");\n        i0.ɵɵelementStart(48, \"div\", 19);\n        i0.ɵɵelement(49, \"mat-datepicker-toggle\", 20);\n        i0.ɵɵelement(50, \"mat-datepicker\", null, 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"validation-message\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"div\", 8);\n        i0.ɵɵelementStart(54, \"div\", 9);\n        i0.ɵɵelementStart(55, \"label\", 10);\n        i0.ɵɵtext(56);\n        i0.ɵɵpipe(57, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"select\", 22);\n        i0.ɵɵelementStart(59, \"option\", 14);\n        i0.ɵɵtext(60);\n        i0.ɵɵpipe(61, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(62, AddupdateapadvancepaymentComponent_option_62_Template, 2, 2, \"option\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(63, \"validation-message\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"div\", 8);\n        i0.ɵɵelementStart(65, \"div\", 9);\n        i0.ɵɵelementStart(66, \"label\", 10);\n        i0.ɵɵtext(67);\n        i0.ɵɵpipe(68, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(69, \"input\", 23);\n        i0.ɵɵpipe(70, \"translate\");\n        i0.ɵɵpipe(71, \"translate\");\n        i0.ɵɵelement(72, \"validation-message\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"div\", 8);\n        i0.ɵɵelementStart(74, \"div\", 9);\n        i0.ɵɵelementStart(75, \"label\", 10);\n        i0.ɵɵtext(76);\n        i0.ɵɵpipe(77, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(78, \"input\", 24);\n        i0.ɵɵpipe(79, \"translate\");\n        i0.ɵɵpipe(80, \"translate\");\n        i0.ɵɵelement(81, \"validation-message\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"div\", 8);\n        i0.ɵɵelementStart(83, \"div\", 9);\n        i0.ɵɵelementStart(84, \"label\", 10);\n        i0.ɵɵtext(85);\n        i0.ɵɵpipe(86, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(87, \"input\", 25);\n        i0.ɵɵpipe(88, \"translate\");\n        i0.ɵɵpipe(89, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(90, AddupdateapadvancepaymentComponent_div_90_Template, 9, 10, \"div\", 26);\n        i0.ɵɵtemplate(91, AddupdateapadvancepaymentComponent_div_91_Template, 14, 8, \"div\", 26);\n        i0.ɵɵelementStart(92, \"div\", 27);\n        i0.ɵɵelementStart(93, \"div\", 9);\n        i0.ɵɵelementStart(94, \"label\", 10);\n        i0.ɵɵtext(95);\n        i0.ɵɵpipe(96, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(97, \"textarea\", 28);\n        i0.ɵɵpipe(98, \"translate\");\n        i0.ɵɵpipe(99, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(100, \"div\", 27);\n        i0.ɵɵelementStart(101, \"div\", 9);\n        i0.ɵɵelementStart(102, \"label\", 10);\n        i0.ɵɵtext(103);\n        i0.ɵɵpipe(104, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(105, \"textarea\", 29);\n        i0.ɵɵpipe(106, \"translate\");\n        i0.ɵɵpipe(107, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(108, \"div\", 30);\n        i0.ɵɵelementStart(109, \"label\", 31);\n        i0.ɵɵtext(110);\n        i0.ɵɵpipe(111, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(112, \"br\");\n        i0.ɵɵelementStart(113, \"mat-slide-toggle\", 32);\n        i0.ɵɵlistener(\"change\", function AddupdateapadvancepaymentComponent_Template_mat_slide_toggle_change_113_listener($event) {\n          return ctx.enableInvoice($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(114, AddupdateapadvancepaymentComponent_div_114_Template, 6, 4, \"div\", 33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(115, \"div\", 4);\n        i0.ɵɵelementStart(116, \"div\", 7);\n        i0.ɵɵelementStart(117, \"div\", 34);\n        i0.ɵɵelementStart(118, \"button\", 35);\n        i0.ɵɵlistener(\"click\", function AddupdateapadvancepaymentComponent_Template_button_click_118_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(119);\n        i0.ɵɵpipe(120, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(121, \" \\u00A0\\u00A0 \");\n        i0.ɵɵelement(122, \"input\", 36);\n        i0.ɵɵpipe(123, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(51);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 45, \"Create_New_Vendor_Advance_Payment\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(15, 47, \"Vendor_Name\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"items\", ctx.customerList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.custCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(22, 49, \"Organization\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(26, 51, \"Select_Organization\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.companyList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.companyId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(33, 53, \"Branch\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(37, 55, \"Select_Branch\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.branchList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.branchCode);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(43, 57, \"Payment_Date\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(47, 59, \"Select_a_Date\"));\n        i0.ɵɵproperty(\"matDatepicker\", _r2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.tranDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(57, 61, \"PayCode\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(61, 63, \"Select_Organization\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.payCodeList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.payCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(68, 65, \"amount\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(70, 67, \"Please_Enter\"), \" \", i0.ɵɵpipeBind1(71, 69, \"Invoice_Reference_Number\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.advAmount);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(77, 71, \"preparedby\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \" \", i0.ɵɵpipeBind1(79, 73, \"Please_Enter\"), \"  \", i0.ɵɵpipeBind1(80, 75, \"LPO_Contract\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"control\", ctx.form.controls.preparedby);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(86, 77, \"Doc_Number\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \" \", i0.ɵɵpipeBind1(88, 79, \"Please_Enter\"), \"  \", i0.ɵɵpipeBind1(89, 81, \"Doc_Number\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.IsCheckSelected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.IsCheckSelected);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(96, 83, \"Remarks\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(98, 85, \"PLease_Enter\"), \" \", i0.ɵɵpipeBind1(99, 87, \"Remarks\"), \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(104, 89, \"Invoice_Notes\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate2(\"placeholder\", \"\", i0.ɵɵpipeBind1(106, 91, \"PLease_Enter\"), \" \", i0.ɵɵpipeBind1(107, 93, \"Invoice_Notes\"), \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(111, 95, \"Payment_Against_Invoice\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.IsEnableInvoice);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(120, 97, \"Cancel\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(123, 99, \"Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i8.NgSelectComponent, i1.NgControlStatus, i1.FormControlName, i9.ValidationMessagesComponent, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i10.NgForOf, i1.DefaultValueAccessor, i11.MatDatepickerInput, i11.MatDatepickerToggle, i12.MatSuffix, i11.MatDatepicker, i1.NumberValueAccessor, i10.NgIf, i13.MatSlideToggle, i1.MaxLengthValidator],\n    pipes: [i14.TranslatePipe],\n    encapsulation: 2\n  });\n  return AddupdateapadvancepaymentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}