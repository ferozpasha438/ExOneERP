{"ast":null,"code":"import { HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthorizeInterceptor } from './api-authorization/authorize.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from './sharedcomponent/shared.module';\nimport { NgxPrintModule } from 'ngx-print';\nimport { NgApexchartsModule } from \"ng-apexcharts\";\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@ngx-translate/core\"; //import { Login2Component } from './account/login2/login2.component';\n// AoT requires an exported function for factories\n\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http, 'assets/i18n/', '.json');\n} //export function ModuleHttpLoaderFactory(http: HttpClient) {\n//  const baseTranslateUrl = './assets/i18n';\n//  const options: IModuleTranslationOptions = {\n//    modules: [\n//      // Fetches file at e.g. /assets/i18n/en.json\n//      { baseTranslateUrl },\n//      // Fetches file at e.g. /assets/i18n/non-lazy/en.json\n//     // { baseTranslateUrl, moduleName: 'non-lazy', namespace: 'FEATURE_FOO' }\n//    ]\n//  };\n//  return new ModuleTranslateLoader(http, options);\n//}\n//export function ApplicationInitializerFactory(\n//  translate: TranslateService,\n//  injector: Injector\n//) {\n//  return async () => {\n//    await injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n//    const deaultLang = 'en';\n//    translate.addLangs(['en', 'ar']);\n//    translate.setDefaultLang(deaultLang);\n//    try {\n//      await translate.use(deaultLang).toPromise();\n//    } catch (err) {\n//      console.log(err);\n//    }\n//  };\n//}\n\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [//{\n    //  provide: APP_INITIALIZER,\n    //  useFactory: ApplicationInitializerFactory,\n    //  deps: [TranslateService, Injector],\n    //  multi: true\n    //},    \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthorizeInterceptor,\n      multi: true\n    }],\n    imports: [[// BrowserModule,    \n    BrowserAnimationsModule, NgxPrintModule, NgApexchartsModule, NgxMaterialTimepickerModule, //HttpClientModule,\n    //FormsModule,\n    //ReactiveFormsModule,\n    AppRoutingModule, ToastrModule.forRoot({\n      timeOut: 2500,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true\n    }), TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }), //TranslateModule.forRoot({\n    //  loader: {\n    //    provide: TranslateLoader,\n    //    useFactory: HttpLoaderFactory,\n    //    deps: [HttpClient]\n    //  }\n    //}),\n    //TreeviewModule.forRoot(),\n    SharedModule //    FinanceModule,\n    // MatTableModule,\n    // MatSlideToggleModule,\n    //// MatSnackBarModule,\n    // MatPaginatorModule,\n    // MatSortModule,\n    // MatDialogModule,\n    // MatDatepickerModule,\n    // MatNativeDateModule,\n    // MatTabsModule,\n    // MatTreeModule,\n    // MatIconModule,\n    // MatButtonModule,\n    // MatCheckboxModule,\n    // MatProgressSpinnerModule,\n    ]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}