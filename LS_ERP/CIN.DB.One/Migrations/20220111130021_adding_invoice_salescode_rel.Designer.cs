// <auto-generated />
using System;
using CIN.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CIN.DB.One.Migrations
{
    [DbContext(typeof(CINDBOneContext))]
    [Migration("20220111130021_adding_invoice_salescode_rel")]
    partial class adding_invoice_salescode_rel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountBranches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinBranchAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FinBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FinBranchDesc")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("FinBranchIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("FinBranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinBranchPrefix")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FinBranchType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinBranchCode");

                    b.ToTable("tblFinDefAccountBranches");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountCategory", b =>
                {
                    b.Property<string>("FinCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<short>("FinCatLastSeq")
                        .HasColumnType("smallint");

                    b.Property<string>("FinCatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("FinCatCode");

                    b.HasIndex("FinType");

                    b.HasIndex(new[] { "FinCatCode" }, "IX_tblFinDefAccountCategory_FinCatCode")
                        .IsUnique();

                    b.ToTable("tblFinDefAccountCategory");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountSubCategory", b =>
                {
                    b.Property<string>("FinSubCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("FinSubCatLastSeq")
                        .HasColumnType("smallint");

                    b.Property<string>("FinSubCatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("FinSubCatCode");

                    b.HasIndex("FinCatCode");

                    b.ToTable("tblFinDefAccountSubCategory");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountlPaycodes", b =>
                {
                    b.Property<string>("FinPayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FinPayAcIntgrAC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinPayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinPayPDCClearAC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinPayType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<bool>("SystemGenCheckBook")
                        .HasColumnType("bit");

                    b.Property<bool>("UseByOtherBranches")
                        .HasColumnType("bit");

                    b.HasKey("FinPayCode");

                    b.HasIndex("FinBranchCode");

                    b.HasIndex("FinPayAcIntgrAC");

                    b.HasIndex("FinPayPDCClearAC");

                    b.ToTable("tblFinDefAccountlPaycodes");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBankCheckLeaves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BounceReason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("date");

                    b.Property<string>("CheckLeavePrefix")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("ClearedOn")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("EndChkNum")
                        .HasColumnType("int");

                    b.Property<string>("FinPayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsBounced")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCleared")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPDC")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoided")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedToName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("StChkNum")
                        .HasColumnType("int");

                    b.Property<string>("TranSource")
                        .HasMaxLength(2)
                        .HasColumnType("char(2)");

                    b.Property<string>("UsedByTranNum")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UsedOn")
                        .HasColumnType("date");

                    b.Property<string>("VoidedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("VoidedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinPayCode");

                    b.ToTable("tblFinDefBankCheckLeaves");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBranchesAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppAuth")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("AppAuthAP")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthAR")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthBR")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthBV")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthCV")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthFA")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthJV")
                        .HasColumnType("bit");

                    b.Property<short>("AppLevel")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsFinalAuthority")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinBranchCode");

                    b.ToTable("tblFinDefBranchesAuthority");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBranchesMainAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinAcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinAcCode");

                    b.HasIndex("FinBranchCode");

                    b.ToTable("tblFinDefBranchesMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefCenters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FinCenterCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinCenterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinCenterType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("FinCenterCode");

                    b.ToTable("tblFinDefCenters");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", b =>
                {
                    b.Property<string>("FinAcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinAcAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinAcDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FinAcName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("FinActLastSeq")
                        .HasColumnType("smallint");

                    b.Property<string>("FinCatCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("FinIsIntegrationAC")
                        .HasColumnType("bit");

                    b.Property<bool>("FinIsPayCode")
                        .HasColumnType("bit");

                    b.Property<string>("FinPayCodetype")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FinSubCatCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Fintype")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("FinAcCode");

                    b.HasIndex(new[] { "FinAcCode" }, "IX_tblFinDefMainAccounts_FinAcCode")
                        .IsUnique();

                    b.ToTable("tblFinDefMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinSysAccountType", b =>
                {
                    b.Property<string>("TypeCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TypeBal")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)");

                    b.HasKey("TypeCode");

                    b.ToTable("tblFinSysAccountType");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinSysFinanialSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("FInSysGenAcCode")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FYClosingDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("FYOpenDate")
                        .HasColumnType("date");

                    b.Property<short>("FYYear")
                        .HasColumnType("smallint");

                    b.Property<short>("FinAcCatLen")
                        .HasColumnType("smallint");

                    b.Property<string>("FinAcFormat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("FinAcLen")
                        .HasColumnType("smallint");

                    b.Property<short>("FinAcSubCatLen")
                        .HasColumnType("smallint");

                    b.Property<bool>("FinAllowNextYearTran")
                        .HasColumnType("bit");

                    b.Property<short>("FinBranchPrefixLen")
                        .HasColumnType("smallint");

                    b.Property<bool>("FinTranDateAsPostDate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("tblFinSysFinanialSetup");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefCategory", b =>
                {
                    b.Property<string>("ItemCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCatDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemCatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemCatPrefix")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("ItemCatCode");

                    b.ToTable("tblInvDefCategory");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefClass", b =>
                {
                    b.Property<string>("ItemClassCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemClassDesce")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("ItemClassCode");

                    b.ToTable("tblInvDefClass");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefDistributionGroup", b =>
                {
                    b.Property<string>("InvDistGroup")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InvAdjAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvAssetAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvCOGSAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvCashPOAC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvCostCorAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvDefaultAPAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvInTransitAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvNonAssetAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvSalesAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvWIPAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvWriteOffAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("InvDistGroup");

                    b.HasIndex("InvAdjAc");

                    b.HasIndex("InvAssetAc");

                    b.HasIndex("InvCOGSAc");

                    b.HasIndex("InvCashPOAC");

                    b.HasIndex("InvCostCorAc");

                    b.HasIndex("InvDefaultAPAc");

                    b.HasIndex("InvInTransitAc");

                    b.HasIndex("InvNonAssetAc");

                    b.HasIndex("InvSalesAc");

                    b.HasIndex("InvWIPAc");

                    b.HasIndex("InvWriteOffAc");

                    b.ToTable("tblInvDefDistributionGroup");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefInventoryConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AutoGenItemCode")
                        .HasColumnType("bit");

                    b.Property<short>("CategoryLength")
                        .HasColumnType("smallint");

                    b.Property<string>("CentralWHCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<short>("ItemLength")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("NewItemIndicator")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("PrefixCatCode")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CentralWHCode");

                    b.ToTable("tblInvDefInventoryConfig");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefSubCategory", b =>
                {
                    b.Property<string>("SubCatKey")
                        .HasMaxLength(41)
                        .HasColumnType("nvarchar(41)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemSubCatCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemSubCatDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemSubCatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("SubCatKey");

                    b.HasIndex("ItemCatCode");

                    b.ToTable("tblInvDefSubCategory");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefSubClass", b =>
                {
                    b.Property<string>("ItemSubClassCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemSubClassDesce")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemSubClassName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("ItemSubClassCode");

                    b.ToTable("tblInvDefSubClass");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefUOM", b =>
                {
                    b.Property<string>("UOMCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("UOMDesc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UOMName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UOMCode");

                    b.ToTable("tblInvDefUOM");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefWarehouse", b =>
                {
                    b.Property<string>("WHCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InvDistGroup")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("WHAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("WHBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WHCity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WHDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WHIncharge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WHName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WHState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("WhAllowDirectPur")
                        .HasColumnType("bit");

                    b.HasKey("WHCode");

                    b.HasIndex("InvDistGroup");

                    b.HasIndex("WHBranchCode");

                    b.ToTable("tblInvDefWarehouse");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustCode");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnCustomerApproval_TranNumber")
                        .IsUnique()
                        .HasFilter("[TranNumber] IS NOT NULL");

                    b.ToTable("tblFinTrnCustomerApproval");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AppliedAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("BalanceAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<short>("CreditDays")
                        .HasColumnType("smallint");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DiscountAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("InvoiceAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("PaidAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustCode");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "InvoiceNumber" }, "IX_tblFinTrnCustomerInvoice_InvoiceNumber")
                        .IsUnique()
                        .HasFilter("[InvoiceNumber] IS NOT NULL");

                    b.ToTable("tblFinTrnCustomerInvoice");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("PamentCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustCode");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnCustomerStatement_TranNumber")
                        .IsUnique();

                    b.ToTable("tblFinTrnCustomerStatement");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Barcode")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEN")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UnitTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("tblTranDefProduct");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblTranDefProductType");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblTranDefTax");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefUnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblTranDefUnitType");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InvoiceDueDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceModule")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("InvoiceNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCreditConverted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("LpoContract")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ServiceDate1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpInvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TaxIdNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("PaymentTerms");

                    b.ToTable("tblTranInvoice");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranInvoiceItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<long?>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DebitMemoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("Discount")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("tblTranInvoiceItem");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", b =>
                {
                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustARAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustARAdjAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustARDiscAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustAddress1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustAddress2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("CustAlloChkPay")
                        .HasColumnType("bit");

                    b.Property<bool>("CustAlloCrOverride")
                        .HasColumnType("bit");

                    b.Property<bool>("CustAllowCrsale")
                        .HasColumnType("bit");

                    b.Property<bool>("CustArAcBranch")
                        .HasColumnType("bit");

                    b.Property<string>("CustArAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustCatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustCityCode1")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustCityCode2")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustContact1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustContact2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("CustCrLimit")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("CustDefExpAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("CustDiscount")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("CustEmail1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustEmail2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("CustIsVendor")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CustLastPaidDate")
                        .HasColumnType("date");

                    b.Property<decimal>("CustLastPayAmt")
                        .HasColumnType("decimal(12,3)");

                    b.Property<DateTime>("CustLastSalesDate")
                        .HasColumnType("date");

                    b.Property<string>("CustMobile1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustMobile2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("CustOnHold")
                        .HasColumnType("bit");

                    b.Property<string>("CustPhone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustPhone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("CustPriceLevel")
                        .HasColumnType("smallint");

                    b.Property<short>("CustRating")
                        .HasColumnType("smallint");

                    b.Property<string>("CustSalesArea")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustSalesRep")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CustSetPriceLevel")
                        .HasColumnType("bit");

                    b.Property<short>("CustType")
                        .HasColumnType("smallint");

                    b.Property<string>("CustUDF1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustUDF2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustUDF3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("SalesTermsCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustCode");

                    b.HasIndex("CustARAc");

                    b.HasIndex("CustARAdjAcCode");

                    b.HasIndex("CustARDiscAcCode");

                    b.HasIndex("CustArAcCode");

                    b.HasIndex("CustCatCode");

                    b.HasIndex("CustCityCode1");

                    b.HasIndex("CustCityCode2");

                    b.HasIndex("CustDefExpAcCode");

                    b.HasIndex("SalesTermsCode");

                    b.ToTable("tblSndDefCustomerMaster");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseSetup.TblPopDefVendorCategory", b =>
                {
                    b.Property<string>("VenCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("VenCatDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VenCatName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VenCatCode");

                    b.ToTable("tblPopDefVendorCategory");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseSetup.TblPopDefVendorPOTermsCode", b =>
                {
                    b.Property<string>("POTermsCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<short>("POTermDiscDays")
                        .HasColumnType("smallint");

                    b.Property<string>("POTermsDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("POTermsDueDays")
                        .HasColumnType("smallint");

                    b.Property<string>("POTermsName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("POTermsCode");

                    b.ToTable("tblPopDefVendorPOTermsCode");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseSetup.TblPopDefVendorShipment", b =>
                {
                    b.Property<string>("ShipmentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ShipmentDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipmentType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ShipmentCode");

                    b.ToTable("tblPopDefVendorShipment");
                });

            modelBuilder.Entity("CIN.Domain.SalesSetup.TblSndDefCustomerCategory", b =>
                {
                    b.Property<string>("CustCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustCatDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustCatName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("CustCatCode");

                    b.ToTable("tblSndDefCustomerCategory");
                });

            modelBuilder.Entity("CIN.Domain.SalesSetup.TblSndDefSalesShipment", b =>
                {
                    b.Property<string>("ShipmentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ShipmentDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipmentType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ShipmentCode");

                    b.ToTable("tblSndDefSalesShipment");
                });

            modelBuilder.Entity("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", b =>
                {
                    b.Property<string>("SalesTermsCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<short>("SalesTermDiscDays")
                        .HasColumnType("smallint");

                    b.Property<string>("SalesTermsDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("SalesTermsDueDays")
                        .HasColumnType("smallint");

                    b.Property<string>("SalesTermsName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SalesTermsCode");

                    b.ToTable("tblSndDefSalesTermsCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCityCode", b =>
                {
                    b.Property<string>("CityCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CityCode");

                    b.HasIndex("StateCode");

                    b.ToTable("tblErpSysCityCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateFormat")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GeoLocLatitude")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("GeoLocLongitude")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LogoImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LogoURL")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PriceDecimal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("QuantityDecimal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("State")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VATNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblErpSysCompany");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AuthorityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("GeoLocLatitude")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("GeoLocLongitude")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("State")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("BranchCode");

                    b.HasIndex("City");

                    b.HasIndex("CompanyId");

                    b.ToTable("tblErpSysCompanyBranches");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCountryCode", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CountryCode");

                    b.ToTable("tblErpSysCountryCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCurrencyCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("BuyingRate")
                        .HasColumnType("real");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Lastupdated")
                        .HasColumnType("date");

                    b.Property<float>("SellingRate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.ToTable("tblErpSysCurrencyCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ImagePath")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimaryBranch")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SwpireCardId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryBranch");

                    b.ToTable("tblErpSysLogin");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysMenuLoginId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsAllowed")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("MenuCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.HasIndex("MenuCode");

                    b.ToTable("tblErpSysMenuLoginId");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysMenuOption", b =>
                {
                    b.Property<string>("MenuCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsForm")
                        .HasColumnType("bit");

                    b.Property<short>("Level1")
                        .HasColumnType("smallint");

                    b.Property<short>("Level2")
                        .HasColumnType("smallint");

                    b.Property<short>("Level3")
                        .HasColumnType("smallint");

                    b.Property<string>("MenuNameArb")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MenuNameEng")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Path")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("MenuCode");

                    b.ToTable("tblErpSysMenuOption");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysStateCode", b =>
                {
                    b.Property<string>("StateCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StateCode");

                    b.HasIndex("CountryCode");

                    b.ToTable("tblErpSysStateCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysSystemTax", b =>
                {
                    b.Property<string>("TaxCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InputAcCode01")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InputAcCode02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InputAcCode03")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InputAcCode04")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InputAcCode05")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterState")
                        .HasColumnType("bit");

                    b.Property<string>("OutputAcCode01")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OutputAcCode02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OutputAcCode03")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OutputAcCode04")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OutputAcCode05")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxComponent01")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxComponent02")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxComponent03")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxComponent04")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxComponent05")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Taxper01")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal?>("Taxper02")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal?>("Taxper03")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal?>("Taxper04")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal?>("Taxper05")
                        .HasColumnType("decimal(6,3)");

                    b.HasKey("TaxCode");

                    b.ToTable("tblErpSysSystemTaxes");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysTransactionCode", b =>
                {
                    b.Property<string>("TransactionCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("TransactionCode");

                    b.ToTable("tblErpSysTransactionCodes");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysTransactionSequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LastSeqNum")
                        .HasColumnType("int");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("PrefixFinYear")
                        .HasColumnType("bit");

                    b.Property<bool>("ResetAfterFYClosing")
                        .HasColumnType("bit");

                    b.Property<string>("TransactionCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("TransactionCode");

                    b.ToTable("tblErpSysTransactionSequence");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysUserBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("LoginId");

                    b.ToTable("tblErpSysUserBranch");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("UerType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UerType" }, "IX_tblErpSysUserType_UerType")
                        .IsUnique()
                        .HasFilter("[UerType] IS NOT NULL");

                    b.ToTable("tblErpSysUserType");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountBranches", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("FinBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountCategory", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinSysAccountType", "FinAccountType")
                        .WithMany()
                        .HasForeignKey("FinType")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinAccountType");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountSubCategory", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefAccountCategory", "FinAccountCategory")
                        .WithMany()
                        .HasForeignKey("FinCatCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinAccountCategory");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountlPaycodes", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("FinBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinIntMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinPayAcIntgrAC")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinPdcMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinPayPDCClearAC")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinIntMainAccounts");

                    b.Navigation("FinPdcMainAccounts");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBankCheckLeaves", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefAccountlPaycodes", "FinAccountlPaycodes")
                        .WithMany()
                        .HasForeignKey("FinPayCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinAccountlPaycodes");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBranchesAuthority", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("FinBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBranchesMainAccounts", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinAcCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("FinBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinMainAccounts");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefCenters", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinCenterCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefDistributionGroup", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvAdjAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvAdjAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvAssetAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvCOGSAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvCOGSAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvCashPOACMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvCashPOAC")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvCostCorAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvCostCorAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvDefaultAPAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvDefaultAPAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvInTransitAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvInTransitAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvNonAssetAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvNonAssetAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvSalesAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvSalesAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvWIPAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvWIPAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvWriteOffAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvWriteOffAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinInvAdjAcMainAccounts");

                    b.Navigation("FinInvCashPOACMainAccounts");

                    b.Navigation("FinInvCOGSAcMainAccounts");

                    b.Navigation("FinInvCostCorAcMainAccounts");

                    b.Navigation("FinInvDefaultAPAcMainAccounts");

                    b.Navigation("FinInvInTransitAcMainAccounts");

                    b.Navigation("FinInvNonAssetAcMainAccounts");

                    b.Navigation("FinInvSalesAcMainAccounts");

                    b.Navigation("FinInvWIPAcMainAccounts");

                    b.Navigation("FinInvWriteOffAcMainAccounts");

                    b.Navigation("FinMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefInventoryConfig", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefWarehouse", "InvWarehouse")
                        .WithMany()
                        .HasForeignKey("CentralWHCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvWarehouse");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefSubCategory", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefCategory", "InvCategory")
                        .WithMany()
                        .HasForeignKey("ItemCatCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvCategory");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefWarehouse", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefDistributionGroup", "InvDistributionGroup")
                        .WithMany()
                        .HasForeignKey("InvDistGroup")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("WHBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvDistributionGroup");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerApproval", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerInvoice", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerStatement", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefProduct", b =>
                {
                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranDefProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranDefUnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProductType");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranInvoice", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", "SndSalesTermsCode")
                        .WithMany()
                        .HasForeignKey("PaymentTerms")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndSalesTermsCode");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranInvoiceItem", b =>
                {
                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranDefProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "CustARAcMA")
                        .WithMany()
                        .HasForeignKey("CustARAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysCustARAdjAcCode")
                        .WithMany()
                        .HasForeignKey("CustARAdjAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysCustARDiscAcCode")
                        .WithMany()
                        .HasForeignKey("CustARDiscAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysCustArAcCode")
                        .WithMany()
                        .HasForeignKey("CustArAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefCustomerCategory", "SndDefCustomerCategory")
                        .WithMany()
                        .HasForeignKey("CustCatCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCityCode", "sysCityCode1")
                        .WithMany()
                        .HasForeignKey("CustCityCode1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCityCode", "sysCityCode2")
                        .WithMany()
                        .HasForeignKey("CustCityCode2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysCustDefExpAcCode")
                        .WithMany()
                        .HasForeignKey("CustDefExpAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", "SndDefSalestermsCode")
                        .WithMany()
                        .HasForeignKey("SalesTermsCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustARAcMA");

                    b.Navigation("SndDefCustomerCategory");

                    b.Navigation("SndDefSalestermsCode");

                    b.Navigation("sysCityCode1");

                    b.Navigation("sysCityCode2");

                    b.Navigation("sysCustArAcCode");

                    b.Navigation("sysCustARAdjAcCode");

                    b.Navigation("sysCustARDiscAcCode");

                    b.Navigation("sysCustDefExpAcCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCityCode", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysStateCode", "SysStateCode")
                        .WithMany()
                        .HasForeignKey("StateCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysStateCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCityCode", "SysCityCode")
                        .WithMany()
                        .HasForeignKey("City")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCityCode");

                    b.Navigation("SysCompany");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCurrencyCode", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCountryCode", "SysCountryCode")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCountryCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysLogin", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("PrimaryBranch")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysMenuLoginId", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysMenuOption", "SysMenuOption")
                        .WithMany()
                        .HasForeignKey("MenuCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysLogin");

                    b.Navigation("SysMenuOption");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysStateCode", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCountryCode", "SysCountryCode")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCountryCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysTransactionSequence", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysTransactionCode", "SysTransactionCode")
                        .WithMany()
                        .HasForeignKey("TransactionCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysTransactionCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysUserBranch", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });
#pragma warning restore 612, 618
        }
    }
}
